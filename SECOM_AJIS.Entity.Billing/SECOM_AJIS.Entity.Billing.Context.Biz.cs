//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.EntityClient;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace SECOM_AJIS.DataEntity.Billing
{
    public partial class BizBLDataEntities
    {
        #region Methods
    		public virtual List<doTbt_BillingBasic> GetBillingBasic(string contractCode, string billingOCC, string billingTargetCode, string billingClientCode, string billingOfficeCode, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingBasic(contractCode, billingOCC, billingTargetCode, billingClientCode, billingOfficeCode, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbt_BillingBasic> UpdateTbt_BillingBasicData(string xml_doTbtBillingBasic)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_BillingBasicData(xml_doTbtBillingBasic).ToList();
    		}
    		public virtual List<tbt_BillingTypeDetail> GetTbt_BillingTypeDetail(string contractCode, string billingOCC, string billingTypeCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingTypeDetail(contractCode, billingOCC, billingTypeCode).ToList();
    		}
    		public virtual List<tbt_BillingTypeDetail> InsertTbt_BillingTypeDetailData(string xml_BillingTypeDetail)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_BillingTypeDetailData(xml_BillingTypeDetail).ToList();
    		}
    		public virtual List<tbt_BillingTarget> GetTbt_BillingTarget(string billingTargetCode, string billingClientCode, string billingOfficeCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingTarget(billingTargetCode, billingClientCode, billingOfficeCode).ToList();
    		}
    		public virtual List<string> GenerateBillingTargetNo(string billingClientCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GenerateBillingTargetNo(billingClientCode).ToList();
    		}
    		public virtual List<tbt_BillingTarget> InsertTbt_BillingTargetData(string xml_BillingTarget)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_BillingTargetData(xml_BillingTarget).ToList();
    		}
    		public virtual List<BillingBasicList> GetBillingBasicList(string contractCode, string c_CUST_TYPE)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingBasicList(contractCode, c_CUST_TYPE).ToList();
    		}
    		public virtual List<string> GetBillingOCC(string contractCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingOCC(contractCode).ToList();
    		}
    		public virtual List<tbt_BillingBasic> InsertTbt_BillingBasicData(string xml_BillingBasic)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_BillingBasicData(xml_BillingBasic).ToList();
    		}
    		public virtual List<tbt_MonthlyBillingHistory> GetLastBillingHistory(string contractCode, string billingOCC, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetLastBillingHistory(contractCode, billingOCC, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbt_MonthlyBillingHistory> UpdateTbt_MonthlyBillingHistoryData(string xml_doTbtMonthlyBillingHistory)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_MonthlyBillingHistoryData(xml_doTbtMonthlyBillingHistory).ToList();
    		}
    		public virtual List<tbt_MonthlyBillingHistory> InsertTbt_MonthlyBillingHistory(string xml_MonthlyBillingHistory)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_MonthlyBillingHistory(xml_MonthlyBillingHistory).ToList();
    		}
    		public virtual List<Nullable<int>> GetBillingDetailNo(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailNo(contractCode, billingOCC).ToList();
    		}
    		public virtual List<tbt_BillingDetail> InsertTbt_BillingDetail(string xml_BillingDetail)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_BillingDetail(xml_BillingDetail).ToList();
    		}
    		public virtual List<tbt_BillingBasic> GetTbt_BillingBasic(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingBasic(contractCode, billingOCC).ToList();
    		}
    		public virtual List<tbt_AutoTransferBankAccount> GetTbt_AutoTransferBankAccount(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_AutoTransferBankAccount(contractCode, billingOCC).ToList();
    		}
    		public virtual List<tbt_CreditCard> GetTbt_CreditCard(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_CreditCard(contractCode, billingOCC).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetAutoTransferDate(string bankCode, string autoTransferDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetAutoTransferDate(bankCode, autoTransferDate).ToList();
    		}
    		public virtual List<tbt_BillingBasic> GetTbt_BillingBasicListData(string contractCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingBasicListData(contractCode).ToList();
    		}
    		public virtual List<tbt_MonthlyBillingHistory> GetBillingHistoryPeriodList(string contractCode, string billingOCC, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingHistoryPeriodList(contractCode, billingOCC, fromDate, toDate).ToList();
    		}
    		public virtual List<BillingTypeDetail> GetBillingTypeDetailContinues(string contractCode, string billingOCC, string c_BILLING_TYPE_GROUP_CONTINUES)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingTypeDetailContinues(contractCode, billingOCC, c_BILLING_TYPE_GROUP_CONTINUES).ToList();
    		}
    		public virtual List<dtTbt_BillingTargetForView> GetTbt_BillingTargetForView(string billingTargetCode, string c_CUST_TYPE)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingTargetForView(billingTargetCode, c_CUST_TYPE).ToList();
    		}
    		public virtual List<tbt_BillingTarget> UpdateTbt_BillingTarget(string xml_doTbtBillingTarget)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_BillingTarget(xml_doTbtBillingTarget).ToList();
    		}
    		public virtual List<tbt_CreditCard> InsertTbt_CreditCard(string xml_DocCancelContractMemoDetail)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_CreditCard(xml_DocCancelContractMemoDetail).ToList();
    		}
    		public virtual List<tbt_AutoTransferBankAccount> InsertTbt_AutoTransferBankAccount(string xml_DocCancelContractMemoDetail)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_AutoTransferBankAccount(xml_DocCancelContractMemoDetail).ToList();
    		}
    		public virtual List<doBillingDetail> GetBillingDetailForCombine(string billingTargetCode, string billingTypeCode, string c_CURRENCY_LOCAL, string c_CURRENCY_US, string c_CURRENCY)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailForCombine(billingTargetCode, billingTypeCode, c_CURRENCY_LOCAL, c_CURRENCY_US, c_CURRENCY).ToList();
    		}
    		public virtual List<tbt_BillingTypeDetail> DeleteTbt_BillingTypeDetailData(string contractCode, string billingOCC, string billingTypeCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.DeleteTbt_BillingTypeDetailData(contractCode, billingOCC, billingTypeCode).ToList();
    		}
    		public virtual List<tbt_BillingTypeDetail> UpdateTbt_BillingTypeDetailData(string xml_doTbt_BillingTypeDetail)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_BillingTypeDetailData(xml_doTbt_BillingTypeDetail).ToList();
    		}
    		public virtual List<tbt_CreditCard> UpdateTbt_CreditCard(string xml_dotbt_CreditCard)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_CreditCard(xml_dotbt_CreditCard).ToList();
    		}
    		public virtual List<tbt_CreditCard> DeleteTbt_CreditCard(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.DeleteTbt_CreditCard(contractCode, billingOCC).ToList();
    		}
    		public virtual List<tbt_AutoTransferBankAccount> UpdateTbt_AutoTransferBankAccountData(string xml_doTbtAutoTransferBankAccount)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_AutoTransferBankAccountData(xml_doTbtAutoTransferBankAccount).ToList();
    		}
    		public virtual List<tbt_AutoTransferBankAccount> DeleteTbt_autoTransferBankAccountdata(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.DeleteTbt_autoTransferBankAccountdata(contractCode, billingOCC).ToList();
    		}
    		public virtual List<doTbt_MonthlyBillingHistoryList> GetBillingHistoryList(string contractCode, string billingOCC, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingHistoryList(contractCode, billingOCC, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<doBillingTypeDetailList> GetBillingTypeDetailList(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingTypeDetailList(contractCode, billingOCC).ToList();
    		}
    		public virtual List<dtTbt_AutoTransferBankAccountForView> GetTbt_AutoTransferBankAccountForView(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_AutoTransferBankAccountForView(contractCode, billingOCC).ToList();
    		}
    		public virtual List<dtViewBillingBasic> GetViewBillingBasic(string strContractCode, string strBillingOCC, string strBillingClientCode, string strBillingTargetCode, string strBillingCilentname, string strAddress)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingBasic(strContractCode, strBillingOCC, strBillingClientCode, strBillingTargetCode, strBillingCilentname, strAddress).ToList();
    		}
    		public virtual List<dtViewBillingOccList> GetViewBillingOccList(string strContractCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingOccList(strContractCode).ToList();
    		}
    		public virtual List<doGetBillingDetailForCancel> GetBillingDetailForCancel(string contractCode, string billingOCC, string paymentStatus, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailForCancel(contractCode, billingOCC, paymentStatus, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<doCheckInvoiceSameAccount> CheckInvoiceSameAccount(string invoiceNo, Nullable<int> invoiceOCC, string paymentMethod)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.CheckInvoiceSameAccount(invoiceNo, invoiceOCC, paymentMethod).ToList();
    		}
    		public virtual List<doGetBillingDetailContinues> GetBillingDetailContinues(string contractCode, string billingOCC, string paymentStatus, string c_BILLING_TYPE_GROUP_CONTINUES)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailContinues(contractCode, billingOCC, paymentStatus, c_BILLING_TYPE_GROUP_CONTINUES).ToList();
    		}
    		public virtual List<doGetBillingDetailOfInvoice> GetBillingDetailOfInvoice(string invoiceNo, Nullable<int> invoiceOCC, string paymentStatus, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailOfInvoice(invoiceNo, invoiceOCC, paymentStatus, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbt_MonthlyBillingHistory> GetFirstBillingHistory(string contractCode, string billingOCC, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetFirstBillingHistory(contractCode, billingOCC, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<doGetUnpaidInvoiceData> GetUnpaidInvoiceData(string invoiceNo, string invoicePaymentStatus)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetUnpaidInvoiceData(invoiceNo, invoicePaymentStatus).ToList();
    		}
    		public virtual List<tbt_BillingDetail> GetTbt_BillingDetailData(string contractCode, string billingOCC, Nullable<int> billingDetailNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingDetailData(contractCode, billingOCC, billingDetailNo).ToList();
    		}
    		public virtual List<tbt_BillingDetail> DeleteTbt_BillingDetailData(string contractCode, string billingOCC, Nullable<int> billingDetailNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.DeleteTbt_BillingDetailData(contractCode, billingOCC, billingDetailNo).ToList();
    		}
    		public virtual List<tbt_BillingDetail> UpdateTbt_BillingDetailData(string xml_doTbt_BillingDetail)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_BillingDetailData(xml_doTbt_BillingDetail).ToList();
    		}
    		public virtual int DeleteTbt_Invoice(string invoiceNo, Nullable<int> invoiceOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.DeleteTbt_Invoice(invoiceNo, invoiceOCC);
    		}
    		public virtual List<tbt_Invoice> GetTbt_Invoice(string invoiceNo, Nullable<int> invoiceOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_Invoice(invoiceNo, invoiceOCC).ToList();
    		}
    		public virtual List<tbt_Invoice> InsertTbt_Invoice(string xmlTbt_Invoice)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_Invoice(xmlTbt_Invoice).ToList();
    		}
    		public virtual List<tbt_Invoice> UpdateTbt_Invoice(string xml_doTbt_Invoice)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_Invoice(xml_doTbt_Invoice).ToList();
    		}
    		public virtual List<dtTbt_CreditCardForView> GetTbt_CreditCardForView(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_CreditCardForView(contractCode, billingOCC).ToList();
    		}
    		public virtual List<doTax> GetTaxCharged(string contractCode, string billingOCC, string billingTypeCode, Nullable<System.DateTime> invoiceDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTaxCharged(contractCode, billingOCC, billingTypeCode, invoiceDate).ToList();
    		}
    		public virtual List<string> GetInvoiceOCC(string invoiceNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetInvoiceOCC(invoiceNo).ToList();
    		}
    		public virtual List<string> GetInvoiceRunningNo(string runningType, string year, string month, string operateBy, Nullable<System.DateTime> operateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetInvoiceRunningNo(runningType, year, month, operateBy, operateDate).ToList();
    		}
    		public virtual List<tbt_TaxInvoice> InsertTbt_TaxInvoice(string xmlTbt_TaxInvoice)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_TaxInvoice(xmlTbt_TaxInvoice).ToList();
    		}
    		public virtual List<tbt_TaxInvoice> GetTaxInvoice(string invoiceNo, Nullable<int> invoiceOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTaxInvoice(invoiceNo, invoiceOCC).ToList();
    		}
    		public virtual List<tbt_TaxInvoice> GetTbt_TaxInvoice(string taxInvoiceNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_TaxInvoice(taxInvoiceNo).ToList();
    		}
    		public virtual List<tbt_TaxInvoice> UpdateTbt_TaxInvoice(string xml_doTbt_TaxInvoice)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_TaxInvoice(xml_doTbt_TaxInvoice).ToList();
    		}
    		public virtual List<tbt_Depositfee> GetDepositFee(string contractCode, string billingOCC, string invoiceNo, string depositStatus, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetDepositFee(contractCode, billingOCC, invoiceNo, depositStatus, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbt_Depositfee> GetTbt_Depositfee(string contractCode, string billingOCC, Nullable<int> depositFeeNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_Depositfee(contractCode, billingOCC, depositFeeNo).ToList();
    		}
    		public virtual List<tbt_Depositfee> InsertTbt_Depositfee(string xmlTbt_Depositfee)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_Depositfee(xmlTbt_Depositfee).ToList();
    		}
    		public virtual List<tbt_Depositfee> UpdateTbt_Depositfee(string xml_doTbt_Depositfee)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateTbt_Depositfee(xml_doTbt_Depositfee).ToList();
    		}
    		public virtual List<dtViewBillingDetailList> GetViewBillingDetailList(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingDetailList(contractCode, billingOCC).ToList();
    		}
    		public virtual List<dtTbt_BillingBasicForView> GetTbt_BillingBasicForView(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingBasicForView(contractCode, billingOCC).ToList();
    		}
    		public virtual List<dtViewBillingDetailListOfLastInvoiceOCC> GetViewBillingDetailListOfLastInvoiceOCC(string invoiceNo, string billingClientCode, string billingTargetCode, string billingCilentname, string address)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingDetailListOfLastInvoiceOCC(invoiceNo, billingClientCode, billingTargetCode, billingCilentname, address).ToList();
    		}
    		public virtual List<dtViewDepositDetailInformation> GetViewDepositDetailInformation(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewDepositDetailInformation(contractCode, billingOCC).ToList();
    		}
    		public virtual List<dtViewBillingBasicList> GetViewBillingBasicList(string billingClientCode, string billingTargetCode, string billingClientName, string address, string invoiceNo, string taxIDNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingBasicList(billingClientCode, billingTargetCode, billingClientName, address, invoiceNo, taxIDNo).ToList();
    		}
    		public virtual List<dtViewBillingInvoiceListOfLastInvoiceOcc> GetViewBillingInvoiceListOfLastInvoiceOcc(string billingClientCode, string billingTargetCode, string billingCilentname, string address, string invoiceNo, string taxIDNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingInvoiceListOfLastInvoiceOcc(billingClientCode, billingTargetCode, billingCilentname, address, invoiceNo, taxIDNo).ToList();
    		}
    		public virtual List<doBillingTargetList> GetViewBillingTargetList(string billingClientCode, string billingTargetCode, string billingClientName, string address, string invoiceNo, string taxIDNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingTargetList(billingClientCode, billingTargetCode, billingClientName, address, invoiceNo, taxIDNo).ToList();
    		}
    		public virtual List<doCheckInvoiceSameAccountNo> CheckInvoiceSameAccountNo_AUTO_TRANFER(string invoiceNo, Nullable<int> invoiceOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.CheckInvoiceSameAccountNo_AUTO_TRANFER(invoiceNo, invoiceOCC).ToList();
    		}
    		public virtual List<doCheckInvoiceSameAccountNo> CheckInvoiceSameAccountNo_CREDIT_CARD(string invoiceNo, Nullable<int> invoiceOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.CheckInvoiceSameAccountNo_CREDIT_CARD(invoiceNo, invoiceOCC).ToList();
    		}
    		public virtual List<tbt_BillingDetail> GetBillingDetailPartialFeeList(string contractCode, string billingOCC, string billingTypeCode, string paymentStatus, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailPartialFeeList(contractCode, billingOCC, billingTypeCode, paymentStatus, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetNextAutoTransferDate(string bankCode, string autoTransferDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetNextAutoTransferDate(bankCode, autoTransferDate).ToList();
    		}
    		public virtual List<tbt_ExportAutoTransfer> GetTbt_ExportAutoTransfer(Nullable<int> exportAutoTransferID)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_ExportAutoTransfer(exportAutoTransferID).ToList();
    		}
    		public virtual List<tbt_ExportAutoTransfer> GetExportAutoTransfer(string bankCode, Nullable<System.DateTime> autoTransferDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetExportAutoTransfer(bankCode, autoTransferDate).ToList();
    		}
    		public virtual List<doGetBankAutoTransferDateForGen> GetBankAutoTransferDateForGen()
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBankAutoTransferDateForGen().ToList();
    		}
    		public virtual List<doGetInvoiceForGenBankFile> GetInvoiceForGenBankFile(string bankCode, string autoTransferDate, string invoicePaymentStatus)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetInvoiceForGenBankFile(bankCode, autoTransferDate, invoicePaymentStatus).ToList();
    		}
    		public virtual List<tbt_ExportAutoTransfer> InsertTbt_ExportAutoTransfer(string bankCode, string bankBranchCode, Nullable<System.DateTime> generateDate, Nullable<System.DateTime> autoTransferDate, string filePath, string fileName, Nullable<System.DateTime> createDate, string createBy, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_ExportAutoTransfer(bankCode, bankBranchCode, generateDate, autoTransferDate, filePath, fileName, createDate, createBy, updateDate, updateBy).ToList();
    		}
    		public virtual List<dtBillingTargetData> GetViewBillingTargetDataForSearch(string billingCilentCode, string billingOfficeCode, string billingCilentname, string custTypeCode, string companyTypeCode, string regionCode, string businessTypeCode, string address, string phoneNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingTargetDataForSearch(billingCilentCode, billingOfficeCode, billingCilentname, custTypeCode, companyTypeCode, regionCode, businessTypeCode, address, phoneNo).ToList();
    		}
    		public virtual List<tbt_Invoice> GetInvoiceOfChangeDate(string contractCode, string billingOCC, Nullable<System.DateTime> changeFeeDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetInvoiceOfChangeDate(contractCode, billingOCC, changeFeeDate).ToList();
    		}
    		public virtual List<tbt_BillingDetail> GetTbt_BillingDetailOfInvoice(string invoiceNo, Nullable<int> invoiceOCC, string c_PAYMENT_STATUS_CANCEL, string c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED, string c_PAYMENT_STATUS_NOTE_FAIL, string c_PAYMENT_STATUS_POST_FAIL)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTbt_BillingDetailOfInvoice(invoiceNo, invoiceOCC, c_PAYMENT_STATUS_CANCEL, c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED, c_PAYMENT_STATUS_NOTE_FAIL, c_PAYMENT_STATUS_POST_FAIL).ToList();
    		}
    		public virtual List<doGetInvoiceWithBillingClientName> GetInvoiceWithBillingClientName(string invoiceNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetInvoiceWithBillingClientName(invoiceNo).ToList();
    		}
    		public virtual List<dtBillingDetailByProcess> GetBillingDetailByProcess(string c_PAYMENT_METHOD_AUTO_TRANFER, string c_PAYMENT_METHOD_BANK_TRANSFER, string c_PAYMENT_METHOD_CREDIT_CARD, string c_PAYMENT_METHOD_MESSENGER, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_DETAIL_AUTO_CREDIT, string c_BILLING_TYPE_SERVICE, string c_BILLING_TYPE_MA, string c_BILLING_TYPE_SG, string c_BILLING_TYPE_DURING_STOP_SERVICE, string c_BILLING_TYPE_DURING_STOP_MA, string c_BILLING_TYPE_DURING_STOP_SG, string c_BILLING_TYPE_GROUP_CONTINUES, Nullable<System.DateTime> batchDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailByProcess(c_PAYMENT_METHOD_AUTO_TRANFER, c_PAYMENT_METHOD_BANK_TRANSFER, c_PAYMENT_METHOD_CREDIT_CARD, c_PAYMENT_METHOD_MESSENGER, c_PAYMENT_STATUS_INV_BANK_COLLECT, c_PAYMENT_STATUS_DETAIL_AUTO_CREDIT, c_BILLING_TYPE_SERVICE, c_BILLING_TYPE_MA, c_BILLING_TYPE_SG, c_BILLING_TYPE_DURING_STOP_SERVICE, c_BILLING_TYPE_DURING_STOP_MA, c_BILLING_TYPE_DURING_STOP_SG, c_BILLING_TYPE_GROUP_CONTINUES, batchDate).ToList();
    		}
    		public virtual List<dtViewBillingDetailList> GetViewBillingDetailListByTargetCode(string billingTargetCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingDetailListByTargetCode(billingTargetCode).ToList();
    		}
    		public virtual List<dtBillingDetailForCreateInvoice> GetBillingDetailForCreateInvoice(string c_CUST_TYPE_JURISTIC, string c_PAYMENT_STATUS_CANCEL, string c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED, string c_PAYMENT_STATUS_NOTE_FAIL, string c_PAYMENT_STATUS_POST_FAIL, string c_SEP_INV_CONTRACT_CODE_ASCE, string c_SEP_INV_SORT_ASCE, string c_SEP_INV_SORT_DESC, string c_SEP_INV_SAME_TYPE_CONTRACT_CODE_ASCE, string c_SEP_INV_SAME_TYPE_SORT_ASCE, string c_SEP_INV_SAME_TYPE_SORT_DESC, string c_BILLING_TYPE_GROUP_CONTINUES, string c_BILLING_TYPE_GROUP_DEPOSIT, string c_SEP_INV_EACH_CONTRACT, Nullable<System.DateTime> batchDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailForCreateInvoice(c_CUST_TYPE_JURISTIC, c_PAYMENT_STATUS_CANCEL, c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED, c_PAYMENT_STATUS_NOTE_FAIL, c_PAYMENT_STATUS_POST_FAIL, c_SEP_INV_CONTRACT_CODE_ASCE, c_SEP_INV_SORT_ASCE, c_SEP_INV_SORT_DESC, c_SEP_INV_SAME_TYPE_CONTRACT_CODE_ASCE, c_SEP_INV_SAME_TYPE_SORT_ASCE, c_SEP_INV_SAME_TYPE_SORT_DESC, c_BILLING_TYPE_GROUP_CONTINUES, c_BILLING_TYPE_GROUP_DEPOSIT, c_SEP_INV_EACH_CONTRACT, batchDate).ToList();
    		}
    		public virtual List<doInvoice> GetInvoice(string invoiceNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetInvoice(invoiceNo, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbt_TaxInvoice> UpdateReceiptNo(string invoiceNo, Nullable<int> invoiceOCC, string receiptNo, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateReceiptNo(invoiceNo, invoiceOCC, receiptNo, updateBy, updateDate).ToList();
    		}
    		public virtual List<tbt_BillingBasic> UpdateBalanceDepositOfBillingBasic(string contractCode, string billingOCC, Nullable<decimal> adjustAmount, string updateBy, Nullable<System.DateTime> updateDate, Nullable<decimal> adjustAmountUsd, string balanceDepositCurrencyType)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateBalanceDepositOfBillingBasic(contractCode, billingOCC, adjustAmount, updateBy, updateDate, adjustAmountUsd, balanceDepositCurrencyType).ToList();
    		}
    		public virtual List<doRefundInfo> GetRefundInfo(string paymentTransNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetRefundInfo(paymentTransNo).ToList();
    		}
    		public virtual int UpdateBillingDetailByBatch(string xml_tbt_BillingDetail)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateBillingDetailByBatch(xml_tbt_BillingDetail);
    		}
    		public virtual List<dtDownloadAutoTransferBankFile> GetDownloadAutoTransferBankFile(Nullable<int> secomAccountID, Nullable<System.DateTime> autoTransferDateFrom, Nullable<System.DateTime> autoTransferDateTo, Nullable<System.DateTime> generateDateFrom, Nullable<System.DateTime> generateDateTo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetDownloadAutoTransferBankFile(secomAccountID, autoTransferDateFrom, autoTransferDateTo, generateDateFrom, generateDateTo).ToList();
    		}
    		public virtual List<dtBillingContract> GetBillingContract(string contractCode, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingContract(contractCode, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<dtBillingBasicForRentalList> GetBillingBasicForRentalList(string contractCode, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingBasicForRentalList(contractCode, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbt_BillingBasic> UpdateMonthlyBillingAmount(string xml_doTbtBillingBasic)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateMonthlyBillingAmount(xml_doTbtBillingBasic).ToList();
    		}
    		public virtual List<dtRptInvoiceHeader> GetRptInvoiceHeader(string invoiceNo, string c_SHOW_DUEDATE, string c_SHOW_DUEDATE_7, string c_SHOW_DUEDATE_30, string c_SHOW_DUEDATE_14, string c_SHOW_DUEDATE_NONE)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetRptInvoiceHeader(invoiceNo, c_SHOW_DUEDATE, c_SHOW_DUEDATE_7, c_SHOW_DUEDATE_30, c_SHOW_DUEDATE_14, c_SHOW_DUEDATE_NONE).ToList();
    		}
    		public virtual List<dtRptInvoiceDetail> GetRptInvoiceDetail(string invoiceNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetRptInvoiceDetail(invoiceNo).ToList();
    		}
    		public virtual List<dtRptInvoice> GetRptInvoice(string invoiceNo, string c_SHOW_DUEDATE, string c_SHOW_DUEDATE_7, string c_SHOW_DUEDATE_30, string c_SHOW_DUEDATE_14, string c_SHOW_DUEDATE_NONE)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetRptInvoice(invoiceNo, c_SHOW_DUEDATE, c_SHOW_DUEDATE_7, c_SHOW_DUEDATE_30, c_SHOW_DUEDATE_14, c_SHOW_DUEDATE_NONE).ToList();
    		}
    		public virtual List<dtRptTaxInvoice> GetRptTaxInvoice(string taxInvoiceNo, string c_SHOW_DUEDATE, string c_SHOW_DUEDATE_7, string c_SHOW_DUEDATE_30, string c_SHOW_DUEDATE_14, string c_SHOW_DUEDATE_NONE)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetRptTaxInvoice(taxInvoiceNo, c_SHOW_DUEDATE, c_SHOW_DUEDATE_7, c_SHOW_DUEDATE_30, c_SHOW_DUEDATE_14, c_SHOW_DUEDATE_NONE).ToList();
    		}
    		public virtual List<dtRptPaymentForm> GetRptPaymentForm(string invoiceNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetRptPaymentForm(invoiceNo).ToList();
    		}
    		public virtual List<tbt_AutoTransferBankAccount> UpdateAutoTransferAccountLastResult(string invoiceNo, string lastestResult, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateAutoTransferAccountLastResult(invoiceNo, lastestResult, updateBy, updateDate).ToList();
    		}
    		public virtual int CheckTaxInvoiceIssued(string invoiceNo, Nullable<int> invoiceOCC, ObjectParameter isIssued)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.CheckTaxInvoiceIssued(invoiceNo, invoiceOCC, isIssued);
    		}
    		public virtual List<doGetBalanceDepositByBillingCode> GetBalanceDepositByBillingCode(string strContractCode, string strBillingOCC, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBalanceDepositByBillingCode(strContractCode, strBillingOCC, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<doGetBillingCodeInfo> GetBillingCodeInfo(string strBillingCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingCodeInfo(strBillingCode).ToList();
    		}
    		public virtual List<tbt_Depositfee> GetLatestDepositFee(string strContracCode, string strBillingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetLatestDepositFee(strContracCode, strBillingOCC).ToList();
    		}
    		public virtual List<doGetTaxInvoiceForIC> GetTaxInvoiceForIC(string strTaxInvoiceNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTaxInvoiceForIC(strTaxInvoiceNo).ToList();
    		}
    		public virtual List<tbt_Depositfee> UpdateReceiptNoDepositFee(string invoiceNo, string receiptNo, string updateBy, Nullable<System.DateTime> updateDate, string c_DEPOSIT_STATUS_PAYMENT)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateReceiptNoDepositFee(invoiceNo, receiptNo, updateBy, updateDate, c_DEPOSIT_STATUS_PAYMENT).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetLastWorkingDay(Nullable<System.DateTime> checkingDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetLastWorkingDay(checkingDate).ToList();
    		}
    		public virtual List<tbt_BillingDetail> RegisterBillingDetailExemption(string invoiceNo, Nullable<int> invoiceOCC, string c_PAYMENT_STATUS_BILLING_EXEMPTION, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.RegisterBillingDetailExemption(invoiceNo, invoiceOCC, c_PAYMENT_STATUS_BILLING_EXEMPTION, updateBy, updateDate).ToList();
    		}
    		public virtual List<tbt_Invoice> RegisterInvoiceExemption(string invoiceNo, Nullable<int> invoiceOCC, string c_PAYMENT_STATUS_BILLING_EXEMPTION, string exemptApproveNo, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.RegisterInvoiceExemption(invoiceNo, invoiceOCC, c_PAYMENT_STATUS_BILLING_EXEMPTION, exemptApproveNo, updateBy, updateDate).ToList();
    		}
    		public virtual List<tbt_TaxInvoice> GetTaxInvoiceByInvoiceNo(string invoiceNo, Nullable<int> invoiceOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetTaxInvoiceByInvoiceNo(invoiceNo, invoiceOCC).ToList();
    		}
    		public virtual List<tbt_TaxInvoice> CancelTaxInvoice(string taxInvoiceNo, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.CancelTaxInvoice(taxInvoiceNo, updateBy, updateDate).ToList();
    		}
    		public virtual int CheckExistReceiptForInvoice(string invoiceNo, Nullable<int> invoiceOCC, ObjectParameter iS_EXIST)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.CheckExistReceiptForInvoice(invoiceNo, invoiceOCC, iS_EXIST);
    		}
    		public virtual int CheckInvoiceIssuedTaxInvoice(string invoiceNo, Nullable<int> invoiceOCC, ObjectParameter iS_ISSUED)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.CheckInvoiceIssuedTaxInvoice(invoiceNo, invoiceOCC, iS_ISSUED);
    		}
    		public virtual List<tbt_Invoice> UpdateInvoiceCorrectionReason(string invoiceNo, Nullable<int> invoiceOCC, string correctReason, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateInvoiceCorrectionReason(invoiceNo, invoiceOCC, correctReason, updateBy, updateDate).ToList();
    		}
    		public virtual List<tbt_BillingDetail> GetBillingDetailAutoTransferList(string contractCode, string billingOCC, string pC_PAYMENT_STATUS_INV_AUTO_CREDIT, string pC_PAYMENT_STATUS_DETAIL_AUTO_CREDIT, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailAutoTransferList(contractCode, billingOCC, pC_PAYMENT_STATUS_INV_AUTO_CREDIT, pC_PAYMENT_STATUS_DETAIL_AUTO_CREDIT, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<dtAutoTransferBankAccountForView> GetAutoTransferBankAccountForView(string contractCode, string billingOCC, string pC_ACCOUNT_TYPE, string pC_SHOW_AUTO_TRANSFER_RESULT)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetAutoTransferBankAccountForView(contractCode, billingOCC, pC_ACCOUNT_TYPE, pC_SHOW_AUTO_TRANSFER_RESULT).ToList();
    		}
    		public virtual List<dtCreditCardForView> GetCreditCardForView(string contractCode, string billingOCC, string pC_CREDIT_CARD_TYPE)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetCreditCardForView(contractCode, billingOCC, pC_CREDIT_CARD_TYPE).ToList();
    		}
    		public virtual List<doBLS050GetBillingBasic> BLS050_GetBillingBasic(string contractCode, string billingOCC, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.BLS050_GetBillingBasic(contractCode, billingOCC, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<doBLS050GetBillingDetailForCancelList> BLS050_GetBillingDetailForCancelList(string contractCode, string billingOCC, string paymentStatus, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.BLS050_GetBillingDetailForCancelList(contractCode, billingOCC, paymentStatus, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<doBLS050GetTbt_BillingTargetForView> BLS050_GetTbt_BillingTargetForView(string billingTargetCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.BLS050_GetTbt_BillingTargetForView(billingTargetCode).ToList();
    		}
    		public virtual List<tbt_Invoice> UpdateFirstIssue(string strDocumentNo, string documentOCC, Nullable<System.DateTime> batchDate, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateFirstIssue(strDocumentNo, documentOCC, batchDate, updateDate, updateBy).ToList();
    		}
    		public virtual List<doGetBillingDetailOfInvoice> GetBillingDetailByKey(string contractCode, string billingOCC, Nullable<int> billingDetailNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingDetailByKey(contractCode, billingOCC, billingDetailNo, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbt_AutoTransferBankAccount> GetAutoTransferBankAccountByContract(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetAutoTransferBankAccountByContract(contractCode, billingOCC).ToList();
    		}
    		public virtual List<tbt_CreditCard> GetCreditCardByContract(string contractCode, string billingOCC)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetCreditCardByContract(contractCode, billingOCC).ToList();
    		}
    		public virtual List<dtViewBillingOccList> GetViewBillingOCCListForDepositFree(string contractCode)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetViewBillingOCCListForDepositFree(contractCode).ToList();
    		}
    		public virtual List<doVATMaster> GetVATMaster(string billingTypeCode, Nullable<System.DateTime> invoiceDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetVATMaster(billingTypeCode, invoiceDate).ToList();
    		}
    		public virtual List<tbt_Depositfee> UpdateReceiptNoDepositFeeCancelReceipt(string invoiceNo, string receiptNo, string updateBy, Nullable<System.DateTime> updateDate, string c_DEPOSIT_STATUS_PAYMENT)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateReceiptNoDepositFeeCancelReceipt(invoiceNo, receiptNo, updateBy, updateDate, c_DEPOSIT_STATUS_PAYMENT).ToList();
    		}
    		public virtual List<tbt_BillingBasic> GetBillingBasicByCreditNoteNo(string creditNoteNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetBillingBasicByCreditNoteNo(creditNoteNo).ToList();
    		}
    		public virtual List<tbt_BillingBasic> UpdateDebtTracingOffice(string billingTargetCode, string billingOfficeCode, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.UpdateDebtTracingOffice(billingTargetCode, billingOfficeCode, updateBy, updateDate).ToList();
    		}
    		public virtual List<dtGetRptDocReceipt> BL_GetRptDocReceipt(string invoiceNo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.sp_BL_GetRptDocReceipt(invoiceNo).ToList();
    		}
    		public virtual List<tbt_InvoiceIssueList> InsertTbt_InvoiceIssueList(string xmlTbt_InvoiceIssueList)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.InsertTbt_InvoiceIssueList(xmlTbt_InvoiceIssueList).ToList();
    		}
    		public virtual List<doGetRptInvoiceIssueList> GetRptInvoiceIssueList(Nullable<System.DateTime> pdatGenerateDateFrom, Nullable<System.DateTime> pdatGenerateDateTo)
    		{
    			BLDataEntities context = new BLDataEntities();
    			return context.GetRptInvoiceIssueList(pdatGenerateDateFrom, pdatGenerateDateTo).ToList();
    		}

        #endregion

    }
}
