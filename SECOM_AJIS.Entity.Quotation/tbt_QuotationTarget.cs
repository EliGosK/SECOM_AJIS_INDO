//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SECOM_AJIS.DataEntity.Quotation
{
    public partial class tbt_QuotationTarget
    {
        #region Primitive Properties
    
        public virtual string QuotationTargetCode
        {
            get;
            set;
        }
    
        public virtual string BranchNameEN
        {
            get;
            set;
        }
    
        public virtual string BranchNameLC
        {
            get;
            set;
        }
    
        public virtual string BranchAddressEN
        {
            get;
            set;
        }
    
        public virtual string BranchAddressLC
        {
            get;
            set;
        }
    
        public virtual string ProductTypeCode
        {
            get;
            set;
        }
    
        public virtual string PrefixCode
        {
            get;
            set;
        }
    
        public virtual string ServiceTypeCode
        {
            get;
            set;
        }
    
        public virtual string TargetCodeTypeCode
        {
            get;
            set;
        }
    
        public virtual string QuotationOfficeCode
        {
            get;
            set;
        }
    
        public virtual string OperationOfficeCode
        {
            get;
            set;
        }
    
        public virtual string AcquisitionTypeCode
        {
            get;
            set;
        }
    
        public virtual string IntroducerCode
        {
            get;
            set;
        }
    
        public virtual string MotivationTypeCode
        {
            get;
            set;
        }
    
        public virtual string OldContractCode
        {
            get;
            set;
        }
    
        public virtual string QuotationStaffEmpNo
        {
            get;
            set;
        }
    
        public virtual string LastAlphabet
        {
            get;
            set;
        }
    
        public virtual string ContractTransferStatus
        {
            get;
            set;
        }
    
        public virtual string ContractCode
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> TransferDate
        {
            get;
            set;
        }
    
        public virtual string TransferAlphabet
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreateDate
        {
            get;
            set;
        }
    
        public virtual string CreateBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }
    
        public virtual string UpdateBy
        {
            get;
            set;
        }
    
        public virtual string ContractTargetMemo
        {
            get;
            set;
        }
    
        public virtual string RealCustomerMemo
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<tbt_QuotationCustomer> tbt_QuotationCustomer
        {
            get
            {
                if (_tbt_QuotationCustomer == null)
                {
                    var newCollection = new FixupCollection<tbt_QuotationCustomer>();
                    newCollection.CollectionChanged += Fixuptbt_QuotationCustomer;
                    _tbt_QuotationCustomer = newCollection;
                }
                return _tbt_QuotationCustomer;
            }
            set
            {
                if (!ReferenceEquals(_tbt_QuotationCustomer, value))
                {
                    var previousValue = _tbt_QuotationCustomer as FixupCollection<tbt_QuotationCustomer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbt_QuotationCustomer;
                    }
                    _tbt_QuotationCustomer = value;
                    var newValue = value as FixupCollection<tbt_QuotationCustomer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbt_QuotationCustomer;
                    }
                }
            }
        }
        private ICollection<tbt_QuotationCustomer> _tbt_QuotationCustomer;
    
        public virtual tbt_QuotationSite tbt_QuotationSite
        {
            get { return _tbt_QuotationSite; }
            set
            {
                if (!ReferenceEquals(_tbt_QuotationSite, value))
                {
                    var previousValue = _tbt_QuotationSite;
                    _tbt_QuotationSite = value;
                    Fixuptbt_QuotationSite(previousValue);
                }
            }
        }
        private tbt_QuotationSite _tbt_QuotationSite;
    
        public virtual ICollection<tbt_QuotationBasic> tbt_QuotationBasic
        {
            get
            {
                if (_tbt_QuotationBasic == null)
                {
                    var newCollection = new FixupCollection<tbt_QuotationBasic>();
                    newCollection.CollectionChanged += Fixuptbt_QuotationBasic;
                    _tbt_QuotationBasic = newCollection;
                }
                return _tbt_QuotationBasic;
            }
            set
            {
                if (!ReferenceEquals(_tbt_QuotationBasic, value))
                {
                    var previousValue = _tbt_QuotationBasic as FixupCollection<tbt_QuotationBasic>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbt_QuotationBasic;
                    }
                    _tbt_QuotationBasic = value;
                    var newValue = value as FixupCollection<tbt_QuotationBasic>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbt_QuotationBasic;
                    }
                }
            }
        }
        private ICollection<tbt_QuotationBasic> _tbt_QuotationBasic;

        #endregion

        #region Association Fixup
    
        private void Fixuptbt_QuotationSite(tbt_QuotationSite previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.tbt_QuotationTarget, this))
            {
                previousValue.tbt_QuotationTarget = null;
            }
    
            if (tbt_QuotationSite != null)
            {
                tbt_QuotationSite.tbt_QuotationTarget = this;
            }
        }
    
        private void Fixuptbt_QuotationCustomer(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbt_QuotationCustomer item in e.NewItems)
                {
                    item.tbt_QuotationTarget = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbt_QuotationCustomer item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbt_QuotationTarget, this))
                    {
                        item.tbt_QuotationTarget = null;
                    }
                }
            }
        }
    
        private void Fixuptbt_QuotationBasic(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbt_QuotationBasic item in e.NewItems)
                {
                    item.tbt_QuotationTarget = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbt_QuotationBasic item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbt_QuotationTarget, this))
                    {
                        item.tbt_QuotationTarget = null;
                    }
                }
            }
        }

        #endregion

    }
}
