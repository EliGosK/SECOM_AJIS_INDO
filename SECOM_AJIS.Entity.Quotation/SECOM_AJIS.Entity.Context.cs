//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SECOM_AJIS.DataEntity.Quotation
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class QUDataEntities : DbContext
    {
        public QUDataEntities()
            : base("name=QUDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tbt_QuotationTarget> tbt_QuotationTarget { get; set; }
        public DbSet<tbt_QuotationBeatGuardDetails> tbt_QuotationBeatGuardDetails { get; set; }
        public DbSet<tbt_QuotationCustomer> tbt_QuotationCustomer { get; set; }
        public DbSet<tbt_QuotationFacilityDetails> tbt_QuotationFacilityDetails { get; set; }
        public DbSet<tbt_QuotationInstrumentDetails> tbt_QuotationInstrumentDetails { get; set; }
        public DbSet<tbt_QuotationMaintenanceLinkage> tbt_QuotationMaintenanceLinkage { get; set; }
        public DbSet<tbt_QuotationOperationType> tbt_QuotationOperationType { get; set; }
        public DbSet<tbt_QuotationSentryGuardDetails> tbt_QuotationSentryGuardDetails { get; set; }
        public DbSet<tbt_QuotationSite> tbt_QuotationSite { get; set; }
        public DbSet<tbt_QuotationBasic> tbt_QuotationBasic { get; set; }
        public DbSet<tbt_QuotationInstallationDetail> tbt_QuotationInstallationDetail { get; set; }
    
        public virtual ObjectResult<dtSearchQuotationTargetListResult> SearchQuotationTargetList(string quotationTargetCode, string productTypeCode, string quotationOfficeCode, string operationOfficeCode, string contractTargetCode, string contractTargetName, string contractTargetAddr, string siteCode, string siteName, string siteAddr, string empNo, string empName, Nullable<System.DateTime> quotationDateFrom, Nullable<System.DateTime> quotationDateTo, string c_CUST_PART_TYPE_CONTRACT_TARGET, string c_TARGET_CODE_TYPE_QTN_CODE, string c_CONTRACT_TRANS_STATUS_CONTRACT_APP, string c_TARGET_CODE_TYPE_CONTRACT_CODE, string xmlOfficeData)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var productTypeCodeParameter = productTypeCode != null ?
                new ObjectParameter("ProductTypeCode", productTypeCode) :
                new ObjectParameter("ProductTypeCode", typeof(string));
    
            var quotationOfficeCodeParameter = quotationOfficeCode != null ?
                new ObjectParameter("QuotationOfficeCode", quotationOfficeCode) :
                new ObjectParameter("QuotationOfficeCode", typeof(string));
    
            var operationOfficeCodeParameter = operationOfficeCode != null ?
                new ObjectParameter("OperationOfficeCode", operationOfficeCode) :
                new ObjectParameter("OperationOfficeCode", typeof(string));
    
            var contractTargetCodeParameter = contractTargetCode != null ?
                new ObjectParameter("ContractTargetCode", contractTargetCode) :
                new ObjectParameter("ContractTargetCode", typeof(string));
    
            var contractTargetNameParameter = contractTargetName != null ?
                new ObjectParameter("ContractTargetName", contractTargetName) :
                new ObjectParameter("ContractTargetName", typeof(string));
    
            var contractTargetAddrParameter = contractTargetAddr != null ?
                new ObjectParameter("ContractTargetAddr", contractTargetAddr) :
                new ObjectParameter("ContractTargetAddr", typeof(string));
    
            var siteCodeParameter = siteCode != null ?
                new ObjectParameter("SiteCode", siteCode) :
                new ObjectParameter("SiteCode", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var siteAddrParameter = siteAddr != null ?
                new ObjectParameter("SiteAddr", siteAddr) :
                new ObjectParameter("SiteAddr", typeof(string));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(string));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var quotationDateFromParameter = quotationDateFrom.HasValue ?
                new ObjectParameter("QuotationDateFrom", quotationDateFrom) :
                new ObjectParameter("QuotationDateFrom", typeof(System.DateTime));
    
            var quotationDateToParameter = quotationDateTo.HasValue ?
                new ObjectParameter("QuotationDateTo", quotationDateTo) :
                new ObjectParameter("QuotationDateTo", typeof(System.DateTime));
    
            var c_CUST_PART_TYPE_CONTRACT_TARGETParameter = c_CUST_PART_TYPE_CONTRACT_TARGET != null ?
                new ObjectParameter("C_CUST_PART_TYPE_CONTRACT_TARGET", c_CUST_PART_TYPE_CONTRACT_TARGET) :
                new ObjectParameter("C_CUST_PART_TYPE_CONTRACT_TARGET", typeof(string));
    
            var c_TARGET_CODE_TYPE_QTN_CODEParameter = c_TARGET_CODE_TYPE_QTN_CODE != null ?
                new ObjectParameter("C_TARGET_CODE_TYPE_QTN_CODE", c_TARGET_CODE_TYPE_QTN_CODE) :
                new ObjectParameter("C_TARGET_CODE_TYPE_QTN_CODE", typeof(string));
    
            var c_CONTRACT_TRANS_STATUS_CONTRACT_APPParameter = c_CONTRACT_TRANS_STATUS_CONTRACT_APP != null ?
                new ObjectParameter("C_CONTRACT_TRANS_STATUS_CONTRACT_APP", c_CONTRACT_TRANS_STATUS_CONTRACT_APP) :
                new ObjectParameter("C_CONTRACT_TRANS_STATUS_CONTRACT_APP", typeof(string));
    
            var c_TARGET_CODE_TYPE_CONTRACT_CODEParameter = c_TARGET_CODE_TYPE_CONTRACT_CODE != null ?
                new ObjectParameter("C_TARGET_CODE_TYPE_CONTRACT_CODE", c_TARGET_CODE_TYPE_CONTRACT_CODE) :
                new ObjectParameter("C_TARGET_CODE_TYPE_CONTRACT_CODE", typeof(string));
    
            var xmlOfficeDataParameter = xmlOfficeData != null ?
                new ObjectParameter("xmlOfficeData", xmlOfficeData) :
                new ObjectParameter("xmlOfficeData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSearchQuotationTargetListResult>("SearchQuotationTargetList", quotationTargetCodeParameter, productTypeCodeParameter, quotationOfficeCodeParameter, operationOfficeCodeParameter, contractTargetCodeParameter, contractTargetNameParameter, contractTargetAddrParameter, siteCodeParameter, siteNameParameter, siteAddrParameter, empNoParameter, empNameParameter, quotationDateFromParameter, quotationDateToParameter, c_CUST_PART_TYPE_CONTRACT_TARGETParameter, c_TARGET_CODE_TYPE_QTN_CODEParameter, c_CONTRACT_TRANS_STATUS_CONTRACT_APPParameter, c_TARGET_CODE_TYPE_CONTRACT_CODEParameter, xmlOfficeDataParameter);
        }
    
        public virtual ObjectResult<dtSearchQuotationListResult> SearchQuotationList(string pC_CUST_PART_TYPE_CONTRACT_TARGET, string pQuotationTargetCode, string pAlphabet, string pProductTypeCode, string pLockStatus, string pQuotationOfficeCode, string pOperationOfficeCode, string pContractTargetCode, string pContractTargetName, string pContractTargetAddr, string pSiteCode, string pSiteName, string pSiteAddr, string pEmpNo, string pEmpName, Nullable<System.DateTime> pQuotationDateFrom, Nullable<System.DateTime> pQuotationDateTo, string pServiceTypeCode, string pTargetCodeTypeCode, string pContractTransferStatus)
        {
            var pC_CUST_PART_TYPE_CONTRACT_TARGETParameter = pC_CUST_PART_TYPE_CONTRACT_TARGET != null ?
                new ObjectParameter("pC_CUST_PART_TYPE_CONTRACT_TARGET", pC_CUST_PART_TYPE_CONTRACT_TARGET) :
                new ObjectParameter("pC_CUST_PART_TYPE_CONTRACT_TARGET", typeof(string));
    
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pAlphabetParameter = pAlphabet != null ?
                new ObjectParameter("pAlphabet", pAlphabet) :
                new ObjectParameter("pAlphabet", typeof(string));
    
            var pProductTypeCodeParameter = pProductTypeCode != null ?
                new ObjectParameter("pProductTypeCode", pProductTypeCode) :
                new ObjectParameter("pProductTypeCode", typeof(string));
    
            var pLockStatusParameter = pLockStatus != null ?
                new ObjectParameter("pLockStatus", pLockStatus) :
                new ObjectParameter("pLockStatus", typeof(string));
    
            var pQuotationOfficeCodeParameter = pQuotationOfficeCode != null ?
                new ObjectParameter("pQuotationOfficeCode", pQuotationOfficeCode) :
                new ObjectParameter("pQuotationOfficeCode", typeof(string));
    
            var pOperationOfficeCodeParameter = pOperationOfficeCode != null ?
                new ObjectParameter("pOperationOfficeCode", pOperationOfficeCode) :
                new ObjectParameter("pOperationOfficeCode", typeof(string));
    
            var pContractTargetCodeParameter = pContractTargetCode != null ?
                new ObjectParameter("pContractTargetCode", pContractTargetCode) :
                new ObjectParameter("pContractTargetCode", typeof(string));
    
            var pContractTargetNameParameter = pContractTargetName != null ?
                new ObjectParameter("pContractTargetName", pContractTargetName) :
                new ObjectParameter("pContractTargetName", typeof(string));
    
            var pContractTargetAddrParameter = pContractTargetAddr != null ?
                new ObjectParameter("pContractTargetAddr", pContractTargetAddr) :
                new ObjectParameter("pContractTargetAddr", typeof(string));
    
            var pSiteCodeParameter = pSiteCode != null ?
                new ObjectParameter("pSiteCode", pSiteCode) :
                new ObjectParameter("pSiteCode", typeof(string));
    
            var pSiteNameParameter = pSiteName != null ?
                new ObjectParameter("pSiteName", pSiteName) :
                new ObjectParameter("pSiteName", typeof(string));
    
            var pSiteAddrParameter = pSiteAddr != null ?
                new ObjectParameter("pSiteAddr", pSiteAddr) :
                new ObjectParameter("pSiteAddr", typeof(string));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pEmpNameParameter = pEmpName != null ?
                new ObjectParameter("pEmpName", pEmpName) :
                new ObjectParameter("pEmpName", typeof(string));
    
            var pQuotationDateFromParameter = pQuotationDateFrom.HasValue ?
                new ObjectParameter("pQuotationDateFrom", pQuotationDateFrom) :
                new ObjectParameter("pQuotationDateFrom", typeof(System.DateTime));
    
            var pQuotationDateToParameter = pQuotationDateTo.HasValue ?
                new ObjectParameter("pQuotationDateTo", pQuotationDateTo) :
                new ObjectParameter("pQuotationDateTo", typeof(System.DateTime));
    
            var pServiceTypeCodeParameter = pServiceTypeCode != null ?
                new ObjectParameter("pServiceTypeCode", pServiceTypeCode) :
                new ObjectParameter("pServiceTypeCode", typeof(string));
    
            var pTargetCodeTypeCodeParameter = pTargetCodeTypeCode != null ?
                new ObjectParameter("pTargetCodeTypeCode", pTargetCodeTypeCode) :
                new ObjectParameter("pTargetCodeTypeCode", typeof(string));
    
            var pContractTransferStatusParameter = pContractTransferStatus != null ?
                new ObjectParameter("pContractTransferStatus", pContractTransferStatus) :
                new ObjectParameter("pContractTransferStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSearchQuotationListResult>("SearchQuotationList", pC_CUST_PART_TYPE_CONTRACT_TARGETParameter, pQuotationTargetCodeParameter, pAlphabetParameter, pProductTypeCodeParameter, pLockStatusParameter, pQuotationOfficeCodeParameter, pOperationOfficeCodeParameter, pContractTargetCodeParameter, pContractTargetNameParameter, pContractTargetAddrParameter, pSiteCodeParameter, pSiteNameParameter, pSiteAddrParameter, pEmpNoParameter, pEmpNameParameter, pQuotationDateFromParameter, pQuotationDateToParameter, pServiceTypeCodeParameter, pTargetCodeTypeCodeParameter, pContractTransferStatusParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationTarget> GetTbt_QuotationTarget(string quotationTargetCode, string serviceTypeCode, string targetCodeTypeCode, string contractCode)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var serviceTypeCodeParameter = serviceTypeCode != null ?
                new ObjectParameter("ServiceTypeCode", serviceTypeCode) :
                new ObjectParameter("ServiceTypeCode", typeof(string));
    
            var targetCodeTypeCodeParameter = targetCodeTypeCode != null ?
                new ObjectParameter("TargetCodeTypeCode", targetCodeTypeCode) :
                new ObjectParameter("TargetCodeTypeCode", typeof(string));
    
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationTarget>("GetTbt_QuotationTarget", quotationTargetCodeParameter, serviceTypeCodeParameter, targetCodeTypeCodeParameter, contractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationTarget> GetTbt_QuotationTarget(string quotationTargetCode, string serviceTypeCode, string targetCodeTypeCode, string contractCode, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var serviceTypeCodeParameter = serviceTypeCode != null ?
                new ObjectParameter("ServiceTypeCode", serviceTypeCode) :
                new ObjectParameter("ServiceTypeCode", typeof(string));
    
            var targetCodeTypeCodeParameter = targetCodeTypeCode != null ?
                new ObjectParameter("TargetCodeTypeCode", targetCodeTypeCode) :
                new ObjectParameter("TargetCodeTypeCode", typeof(string));
    
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationTarget>("GetTbt_QuotationTarget", mergeOption, quotationTargetCodeParameter, serviceTypeCodeParameter, targetCodeTypeCodeParameter, contractCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CountQuotationBasicSQL(string pchvQuotationTargetCode)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CountQuotationBasicSQL", pchvQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> LockAll(string pchr_C_LOCK_STATUS_LOCK, string pchr_C_LOCK_STATUS_UNLOCK, Nullable<System.DateTime> pdtmProcessDateTime, string pchrEmpNo, string pchvQuotationTargetCode)
        {
            var pchr_C_LOCK_STATUS_LOCKParameter = pchr_C_LOCK_STATUS_LOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", pchr_C_LOCK_STATUS_LOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", typeof(string));
    
            var pchr_C_LOCK_STATUS_UNLOCKParameter = pchr_C_LOCK_STATUS_UNLOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", pchr_C_LOCK_STATUS_UNLOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", typeof(string));
    
            var pdtmProcessDateTimeParameter = pdtmProcessDateTime.HasValue ?
                new ObjectParameter("pdtmProcessDateTime", pdtmProcessDateTime) :
                new ObjectParameter("pdtmProcessDateTime", typeof(System.DateTime));
    
            var pchrEmpNoParameter = pchrEmpNo != null ?
                new ObjectParameter("pchrEmpNo", pchrEmpNo) :
                new ObjectParameter("pchrEmpNo", typeof(string));
    
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("LockAll", pchr_C_LOCK_STATUS_LOCKParameter, pchr_C_LOCK_STATUS_UNLOCKParameter, pdtmProcessDateTimeParameter, pchrEmpNoParameter, pchvQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> LockAll(string pchr_C_LOCK_STATUS_LOCK, string pchr_C_LOCK_STATUS_UNLOCK, Nullable<System.DateTime> pdtmProcessDateTime, string pchrEmpNo, string pchvQuotationTargetCode, MergeOption mergeOption)
        {
            var pchr_C_LOCK_STATUS_LOCKParameter = pchr_C_LOCK_STATUS_LOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", pchr_C_LOCK_STATUS_LOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", typeof(string));
    
            var pchr_C_LOCK_STATUS_UNLOCKParameter = pchr_C_LOCK_STATUS_UNLOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", pchr_C_LOCK_STATUS_UNLOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", typeof(string));
    
            var pdtmProcessDateTimeParameter = pdtmProcessDateTime.HasValue ?
                new ObjectParameter("pdtmProcessDateTime", pdtmProcessDateTime) :
                new ObjectParameter("pdtmProcessDateTime", typeof(System.DateTime));
    
            var pchrEmpNoParameter = pchrEmpNo != null ?
                new ObjectParameter("pchrEmpNo", pchrEmpNo) :
                new ObjectParameter("pchrEmpNo", typeof(string));
    
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("LockAll", mergeOption, pchr_C_LOCK_STATUS_LOCKParameter, pchr_C_LOCK_STATUS_UNLOCKParameter, pdtmProcessDateTimeParameter, pchrEmpNoParameter, pchvQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> LockBackward(string pchr_C_LOCK_STATUS_LOCK, string pchr_C_LOCK_STATUS_UNLOCK, Nullable<System.DateTime> pdtmProcessDateTime, string pchrEmpNo, string pchvQuotationTargetCode, string pchrAlphabet)
        {
            var pchr_C_LOCK_STATUS_LOCKParameter = pchr_C_LOCK_STATUS_LOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", pchr_C_LOCK_STATUS_LOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", typeof(string));
    
            var pchr_C_LOCK_STATUS_UNLOCKParameter = pchr_C_LOCK_STATUS_UNLOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", pchr_C_LOCK_STATUS_UNLOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", typeof(string));
    
            var pdtmProcessDateTimeParameter = pdtmProcessDateTime.HasValue ?
                new ObjectParameter("pdtmProcessDateTime", pdtmProcessDateTime) :
                new ObjectParameter("pdtmProcessDateTime", typeof(System.DateTime));
    
            var pchrEmpNoParameter = pchrEmpNo != null ?
                new ObjectParameter("pchrEmpNo", pchrEmpNo) :
                new ObjectParameter("pchrEmpNo", typeof(string));
    
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("LockBackward", pchr_C_LOCK_STATUS_LOCKParameter, pchr_C_LOCK_STATUS_UNLOCKParameter, pdtmProcessDateTimeParameter, pchrEmpNoParameter, pchvQuotationTargetCodeParameter, pchrAlphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> LockBackward(string pchr_C_LOCK_STATUS_LOCK, string pchr_C_LOCK_STATUS_UNLOCK, Nullable<System.DateTime> pdtmProcessDateTime, string pchrEmpNo, string pchvQuotationTargetCode, string pchrAlphabet, MergeOption mergeOption)
        {
            var pchr_C_LOCK_STATUS_LOCKParameter = pchr_C_LOCK_STATUS_LOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", pchr_C_LOCK_STATUS_LOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_LOCK", typeof(string));
    
            var pchr_C_LOCK_STATUS_UNLOCKParameter = pchr_C_LOCK_STATUS_UNLOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", pchr_C_LOCK_STATUS_UNLOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", typeof(string));
    
            var pdtmProcessDateTimeParameter = pdtmProcessDateTime.HasValue ?
                new ObjectParameter("pdtmProcessDateTime", pdtmProcessDateTime) :
                new ObjectParameter("pdtmProcessDateTime", typeof(System.DateTime));
    
            var pchrEmpNoParameter = pchrEmpNo != null ?
                new ObjectParameter("pchrEmpNo", pchrEmpNo) :
                new ObjectParameter("pchrEmpNo", typeof(string));
    
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("LockBackward", mergeOption, pchr_C_LOCK_STATUS_LOCKParameter, pchr_C_LOCK_STATUS_UNLOCKParameter, pdtmProcessDateTimeParameter, pchrEmpNoParameter, pchvQuotationTargetCodeParameter, pchrAlphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> LockIndividual(string pchvnQuotationTargetCode, string pchrAlphabet, string pchrC_LOCK_STATUS_LOCK, string pchr_C_LOCK_STATUS_UNLOCK, Nullable<System.DateTime> pdatProcessDateTime, string pchvEmpno)
        {
            var pchvnQuotationTargetCodeParameter = pchvnQuotationTargetCode != null ?
                new ObjectParameter("pchvnQuotationTargetCode", pchvnQuotationTargetCode) :
                new ObjectParameter("pchvnQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrC_LOCK_STATUS_LOCKParameter = pchrC_LOCK_STATUS_LOCK != null ?
                new ObjectParameter("pchrC_LOCK_STATUS_LOCK", pchrC_LOCK_STATUS_LOCK) :
                new ObjectParameter("pchrC_LOCK_STATUS_LOCK", typeof(string));
    
            var pchr_C_LOCK_STATUS_UNLOCKParameter = pchr_C_LOCK_STATUS_UNLOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", pchr_C_LOCK_STATUS_UNLOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", typeof(string));
    
            var pdatProcessDateTimeParameter = pdatProcessDateTime.HasValue ?
                new ObjectParameter("pdatProcessDateTime", pdatProcessDateTime) :
                new ObjectParameter("pdatProcessDateTime", typeof(System.DateTime));
    
            var pchvEmpnoParameter = pchvEmpno != null ?
                new ObjectParameter("pchvEmpno", pchvEmpno) :
                new ObjectParameter("pchvEmpno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("LockIndividual", pchvnQuotationTargetCodeParameter, pchrAlphabetParameter, pchrC_LOCK_STATUS_LOCKParameter, pchr_C_LOCK_STATUS_UNLOCKParameter, pdatProcessDateTimeParameter, pchvEmpnoParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> LockIndividual(string pchvnQuotationTargetCode, string pchrAlphabet, string pchrC_LOCK_STATUS_LOCK, string pchr_C_LOCK_STATUS_UNLOCK, Nullable<System.DateTime> pdatProcessDateTime, string pchvEmpno, MergeOption mergeOption)
        {
            var pchvnQuotationTargetCodeParameter = pchvnQuotationTargetCode != null ?
                new ObjectParameter("pchvnQuotationTargetCode", pchvnQuotationTargetCode) :
                new ObjectParameter("pchvnQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrC_LOCK_STATUS_LOCKParameter = pchrC_LOCK_STATUS_LOCK != null ?
                new ObjectParameter("pchrC_LOCK_STATUS_LOCK", pchrC_LOCK_STATUS_LOCK) :
                new ObjectParameter("pchrC_LOCK_STATUS_LOCK", typeof(string));
    
            var pchr_C_LOCK_STATUS_UNLOCKParameter = pchr_C_LOCK_STATUS_UNLOCK != null ?
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", pchr_C_LOCK_STATUS_UNLOCK) :
                new ObjectParameter("pchr_C_LOCK_STATUS_UNLOCK", typeof(string));
    
            var pdatProcessDateTimeParameter = pdatProcessDateTime.HasValue ?
                new ObjectParameter("pdatProcessDateTime", pdatProcessDateTime) :
                new ObjectParameter("pdatProcessDateTime", typeof(System.DateTime));
    
            var pchvEmpnoParameter = pchvEmpno != null ?
                new ObjectParameter("pchvEmpno", pchvEmpno) :
                new ObjectParameter("pchvEmpno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("LockIndividual", mergeOption, pchvnQuotationTargetCodeParameter, pchrAlphabetParameter, pchrC_LOCK_STATUS_LOCKParameter, pchr_C_LOCK_STATUS_UNLOCKParameter, pdatProcessDateTimeParameter, pchvEmpnoParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> GetQuotationBasicData(string pchvQuotationTargetCode, string pchrAlphabet)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("GetQuotationBasicData", pchvQuotationTargetCodeParameter, pchrAlphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> GetQuotationBasicData(string pchvQuotationTargetCode, string pchrAlphabet, MergeOption mergeOption)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("GetQuotationBasicData", mergeOption, pchvQuotationTargetCodeParameter, pchrAlphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationCustomer> GetTbt_QuotationCustomer(string quotationTargetCode)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationCustomer>("GetTbt_QuotationCustomer", quotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationCustomer> GetTbt_QuotationCustomer(string quotationTargetCode, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationCustomer>("GetTbt_QuotationCustomer", mergeOption, quotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSite> GetTbt_QuotationSite(string quotationTargetCode)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSite>("GetTbt_QuotationSite", quotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSite> GetTbt_QuotationSite(string quotationTargetCode, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSite>("GetTbt_QuotationSite", mergeOption, quotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstrumentDetails> GetTbt_QuotationInstrumentDetails(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstrumentDetails>("GetTbt_QuotationInstrumentDetails", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstrumentDetails> GetTbt_QuotationInstrumentDetails(string quotationTargetCode, string alphabet, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstrumentDetails>("GetTbt_QuotationInstrumentDetails", mergeOption, quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationOperationType> GetTbt_QuotationOperationType(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationOperationType>("GetTbt_QuotationOperationType", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationOperationType> GetTbt_QuotationOperationType(string quotationTargetCode, string alphabet, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationOperationType>("GetTbt_QuotationOperationType", mergeOption, quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationFacilityDetails> GetTbt_QuotationFacilityDetails(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationFacilityDetails>("GetTbt_QuotationFacilityDetails", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationFacilityDetails> GetTbt_QuotationFacilityDetails(string quotationTargetCode, string alphabet, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationFacilityDetails>("GetTbt_QuotationFacilityDetails", mergeOption, quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSentryGuardDetails> GetTbt_QuotationSentryGuardDetails(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSentryGuardDetails>("GetTbt_QuotationSentryGuardDetails", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSentryGuardDetails> GetTbt_QuotationSentryGuardDetails(string quotationTargetCode, string alphabet, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSentryGuardDetails>("GetTbt_QuotationSentryGuardDetails", mergeOption, quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBeatGuardDetails> GetTbt_QuotationBeatGuardDetails(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBeatGuardDetails>("GetTbt_QuotationBeatGuardDetails", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBeatGuardDetails> GetTbt_QuotationBeatGuardDetails(string quotationTargetCode, string alphabet, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBeatGuardDetails>("GetTbt_QuotationBeatGuardDetails", mergeOption, quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationMaintenanceLinkage> GetTbt_QuotationMaintenanceLinkage(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationMaintenanceLinkage>("GetTbt_QuotationMaintenanceLinkage", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationMaintenanceLinkage> GetTbt_QuotationMaintenanceLinkage(string quotationTargetCode, string alphabet, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationMaintenanceLinkage>("GetTbt_QuotationMaintenanceLinkage", mergeOption, quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<doQuotationTarget> GetQuotationTarget(string pchr_C_ACQUISITION_TYPE, string pchr_C_MOTIVATION_TYPE, string pchrQuotationTargetCode)
        {
            var pchr_C_ACQUISITION_TYPEParameter = pchr_C_ACQUISITION_TYPE != null ?
                new ObjectParameter("pchr_C_ACQUISITION_TYPE", pchr_C_ACQUISITION_TYPE) :
                new ObjectParameter("pchr_C_ACQUISITION_TYPE", typeof(string));
    
            var pchr_C_MOTIVATION_TYPEParameter = pchr_C_MOTIVATION_TYPE != null ?
                new ObjectParameter("pchr_C_MOTIVATION_TYPE", pchr_C_MOTIVATION_TYPE) :
                new ObjectParameter("pchr_C_MOTIVATION_TYPE", typeof(string));
    
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doQuotationTarget>("GetQuotationTarget", pchr_C_ACQUISITION_TYPEParameter, pchr_C_MOTIVATION_TYPEParameter, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<doQuotationSite> GetQuotationSite(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doQuotationSite>("GetQuotationSite", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<doQuotationCustomer> GetQuotationCustomer(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doQuotationCustomer>("GetQuotationCustomer", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<doInstrumentDetail> GetInstrumentDetail(string pchr_C_LINE_UP_TYPE, string pchr_C_PROD_TYPE_SALE, string pchrQuotationTargetCode, string pchrAlphabet, string pchrProductTypeCode)
        {
            var pchr_C_LINE_UP_TYPEParameter = pchr_C_LINE_UP_TYPE != null ?
                new ObjectParameter("pchr_C_LINE_UP_TYPE", pchr_C_LINE_UP_TYPE) :
                new ObjectParameter("pchr_C_LINE_UP_TYPE", typeof(string));
    
            var pchr_C_PROD_TYPE_SALEParameter = pchr_C_PROD_TYPE_SALE != null ?
                new ObjectParameter("pchr_C_PROD_TYPE_SALE", pchr_C_PROD_TYPE_SALE) :
                new ObjectParameter("pchr_C_PROD_TYPE_SALE", typeof(string));
    
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrProductTypeCodeParameter = pchrProductTypeCode != null ?
                new ObjectParameter("pchrProductTypeCode", pchrProductTypeCode) :
                new ObjectParameter("pchrProductTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doInstrumentDetail>("GetInstrumentDetail", pchr_C_LINE_UP_TYPEParameter, pchr_C_PROD_TYPE_SALEParameter, pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pchrProductTypeCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> UpdateQuotationBasic(Nullable<System.DateTime> pdatProcessDateTime, string pchvEmpno, string pchrAlphabet, string pchrContractTransferStatus, string pchvnQuotationTargetCode)
        {
            var pdatProcessDateTimeParameter = pdatProcessDateTime.HasValue ?
                new ObjectParameter("pdatProcessDateTime", pdatProcessDateTime) :
                new ObjectParameter("pdatProcessDateTime", typeof(System.DateTime));
    
            var pchvEmpnoParameter = pchvEmpno != null ?
                new ObjectParameter("pchvEmpno", pchvEmpno) :
                new ObjectParameter("pchvEmpno", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrContractTransferStatusParameter = pchrContractTransferStatus != null ?
                new ObjectParameter("pchrContractTransferStatus", pchrContractTransferStatus) :
                new ObjectParameter("pchrContractTransferStatus", typeof(string));
    
            var pchvnQuotationTargetCodeParameter = pchvnQuotationTargetCode != null ?
                new ObjectParameter("pchvnQuotationTargetCode", pchvnQuotationTargetCode) :
                new ObjectParameter("pchvnQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("UpdateQuotationBasic", pdatProcessDateTimeParameter, pchvEmpnoParameter, pchrAlphabetParameter, pchrContractTransferStatusParameter, pchvnQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> UpdateQuotationBasic(Nullable<System.DateTime> pdatProcessDateTime, string pchvEmpno, string pchrAlphabet, string pchrContractTransferStatus, string pchvnQuotationTargetCode, MergeOption mergeOption)
        {
            var pdatProcessDateTimeParameter = pdatProcessDateTime.HasValue ?
                new ObjectParameter("pdatProcessDateTime", pdatProcessDateTime) :
                new ObjectParameter("pdatProcessDateTime", typeof(System.DateTime));
    
            var pchvEmpnoParameter = pchvEmpno != null ?
                new ObjectParameter("pchvEmpno", pchvEmpno) :
                new ObjectParameter("pchvEmpno", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrContractTransferStatusParameter = pchrContractTransferStatus != null ?
                new ObjectParameter("pchrContractTransferStatus", pchrContractTransferStatus) :
                new ObjectParameter("pchrContractTransferStatus", typeof(string));
    
            var pchvnQuotationTargetCodeParameter = pchvnQuotationTargetCode != null ?
                new ObjectParameter("pchvnQuotationTargetCode", pchvnQuotationTargetCode) :
                new ObjectParameter("pchvnQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("UpdateQuotationBasic", mergeOption, pdatProcessDateTimeParameter, pchvEmpnoParameter, pchrAlphabetParameter, pchrContractTransferStatusParameter, pchvnQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationTarget> UpdateQuotationTarget(string pchrQuotationOfficeCode, string pchrLastAlphabet, string pchrContractTransferStatus, string pchrContractCode, Nullable<System.DateTime> pchrTransferDate, string pchrTransferAlphabet, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy, string pchvQuotationTargetCode, string operationOfficeCode)
        {
            var pchrQuotationOfficeCodeParameter = pchrQuotationOfficeCode != null ?
                new ObjectParameter("pchrQuotationOfficeCode", pchrQuotationOfficeCode) :
                new ObjectParameter("pchrQuotationOfficeCode", typeof(string));
    
            var pchrLastAlphabetParameter = pchrLastAlphabet != null ?
                new ObjectParameter("pchrLastAlphabet", pchrLastAlphabet) :
                new ObjectParameter("pchrLastAlphabet", typeof(string));
    
            var pchrContractTransferStatusParameter = pchrContractTransferStatus != null ?
                new ObjectParameter("pchrContractTransferStatus", pchrContractTransferStatus) :
                new ObjectParameter("pchrContractTransferStatus", typeof(string));
    
            var pchrContractCodeParameter = pchrContractCode != null ?
                new ObjectParameter("pchrContractCode", pchrContractCode) :
                new ObjectParameter("pchrContractCode", typeof(string));
    
            var pchrTransferDateParameter = pchrTransferDate.HasValue ?
                new ObjectParameter("pchrTransferDate", pchrTransferDate) :
                new ObjectParameter("pchrTransferDate", typeof(System.DateTime));
    
            var pchrTransferAlphabetParameter = pchrTransferAlphabet != null ?
                new ObjectParameter("pchrTransferAlphabet", pchrTransferAlphabet) :
                new ObjectParameter("pchrTransferAlphabet", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var operationOfficeCodeParameter = operationOfficeCode != null ?
                new ObjectParameter("OperationOfficeCode", operationOfficeCode) :
                new ObjectParameter("OperationOfficeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationTarget>("UpdateQuotationTarget", pchrQuotationOfficeCodeParameter, pchrLastAlphabetParameter, pchrContractTransferStatusParameter, pchrContractCodeParameter, pchrTransferDateParameter, pchrTransferAlphabetParameter, pdtmUpdateDateParameter, pchvUpdateByParameter, pchvQuotationTargetCodeParameter, operationOfficeCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationTarget> UpdateQuotationTarget(string pchrQuotationOfficeCode, string pchrLastAlphabet, string pchrContractTransferStatus, string pchrContractCode, Nullable<System.DateTime> pchrTransferDate, string pchrTransferAlphabet, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy, string pchvQuotationTargetCode, string operationOfficeCode, MergeOption mergeOption)
        {
            var pchrQuotationOfficeCodeParameter = pchrQuotationOfficeCode != null ?
                new ObjectParameter("pchrQuotationOfficeCode", pchrQuotationOfficeCode) :
                new ObjectParameter("pchrQuotationOfficeCode", typeof(string));
    
            var pchrLastAlphabetParameter = pchrLastAlphabet != null ?
                new ObjectParameter("pchrLastAlphabet", pchrLastAlphabet) :
                new ObjectParameter("pchrLastAlphabet", typeof(string));
    
            var pchrContractTransferStatusParameter = pchrContractTransferStatus != null ?
                new ObjectParameter("pchrContractTransferStatus", pchrContractTransferStatus) :
                new ObjectParameter("pchrContractTransferStatus", typeof(string));
    
            var pchrContractCodeParameter = pchrContractCode != null ?
                new ObjectParameter("pchrContractCode", pchrContractCode) :
                new ObjectParameter("pchrContractCode", typeof(string));
    
            var pchrTransferDateParameter = pchrTransferDate.HasValue ?
                new ObjectParameter("pchrTransferDate", pchrTransferDate) :
                new ObjectParameter("pchrTransferDate", typeof(System.DateTime));
    
            var pchrTransferAlphabetParameter = pchrTransferAlphabet != null ?
                new ObjectParameter("pchrTransferAlphabet", pchrTransferAlphabet) :
                new ObjectParameter("pchrTransferAlphabet", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var operationOfficeCodeParameter = operationOfficeCode != null ?
                new ObjectParameter("OperationOfficeCode", operationOfficeCode) :
                new ObjectParameter("OperationOfficeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationTarget>("UpdateQuotationTarget", mergeOption, pchrQuotationOfficeCodeParameter, pchrLastAlphabetParameter, pchrContractTransferStatusParameter, pchrContractCodeParameter, pchrTransferDateParameter, pchrTransferAlphabetParameter, pdtmUpdateDateParameter, pchvUpdateByParameter, pchvQuotationTargetCodeParameter, operationOfficeCodeParameter);
        }
    
        public virtual ObjectResult<dtBatchProcessResult> DeleteQuotation(Nullable<bool> pbit_C_FLAG_ON, Nullable<bool> pbit_C_FLAG_OFF)
        {
            var pbit_C_FLAG_ONParameter = pbit_C_FLAG_ON.HasValue ?
                new ObjectParameter("pbit_C_FLAG_ON", pbit_C_FLAG_ON) :
                new ObjectParameter("pbit_C_FLAG_ON", typeof(bool));
    
            var pbit_C_FLAG_OFFParameter = pbit_C_FLAG_OFF.HasValue ?
                new ObjectParameter("pbit_C_FLAG_OFF", pbit_C_FLAG_OFF) :
                new ObjectParameter("pbit_C_FLAG_OFF", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtBatchProcessResult>("DeleteQuotation", pbit_C_FLAG_ONParameter, pbit_C_FLAG_OFFParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationOperationType> InsertQuotationOperationType(string pchvQuotationTargetCode, string pchrAlphabet, string pchrOperationTypeCode, Nullable<System.DateTime> pdtmCreateDate, string pchvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrOperationTypeCodeParameter = pchrOperationTypeCode != null ?
                new ObjectParameter("pchrOperationTypeCode", pchrOperationTypeCode) :
                new ObjectParameter("pchrOperationTypeCode", typeof(string));
    
            var pdtmCreateDateParameter = pdtmCreateDate.HasValue ?
                new ObjectParameter("pdtmCreateDate", pdtmCreateDate) :
                new ObjectParameter("pdtmCreateDate", typeof(System.DateTime));
    
            var pchvCreateByParameter = pchvCreateBy != null ?
                new ObjectParameter("pchvCreateBy", pchvCreateBy) :
                new ObjectParameter("pchvCreateBy", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationOperationType>("InsertQuotationOperationType", pchvQuotationTargetCodeParameter, pchrAlphabetParameter, pchrOperationTypeCodeParameter, pdtmCreateDateParameter, pchvCreateByParameter, pdtmUpdateDateParameter, pchvUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationOperationType> InsertQuotationOperationType(string pchvQuotationTargetCode, string pchrAlphabet, string pchrOperationTypeCode, Nullable<System.DateTime> pdtmCreateDate, string pchvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy, MergeOption mergeOption)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrOperationTypeCodeParameter = pchrOperationTypeCode != null ?
                new ObjectParameter("pchrOperationTypeCode", pchrOperationTypeCode) :
                new ObjectParameter("pchrOperationTypeCode", typeof(string));
    
            var pdtmCreateDateParameter = pdtmCreateDate.HasValue ?
                new ObjectParameter("pdtmCreateDate", pdtmCreateDate) :
                new ObjectParameter("pdtmCreateDate", typeof(System.DateTime));
    
            var pchvCreateByParameter = pchvCreateBy != null ?
                new ObjectParameter("pchvCreateBy", pchvCreateBy) :
                new ObjectParameter("pchvCreateBy", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationOperationType>("InsertQuotationOperationType", mergeOption, pchvQuotationTargetCodeParameter, pchrAlphabetParameter, pchrOperationTypeCodeParameter, pdtmCreateDateParameter, pchvCreateByParameter, pdtmUpdateDateParameter, pchvUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstrumentDetails> InsertQuotationInstrumentDetails(string pchvQuotationTargetCode, string pchrAlphabet, string pchvInstrumentCode, Nullable<int> pintInstrumentQty, Nullable<int> pintAddedQty, Nullable<int> pintRemovedQty, Nullable<System.DateTime> pdtmCreateDate, string pchvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchvInstrumentCodeParameter = pchvInstrumentCode != null ?
                new ObjectParameter("pchvInstrumentCode", pchvInstrumentCode) :
                new ObjectParameter("pchvInstrumentCode", typeof(string));
    
            var pintInstrumentQtyParameter = pintInstrumentQty.HasValue ?
                new ObjectParameter("pintInstrumentQty", pintInstrumentQty) :
                new ObjectParameter("pintInstrumentQty", typeof(int));
    
            var pintAddedQtyParameter = pintAddedQty.HasValue ?
                new ObjectParameter("pintAddedQty", pintAddedQty) :
                new ObjectParameter("pintAddedQty", typeof(int));
    
            var pintRemovedQtyParameter = pintRemovedQty.HasValue ?
                new ObjectParameter("pintRemovedQty", pintRemovedQty) :
                new ObjectParameter("pintRemovedQty", typeof(int));
    
            var pdtmCreateDateParameter = pdtmCreateDate.HasValue ?
                new ObjectParameter("pdtmCreateDate", pdtmCreateDate) :
                new ObjectParameter("pdtmCreateDate", typeof(System.DateTime));
    
            var pchvCreateByParameter = pchvCreateBy != null ?
                new ObjectParameter("pchvCreateBy", pchvCreateBy) :
                new ObjectParameter("pchvCreateBy", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstrumentDetails>("InsertQuotationInstrumentDetails", pchvQuotationTargetCodeParameter, pchrAlphabetParameter, pchvInstrumentCodeParameter, pintInstrumentQtyParameter, pintAddedQtyParameter, pintRemovedQtyParameter, pdtmCreateDateParameter, pchvCreateByParameter, pdtmUpdateDateParameter, pchvUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstrumentDetails> InsertQuotationInstrumentDetails(string pchvQuotationTargetCode, string pchrAlphabet, string pchvInstrumentCode, Nullable<int> pintInstrumentQty, Nullable<int> pintAddedQty, Nullable<int> pintRemovedQty, Nullable<System.DateTime> pdtmCreateDate, string pchvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy, MergeOption mergeOption)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchvInstrumentCodeParameter = pchvInstrumentCode != null ?
                new ObjectParameter("pchvInstrumentCode", pchvInstrumentCode) :
                new ObjectParameter("pchvInstrumentCode", typeof(string));
    
            var pintInstrumentQtyParameter = pintInstrumentQty.HasValue ?
                new ObjectParameter("pintInstrumentQty", pintInstrumentQty) :
                new ObjectParameter("pintInstrumentQty", typeof(int));
    
            var pintAddedQtyParameter = pintAddedQty.HasValue ?
                new ObjectParameter("pintAddedQty", pintAddedQty) :
                new ObjectParameter("pintAddedQty", typeof(int));
    
            var pintRemovedQtyParameter = pintRemovedQty.HasValue ?
                new ObjectParameter("pintRemovedQty", pintRemovedQty) :
                new ObjectParameter("pintRemovedQty", typeof(int));
    
            var pdtmCreateDateParameter = pdtmCreateDate.HasValue ?
                new ObjectParameter("pdtmCreateDate", pdtmCreateDate) :
                new ObjectParameter("pdtmCreateDate", typeof(System.DateTime));
    
            var pchvCreateByParameter = pchvCreateBy != null ?
                new ObjectParameter("pchvCreateBy", pchvCreateBy) :
                new ObjectParameter("pchvCreateBy", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstrumentDetails>("InsertQuotationInstrumentDetails", mergeOption, pchvQuotationTargetCodeParameter, pchrAlphabetParameter, pchvInstrumentCodeParameter, pintInstrumentQtyParameter, pintAddedQtyParameter, pintRemovedQtyParameter, pdtmCreateDateParameter, pchvCreateByParameter, pdtmUpdateDateParameter, pchvUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationFacilityDetails> InsertQuotationFacilityDetails(string pchvQuotationTargetCode, string pchrAlphabet, string pchvFacilityCode, Nullable<int> pintFacilityQty, Nullable<System.DateTime> pdtmCreateDate, string pchvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchvFacilityCodeParameter = pchvFacilityCode != null ?
                new ObjectParameter("pchvFacilityCode", pchvFacilityCode) :
                new ObjectParameter("pchvFacilityCode", typeof(string));
    
            var pintFacilityQtyParameter = pintFacilityQty.HasValue ?
                new ObjectParameter("pintFacilityQty", pintFacilityQty) :
                new ObjectParameter("pintFacilityQty", typeof(int));
    
            var pdtmCreateDateParameter = pdtmCreateDate.HasValue ?
                new ObjectParameter("pdtmCreateDate", pdtmCreateDate) :
                new ObjectParameter("pdtmCreateDate", typeof(System.DateTime));
    
            var pchvCreateByParameter = pchvCreateBy != null ?
                new ObjectParameter("pchvCreateBy", pchvCreateBy) :
                new ObjectParameter("pchvCreateBy", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationFacilityDetails>("InsertQuotationFacilityDetails", pchvQuotationTargetCodeParameter, pchrAlphabetParameter, pchvFacilityCodeParameter, pintFacilityQtyParameter, pdtmCreateDateParameter, pchvCreateByParameter, pdtmUpdateDateParameter, pchvUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationFacilityDetails> InsertQuotationFacilityDetails(string pchvQuotationTargetCode, string pchrAlphabet, string pchvFacilityCode, Nullable<int> pintFacilityQty, Nullable<System.DateTime> pdtmCreateDate, string pchvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchvUpdateBy, MergeOption mergeOption)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchvFacilityCodeParameter = pchvFacilityCode != null ?
                new ObjectParameter("pchvFacilityCode", pchvFacilityCode) :
                new ObjectParameter("pchvFacilityCode", typeof(string));
    
            var pintFacilityQtyParameter = pintFacilityQty.HasValue ?
                new ObjectParameter("pintFacilityQty", pintFacilityQty) :
                new ObjectParameter("pintFacilityQty", typeof(int));
    
            var pdtmCreateDateParameter = pdtmCreateDate.HasValue ?
                new ObjectParameter("pdtmCreateDate", pdtmCreateDate) :
                new ObjectParameter("pdtmCreateDate", typeof(System.DateTime));
    
            var pchvCreateByParameter = pchvCreateBy != null ?
                new ObjectParameter("pchvCreateBy", pchvCreateBy) :
                new ObjectParameter("pchvCreateBy", typeof(string));
    
            var pdtmUpdateDateParameter = pdtmUpdateDate.HasValue ?
                new ObjectParameter("pdtmUpdateDate", pdtmUpdateDate) :
                new ObjectParameter("pdtmUpdateDate", typeof(System.DateTime));
    
            var pchvUpdateByParameter = pchvUpdateBy != null ?
                new ObjectParameter("pchvUpdateBy", pchvUpdateBy) :
                new ObjectParameter("pchvUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationFacilityDetails>("InsertQuotationFacilityDetails", mergeOption, pchvQuotationTargetCodeParameter, pchrAlphabetParameter, pchvFacilityCodeParameter, pintFacilityQtyParameter, pdtmCreateDateParameter, pchvCreateByParameter, pdtmUpdateDateParameter, pchvUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> InsertQuotationBasic(string xml_doTbtQuotationBasic)
        {
            var xml_doTbtQuotationBasicParameter = xml_doTbtQuotationBasic != null ?
                new ObjectParameter("xml_doTbtQuotationBasic", xml_doTbtQuotationBasic) :
                new ObjectParameter("xml_doTbtQuotationBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("InsertQuotationBasic", xml_doTbtQuotationBasicParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBasic> InsertQuotationBasic(string xml_doTbtQuotationBasic, MergeOption mergeOption)
        {
            var xml_doTbtQuotationBasicParameter = xml_doTbtQuotationBasic != null ?
                new ObjectParameter("xml_doTbtQuotationBasic", xml_doTbtQuotationBasic) :
                new ObjectParameter("xml_doTbtQuotationBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBasic>("InsertQuotationBasic", mergeOption, xml_doTbtQuotationBasicParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationTarget> InsertQuotationTarget(string xml_QuotationTarget)
        {
            var xml_QuotationTargetParameter = xml_QuotationTarget != null ?
                new ObjectParameter("xml_QuotationTarget", xml_QuotationTarget) :
                new ObjectParameter("xml_QuotationTarget", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationTarget>("InsertQuotationTarget", xml_QuotationTargetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationTarget> InsertQuotationTarget(string xml_QuotationTarget, MergeOption mergeOption)
        {
            var xml_QuotationTargetParameter = xml_QuotationTarget != null ?
                new ObjectParameter("xml_QuotationTarget", xml_QuotationTarget) :
                new ObjectParameter("xml_QuotationTarget", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationTarget>("InsertQuotationTarget", mergeOption, xml_QuotationTargetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationCustomer> InsertQuotationCustomer(string xml_doTbt_QuotationCustomer)
        {
            var xml_doTbt_QuotationCustomerParameter = xml_doTbt_QuotationCustomer != null ?
                new ObjectParameter("xml_doTbt_QuotationCustomer", xml_doTbt_QuotationCustomer) :
                new ObjectParameter("xml_doTbt_QuotationCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationCustomer>("InsertQuotationCustomer", xml_doTbt_QuotationCustomerParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationCustomer> InsertQuotationCustomer(string xml_doTbt_QuotationCustomer, MergeOption mergeOption)
        {
            var xml_doTbt_QuotationCustomerParameter = xml_doTbt_QuotationCustomer != null ?
                new ObjectParameter("xml_doTbt_QuotationCustomer", xml_doTbt_QuotationCustomer) :
                new ObjectParameter("xml_doTbt_QuotationCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationCustomer>("InsertQuotationCustomer", mergeOption, xml_doTbt_QuotationCustomerParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSite> InsertQuotationSite(string xml_doTbt_QuotationSite)
        {
            var xml_doTbt_QuotationSiteParameter = xml_doTbt_QuotationSite != null ?
                new ObjectParameter("xml_doTbt_QuotationSite", xml_doTbt_QuotationSite) :
                new ObjectParameter("xml_doTbt_QuotationSite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSite>("InsertQuotationSite", xml_doTbt_QuotationSiteParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSite> InsertQuotationSite(string xml_doTbt_QuotationSite, MergeOption mergeOption)
        {
            var xml_doTbt_QuotationSiteParameter = xml_doTbt_QuotationSite != null ?
                new ObjectParameter("xml_doTbt_QuotationSite", xml_doTbt_QuotationSite) :
                new ObjectParameter("xml_doTbt_QuotationSite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSite>("InsertQuotationSite", mergeOption, xml_doTbt_QuotationSiteParameter);
        }
    
        public virtual ObjectResult<doQuotationOperationType> GetQuotationOperationType(string pchrQuotationTargetCode, string pchrAlphabet, string pcharC_OPERATION_TYPE)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pcharC_OPERATION_TYPEParameter = pcharC_OPERATION_TYPE != null ?
                new ObjectParameter("pcharC_OPERATION_TYPE", pcharC_OPERATION_TYPE) :
                new ObjectParameter("pcharC_OPERATION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doQuotationOperationType>("GetQuotationOperationType", pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pcharC_OPERATION_TYPEParameter);
        }
    
        public virtual ObjectResult<doFacilityDetail> GetFacilityDetail(string pchrQuotationTargetCode, string pchrAlphabet)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doFacilityDetail>("GetFacilityDetail", pchrQuotationTargetCodeParameter, pchrAlphabetParameter);
        }
    
        public virtual ObjectResult<doBeatGuardDetail> GetBeatGuardDetail(string pchrQuotationTargetCode, string pchrAlphabet, string pcharC_NUM_OF_DATE)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pcharC_NUM_OF_DATEParameter = pcharC_NUM_OF_DATE != null ?
                new ObjectParameter("pcharC_NUM_OF_DATE", pcharC_NUM_OF_DATE) :
                new ObjectParameter("pcharC_NUM_OF_DATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doBeatGuardDetail>("GetBeatGuardDetail", pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pcharC_NUM_OF_DATEParameter);
        }
    
        public virtual ObjectResult<doSentryGuardDetail> GetSentryGuardDetail(string pchrQuotationTargetCode, string pchrAlphabet, string pcharC_SG_TYPE)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pcharC_SG_TYPEParameter = pcharC_SG_TYPE != null ?
                new ObjectParameter("pcharC_SG_TYPE", pcharC_SG_TYPE) :
                new ObjectParameter("pcharC_SG_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doSentryGuardDetail>("GetSentryGuardDetail", pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pcharC_SG_TYPEParameter);
        }
    
        public virtual ObjectResult<doDefaultInstrument> GetDefaultInstrument(string pchrProductCode, string pchrProductTypeCode, string c_LINE_UP_TYPE, string c_LINE_UP_TYPE_STOP_SALE, string c_LINE_UP_TYPE_LOGICAL_DELETE, string c_PROD_TYPE_SALE, string c_INST_TYPE_GENERAL, string c_EXPANSION_TYPE_PARENT, Nullable<bool> blnSaleFlag, Nullable<bool> blnRentalFlag)
        {
            var pchrProductCodeParameter = pchrProductCode != null ?
                new ObjectParameter("pchrProductCode", pchrProductCode) :
                new ObjectParameter("pchrProductCode", typeof(string));
    
            var pchrProductTypeCodeParameter = pchrProductTypeCode != null ?
                new ObjectParameter("pchrProductTypeCode", pchrProductTypeCode) :
                new ObjectParameter("pchrProductTypeCode", typeof(string));
    
            var c_LINE_UP_TYPEParameter = c_LINE_UP_TYPE != null ?
                new ObjectParameter("C_LINE_UP_TYPE", c_LINE_UP_TYPE) :
                new ObjectParameter("C_LINE_UP_TYPE", typeof(string));
    
            var c_LINE_UP_TYPE_STOP_SALEParameter = c_LINE_UP_TYPE_STOP_SALE != null ?
                new ObjectParameter("C_LINE_UP_TYPE_STOP_SALE", c_LINE_UP_TYPE_STOP_SALE) :
                new ObjectParameter("C_LINE_UP_TYPE_STOP_SALE", typeof(string));
    
            var c_LINE_UP_TYPE_LOGICAL_DELETEParameter = c_LINE_UP_TYPE_LOGICAL_DELETE != null ?
                new ObjectParameter("C_LINE_UP_TYPE_LOGICAL_DELETE", c_LINE_UP_TYPE_LOGICAL_DELETE) :
                new ObjectParameter("C_LINE_UP_TYPE_LOGICAL_DELETE", typeof(string));
    
            var c_PROD_TYPE_SALEParameter = c_PROD_TYPE_SALE != null ?
                new ObjectParameter("C_PROD_TYPE_SALE", c_PROD_TYPE_SALE) :
                new ObjectParameter("C_PROD_TYPE_SALE", typeof(string));
    
            var c_INST_TYPE_GENERALParameter = c_INST_TYPE_GENERAL != null ?
                new ObjectParameter("C_INST_TYPE_GENERAL", c_INST_TYPE_GENERAL) :
                new ObjectParameter("C_INST_TYPE_GENERAL", typeof(string));
    
            var c_EXPANSION_TYPE_PARENTParameter = c_EXPANSION_TYPE_PARENT != null ?
                new ObjectParameter("C_EXPANSION_TYPE_PARENT", c_EXPANSION_TYPE_PARENT) :
                new ObjectParameter("C_EXPANSION_TYPE_PARENT", typeof(string));
    
            var blnSaleFlagParameter = blnSaleFlag.HasValue ?
                new ObjectParameter("blnSaleFlag", blnSaleFlag) :
                new ObjectParameter("blnSaleFlag", typeof(bool));
    
            var blnRentalFlagParameter = blnRentalFlag.HasValue ?
                new ObjectParameter("blnRentalFlag", blnRentalFlag) :
                new ObjectParameter("blnRentalFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doDefaultInstrument>("GetDefaultInstrument", pchrProductCodeParameter, pchrProductTypeCodeParameter, c_LINE_UP_TYPEParameter, c_LINE_UP_TYPE_STOP_SALEParameter, c_LINE_UP_TYPE_LOGICAL_DELETEParameter, c_PROD_TYPE_SALEParameter, c_INST_TYPE_GENERALParameter, c_EXPANSION_TYPE_PARENTParameter, blnSaleFlagParameter, blnRentalFlagParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBeatGuardDetails> InsertQuotationBeatGuardDetails(string xml_doTbt_QuotationSite)
        {
            var xml_doTbt_QuotationSiteParameter = xml_doTbt_QuotationSite != null ?
                new ObjectParameter("xml_doTbt_QuotationSite", xml_doTbt_QuotationSite) :
                new ObjectParameter("xml_doTbt_QuotationSite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBeatGuardDetails>("InsertQuotationBeatGuardDetails", xml_doTbt_QuotationSiteParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationBeatGuardDetails> InsertQuotationBeatGuardDetails(string xml_doTbt_QuotationSite, MergeOption mergeOption)
        {
            var xml_doTbt_QuotationSiteParameter = xml_doTbt_QuotationSite != null ?
                new ObjectParameter("xml_doTbt_QuotationSite", xml_doTbt_QuotationSite) :
                new ObjectParameter("xml_doTbt_QuotationSite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationBeatGuardDetails>("InsertQuotationBeatGuardDetails", mergeOption, xml_doTbt_QuotationSiteParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSentryGuardDetails> InsertQuotationSentryGuardDetails(string pchrQuotationTargetCode, string pchrAlphabet, Nullable<int> pintRunningNo, string pchrSentryGuardTypeCode, Nullable<decimal> pdecNumOfDate, Nullable<System.TimeSpan> ptSecurityStartTime, Nullable<System.TimeSpan> ptSecurityFinishTime, Nullable<decimal> pdecWorkHourPerMonth, Nullable<decimal> pdecCostPerHour, Nullable<int> pintNumOfSentryGuard, Nullable<System.DateTime> pdtCreateDate, string pchrCreateBy, Nullable<System.DateTime> pdtUpdateDate, string pdtUpdateBy, Nullable<decimal> pdecCostPerHourUsd, string pdecCostPerCurrencyType)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pintRunningNoParameter = pintRunningNo.HasValue ?
                new ObjectParameter("pintRunningNo", pintRunningNo) :
                new ObjectParameter("pintRunningNo", typeof(int));
    
            var pchrSentryGuardTypeCodeParameter = pchrSentryGuardTypeCode != null ?
                new ObjectParameter("pchrSentryGuardTypeCode", pchrSentryGuardTypeCode) :
                new ObjectParameter("pchrSentryGuardTypeCode", typeof(string));
    
            var pdecNumOfDateParameter = pdecNumOfDate.HasValue ?
                new ObjectParameter("pdecNumOfDate", pdecNumOfDate) :
                new ObjectParameter("pdecNumOfDate", typeof(decimal));
    
            var ptSecurityStartTimeParameter = ptSecurityStartTime.HasValue ?
                new ObjectParameter("ptSecurityStartTime", ptSecurityStartTime) :
                new ObjectParameter("ptSecurityStartTime", typeof(System.TimeSpan));
    
            var ptSecurityFinishTimeParameter = ptSecurityFinishTime.HasValue ?
                new ObjectParameter("ptSecurityFinishTime", ptSecurityFinishTime) :
                new ObjectParameter("ptSecurityFinishTime", typeof(System.TimeSpan));
    
            var pdecWorkHourPerMonthParameter = pdecWorkHourPerMonth.HasValue ?
                new ObjectParameter("pdecWorkHourPerMonth", pdecWorkHourPerMonth) :
                new ObjectParameter("pdecWorkHourPerMonth", typeof(decimal));
    
            var pdecCostPerHourParameter = pdecCostPerHour.HasValue ?
                new ObjectParameter("pdecCostPerHour", pdecCostPerHour) :
                new ObjectParameter("pdecCostPerHour", typeof(decimal));
    
            var pintNumOfSentryGuardParameter = pintNumOfSentryGuard.HasValue ?
                new ObjectParameter("pintNumOfSentryGuard", pintNumOfSentryGuard) :
                new ObjectParameter("pintNumOfSentryGuard", typeof(int));
    
            var pdtCreateDateParameter = pdtCreateDate.HasValue ?
                new ObjectParameter("pdtCreateDate", pdtCreateDate) :
                new ObjectParameter("pdtCreateDate", typeof(System.DateTime));
    
            var pchrCreateByParameter = pchrCreateBy != null ?
                new ObjectParameter("pchrCreateBy", pchrCreateBy) :
                new ObjectParameter("pchrCreateBy", typeof(string));
    
            var pdtUpdateDateParameter = pdtUpdateDate.HasValue ?
                new ObjectParameter("pdtUpdateDate", pdtUpdateDate) :
                new ObjectParameter("pdtUpdateDate", typeof(System.DateTime));
    
            var pdtUpdateByParameter = pdtUpdateBy != null ?
                new ObjectParameter("pdtUpdateBy", pdtUpdateBy) :
                new ObjectParameter("pdtUpdateBy", typeof(string));
    
            var pdecCostPerHourUsdParameter = pdecCostPerHourUsd.HasValue ?
                new ObjectParameter("pdecCostPerHourUsd", pdecCostPerHourUsd) :
                new ObjectParameter("pdecCostPerHourUsd", typeof(decimal));
    
            var pdecCostPerCurrencyTypeParameter = pdecCostPerCurrencyType != null ?
                new ObjectParameter("pdecCostPerCurrencyType", pdecCostPerCurrencyType) :
                new ObjectParameter("pdecCostPerCurrencyType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSentryGuardDetails>("InsertQuotationSentryGuardDetails", pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pintRunningNoParameter, pchrSentryGuardTypeCodeParameter, pdecNumOfDateParameter, ptSecurityStartTimeParameter, ptSecurityFinishTimeParameter, pdecWorkHourPerMonthParameter, pdecCostPerHourParameter, pintNumOfSentryGuardParameter, pdtCreateDateParameter, pchrCreateByParameter, pdtUpdateDateParameter, pdtUpdateByParameter, pdecCostPerHourUsdParameter, pdecCostPerCurrencyTypeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationSentryGuardDetails> InsertQuotationSentryGuardDetails(string pchrQuotationTargetCode, string pchrAlphabet, Nullable<int> pintRunningNo, string pchrSentryGuardTypeCode, Nullable<decimal> pdecNumOfDate, Nullable<System.TimeSpan> ptSecurityStartTime, Nullable<System.TimeSpan> ptSecurityFinishTime, Nullable<decimal> pdecWorkHourPerMonth, Nullable<decimal> pdecCostPerHour, Nullable<int> pintNumOfSentryGuard, Nullable<System.DateTime> pdtCreateDate, string pchrCreateBy, Nullable<System.DateTime> pdtUpdateDate, string pdtUpdateBy, Nullable<decimal> pdecCostPerHourUsd, string pdecCostPerCurrencyType, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pintRunningNoParameter = pintRunningNo.HasValue ?
                new ObjectParameter("pintRunningNo", pintRunningNo) :
                new ObjectParameter("pintRunningNo", typeof(int));
    
            var pchrSentryGuardTypeCodeParameter = pchrSentryGuardTypeCode != null ?
                new ObjectParameter("pchrSentryGuardTypeCode", pchrSentryGuardTypeCode) :
                new ObjectParameter("pchrSentryGuardTypeCode", typeof(string));
    
            var pdecNumOfDateParameter = pdecNumOfDate.HasValue ?
                new ObjectParameter("pdecNumOfDate", pdecNumOfDate) :
                new ObjectParameter("pdecNumOfDate", typeof(decimal));
    
            var ptSecurityStartTimeParameter = ptSecurityStartTime.HasValue ?
                new ObjectParameter("ptSecurityStartTime", ptSecurityStartTime) :
                new ObjectParameter("ptSecurityStartTime", typeof(System.TimeSpan));
    
            var ptSecurityFinishTimeParameter = ptSecurityFinishTime.HasValue ?
                new ObjectParameter("ptSecurityFinishTime", ptSecurityFinishTime) :
                new ObjectParameter("ptSecurityFinishTime", typeof(System.TimeSpan));
    
            var pdecWorkHourPerMonthParameter = pdecWorkHourPerMonth.HasValue ?
                new ObjectParameter("pdecWorkHourPerMonth", pdecWorkHourPerMonth) :
                new ObjectParameter("pdecWorkHourPerMonth", typeof(decimal));
    
            var pdecCostPerHourParameter = pdecCostPerHour.HasValue ?
                new ObjectParameter("pdecCostPerHour", pdecCostPerHour) :
                new ObjectParameter("pdecCostPerHour", typeof(decimal));
    
            var pintNumOfSentryGuardParameter = pintNumOfSentryGuard.HasValue ?
                new ObjectParameter("pintNumOfSentryGuard", pintNumOfSentryGuard) :
                new ObjectParameter("pintNumOfSentryGuard", typeof(int));
    
            var pdtCreateDateParameter = pdtCreateDate.HasValue ?
                new ObjectParameter("pdtCreateDate", pdtCreateDate) :
                new ObjectParameter("pdtCreateDate", typeof(System.DateTime));
    
            var pchrCreateByParameter = pchrCreateBy != null ?
                new ObjectParameter("pchrCreateBy", pchrCreateBy) :
                new ObjectParameter("pchrCreateBy", typeof(string));
    
            var pdtUpdateDateParameter = pdtUpdateDate.HasValue ?
                new ObjectParameter("pdtUpdateDate", pdtUpdateDate) :
                new ObjectParameter("pdtUpdateDate", typeof(System.DateTime));
    
            var pdtUpdateByParameter = pdtUpdateBy != null ?
                new ObjectParameter("pdtUpdateBy", pdtUpdateBy) :
                new ObjectParameter("pdtUpdateBy", typeof(string));
    
            var pdecCostPerHourUsdParameter = pdecCostPerHourUsd.HasValue ?
                new ObjectParameter("pdecCostPerHourUsd", pdecCostPerHourUsd) :
                new ObjectParameter("pdecCostPerHourUsd", typeof(decimal));
    
            var pdecCostPerCurrencyTypeParameter = pdecCostPerCurrencyType != null ?
                new ObjectParameter("pdecCostPerCurrencyType", pdecCostPerCurrencyType) :
                new ObjectParameter("pdecCostPerCurrencyType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationSentryGuardDetails>("InsertQuotationSentryGuardDetails", mergeOption, pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pintRunningNoParameter, pchrSentryGuardTypeCodeParameter, pdecNumOfDateParameter, ptSecurityStartTimeParameter, ptSecurityFinishTimeParameter, pdecWorkHourPerMonthParameter, pdecCostPerHourParameter, pintNumOfSentryGuardParameter, pdtCreateDateParameter, pchrCreateByParameter, pdtUpdateDateParameter, pdtUpdateByParameter, pdecCostPerHourUsdParameter, pdecCostPerCurrencyTypeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationMaintenanceLinkage> InsertQuotationMaintenanceLinkage(string pchrQuotationTargetCode, string pchrAlphabet, string pchrContractCode, Nullable<System.DateTime> pdtCreateDate, string pchrCreateBy, Nullable<System.DateTime> pdtUpdateDate, string pchrUpdateBy)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrContractCodeParameter = pchrContractCode != null ?
                new ObjectParameter("pchrContractCode", pchrContractCode) :
                new ObjectParameter("pchrContractCode", typeof(string));
    
            var pdtCreateDateParameter = pdtCreateDate.HasValue ?
                new ObjectParameter("pdtCreateDate", pdtCreateDate) :
                new ObjectParameter("pdtCreateDate", typeof(System.DateTime));
    
            var pchrCreateByParameter = pchrCreateBy != null ?
                new ObjectParameter("pchrCreateBy", pchrCreateBy) :
                new ObjectParameter("pchrCreateBy", typeof(string));
    
            var pdtUpdateDateParameter = pdtUpdateDate.HasValue ?
                new ObjectParameter("pdtUpdateDate", pdtUpdateDate) :
                new ObjectParameter("pdtUpdateDate", typeof(System.DateTime));
    
            var pchrUpdateByParameter = pchrUpdateBy != null ?
                new ObjectParameter("pchrUpdateBy", pchrUpdateBy) :
                new ObjectParameter("pchrUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationMaintenanceLinkage>("InsertQuotationMaintenanceLinkage", pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pchrContractCodeParameter, pdtCreateDateParameter, pchrCreateByParameter, pdtUpdateDateParameter, pchrUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationMaintenanceLinkage> InsertQuotationMaintenanceLinkage(string pchrQuotationTargetCode, string pchrAlphabet, string pchrContractCode, Nullable<System.DateTime> pdtCreateDate, string pchrCreateBy, Nullable<System.DateTime> pdtUpdateDate, string pchrUpdateBy, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrContractCodeParameter = pchrContractCode != null ?
                new ObjectParameter("pchrContractCode", pchrContractCode) :
                new ObjectParameter("pchrContractCode", typeof(string));
    
            var pdtCreateDateParameter = pdtCreateDate.HasValue ?
                new ObjectParameter("pdtCreateDate", pdtCreateDate) :
                new ObjectParameter("pdtCreateDate", typeof(System.DateTime));
    
            var pchrCreateByParameter = pchrCreateBy != null ?
                new ObjectParameter("pchrCreateBy", pchrCreateBy) :
                new ObjectParameter("pchrCreateBy", typeof(string));
    
            var pdtUpdateDateParameter = pdtUpdateDate.HasValue ?
                new ObjectParameter("pdtUpdateDate", pdtUpdateDate) :
                new ObjectParameter("pdtUpdateDate", typeof(System.DateTime));
    
            var pchrUpdateByParameter = pchrUpdateBy != null ?
                new ObjectParameter("pchrUpdateBy", pchrUpdateBy) :
                new ObjectParameter("pchrUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationMaintenanceLinkage>("InsertQuotationMaintenanceLinkage", mergeOption, pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pchrContractCodeParameter, pdtCreateDateParameter, pchrCreateByParameter, pdtUpdateDateParameter, pchrUpdateByParameter);
        }
    
        public virtual ObjectResult<doDefaultFacility> GetDefaultFacility(string pchrProductCode, string c_LINE_UP_TYPE_STOP_SALE, string c_LINE_UP_TYPE_LOGICAL_DELETE, string c_INST_TYPE_MONITOR)
        {
            var pchrProductCodeParameter = pchrProductCode != null ?
                new ObjectParameter("pchrProductCode", pchrProductCode) :
                new ObjectParameter("pchrProductCode", typeof(string));
    
            var c_LINE_UP_TYPE_STOP_SALEParameter = c_LINE_UP_TYPE_STOP_SALE != null ?
                new ObjectParameter("C_LINE_UP_TYPE_STOP_SALE", c_LINE_UP_TYPE_STOP_SALE) :
                new ObjectParameter("C_LINE_UP_TYPE_STOP_SALE", typeof(string));
    
            var c_LINE_UP_TYPE_LOGICAL_DELETEParameter = c_LINE_UP_TYPE_LOGICAL_DELETE != null ?
                new ObjectParameter("C_LINE_UP_TYPE_LOGICAL_DELETE", c_LINE_UP_TYPE_LOGICAL_DELETE) :
                new ObjectParameter("C_LINE_UP_TYPE_LOGICAL_DELETE", typeof(string));
    
            var c_INST_TYPE_MONITORParameter = c_INST_TYPE_MONITOR != null ?
                new ObjectParameter("C_INST_TYPE_MONITOR", c_INST_TYPE_MONITOR) :
                new ObjectParameter("C_INST_TYPE_MONITOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doDefaultFacility>("GetDefaultFacility", pchrProductCodeParameter, c_LINE_UP_TYPE_STOP_SALEParameter, c_LINE_UP_TYPE_LOGICAL_DELETEParameter, c_INST_TYPE_MONITORParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsUsedSite(string pchrSiteCode)
        {
            var pchrSiteCodeParameter = pchrSiteCode != null ?
                new ObjectParameter("pchrSiteCode", pchrSiteCode) :
                new ObjectParameter("pchrSiteCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsUsedSite", pchrSiteCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsUsedCustomer(string pchrCustCode)
        {
            var pchrCustCodeParameter = pchrCustCode != null ?
                new ObjectParameter("pchrCustCode", pchrCustCode) :
                new ObjectParameter("pchrCustCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsUsedCustomer", pchrCustCodeParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstrumentDetails> ConvertQuotationParentToChildInstrument(string pQuotationTargetCode, string pAlphabet)
        {
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pAlphabetParameter = pAlphabet != null ?
                new ObjectParameter("pAlphabet", pAlphabet) :
                new ObjectParameter("pAlphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstrumentDetails>("ConvertQuotationParentToChildInstrument", pQuotationTargetCodeParameter, pAlphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstrumentDetails> ConvertQuotationParentToChildInstrument(string pQuotationTargetCode, string pAlphabet, MergeOption mergeOption)
        {
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pAlphabetParameter = pAlphabet != null ?
                new ObjectParameter("pAlphabet", pAlphabet) :
                new ObjectParameter("pAlphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstrumentDetails>("ConvertQuotationParentToChildInstrument", mergeOption, pQuotationTargetCodeParameter, pAlphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstallationDetail> GetTbt_QuotationInstallationDetail(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstallationDetail>("GetTbt_QuotationInstallationDetail", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstallationDetail> GetTbt_QuotationInstallationDetail(string quotationTargetCode, string alphabet, MergeOption mergeOption)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstallationDetail>("GetTbt_QuotationInstallationDetail", mergeOption, quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstallationDetail> InsertTbt_QuotationInstallationDetail(string xml_Tbt_QuotationInstallationDetail)
        {
            var xml_Tbt_QuotationInstallationDetailParameter = xml_Tbt_QuotationInstallationDetail != null ?
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", xml_Tbt_QuotationInstallationDetail) :
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstallationDetail>("InsertTbt_QuotationInstallationDetail", xml_Tbt_QuotationInstallationDetailParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstallationDetail> InsertTbt_QuotationInstallationDetail(string xml_Tbt_QuotationInstallationDetail, MergeOption mergeOption)
        {
            var xml_Tbt_QuotationInstallationDetailParameter = xml_Tbt_QuotationInstallationDetail != null ?
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", xml_Tbt_QuotationInstallationDetail) :
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstallationDetail>("InsertTbt_QuotationInstallationDetail", mergeOption, xml_Tbt_QuotationInstallationDetailParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstallationDetail> UpdateTbt_QuotationInstallationDetail(string xml_Tbt_QuotationInstallationDetail)
        {
            var xml_Tbt_QuotationInstallationDetailParameter = xml_Tbt_QuotationInstallationDetail != null ?
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", xml_Tbt_QuotationInstallationDetail) :
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstallationDetail>("UpdateTbt_QuotationInstallationDetail", xml_Tbt_QuotationInstallationDetailParameter);
        }
    
        public virtual ObjectResult<tbt_QuotationInstallationDetail> UpdateTbt_QuotationInstallationDetail(string xml_Tbt_QuotationInstallationDetail, MergeOption mergeOption)
        {
            var xml_Tbt_QuotationInstallationDetailParameter = xml_Tbt_QuotationInstallationDetail != null ?
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", xml_Tbt_QuotationInstallationDetail) :
                new ObjectParameter("xml_Tbt_QuotationInstallationDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_QuotationInstallationDetail>("UpdateTbt_QuotationInstallationDetail", mergeOption, xml_Tbt_QuotationInstallationDetailParameter);
        }
    
        public virtual ObjectResult<doQuotationOneShotFlag> GetQuotationOneShotFlag(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doQuotationOneShotFlag>("GetQuotationOneShotFlag", quotationTargetCodeParameter, alphabetParameter);
        }
    }
}
