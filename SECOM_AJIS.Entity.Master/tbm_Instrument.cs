//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SECOM_AJIS.DataEntity.Master
{
    public partial class tbm_Instrument
    {
        #region Primitive Properties
    
        public virtual string InstrumentCode
        {
            get;
            set;
        }
    
        public virtual string ApproveNo
        {
            get;
            set;
        }
    
        public virtual string InstrumentName
        {
            get;
            set;
        }
    
        public virtual string InstrumentNameForSupplier
        {
            get;
            set;
        }
    
        public virtual string InstrumentNameForCustomerEN
        {
            get;
            set;
        }
    
        public virtual string InstrumentNameForCustomerLC
        {
            get;
            set;
        }
    
        public virtual string Description
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> RentalFlag
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> SaleFlag
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> WorkerRatio
        {
            get;
            set;
        }
    
        public virtual Nullable<int> NoInstallStaff
        {
            get;
            set;
        }
    
        public virtual Nullable<int> TimeInstall
        {
            get;
            set;
        }
    
        public virtual string Maker
        {
            get;
            set;
        }
    
        public virtual string SupplierCode
        {
            get;
            set;
        }
    
        public virtual string InstrumentTypeCode
        {
            get;
            set;
        }
    
        public virtual string ExpansionTypeCode
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> SaleUnitPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> RentalUnitPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> AddUnitPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> RemoveUnitPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> MoveUnitPrice
        {
            get;
            set;
        }
    
        public virtual string LineUpTypeCode
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> InstrumentFlag
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> ZeroBahtAssetFlag
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> MaintenanceFlag
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> ControllerFlag
        {
            get;
            set;
        }
    
        public virtual string InstrumentCategory1
        {
            get;
            set;
        }
    
        public virtual string InstrumentCategory2
        {
            get;
            set;
        }
    
        public virtual string InstrumentCategory3
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CreateDate
        {
            get;
            set;
        }
    
        public virtual string CreateBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> UpdateDate
        {
            get;
            set;
        }
    
        public virtual string UpdateBy
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> SaleUnitPriceUsd
        {
            get;
            set;
        }
    
        public virtual string SaleUnitPriceCurrencyType
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> RentalUnitPriceUsd
        {
            get;
            set;
        }
    
        public virtual string RentalUnitPriceCurrencyType
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> AddUnitPriceUsd
        {
            get;
            set;
        }
    
        public virtual string AddUnitPriceCurrencyType
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> RemoveUnitPriceUsd
        {
            get;
            set;
        }
    
        public virtual string RemoveUnitPriceCurrencyType
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> MoveUnitPriceUsd
        {
            get;
            set;
        }
    
        public virtual string MoveUnitPriceCurrencyType
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<tbm_ProductInstrument> tbm_ProductInstrument
        {
            get
            {
                if (_tbm_ProductInstrument == null)
                {
                    var newCollection = new FixupCollection<tbm_ProductInstrument>();
                    newCollection.CollectionChanged += Fixuptbm_ProductInstrument;
                    _tbm_ProductInstrument = newCollection;
                }
                return _tbm_ProductInstrument;
            }
            set
            {
                if (!ReferenceEquals(_tbm_ProductInstrument, value))
                {
                    var previousValue = _tbm_ProductInstrument as FixupCollection<tbm_ProductInstrument>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbm_ProductInstrument;
                    }
                    _tbm_ProductInstrument = value;
                    var newValue = value as FixupCollection<tbm_ProductInstrument>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbm_ProductInstrument;
                    }
                }
            }
        }
        private ICollection<tbm_ProductInstrument> _tbm_ProductInstrument;
    
        public virtual ICollection<tbm_ProductFacility> tbm_ProductFacility
        {
            get
            {
                if (_tbm_ProductFacility == null)
                {
                    var newCollection = new FixupCollection<tbm_ProductFacility>();
                    newCollection.CollectionChanged += Fixuptbm_ProductFacility;
                    _tbm_ProductFacility = newCollection;
                }
                return _tbm_ProductFacility;
            }
            set
            {
                if (!ReferenceEquals(_tbm_ProductFacility, value))
                {
                    var previousValue = _tbm_ProductFacility as FixupCollection<tbm_ProductFacility>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixuptbm_ProductFacility;
                    }
                    _tbm_ProductFacility = value;
                    var newValue = value as FixupCollection<tbm_ProductFacility>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixuptbm_ProductFacility;
                    }
                }
            }
        }
        private ICollection<tbm_ProductFacility> _tbm_ProductFacility;

        #endregion

        #region Association Fixup
    
        private void Fixuptbm_ProductInstrument(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbm_ProductInstrument item in e.NewItems)
                {
                    item.tbm_Instrument = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbm_ProductInstrument item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbm_Instrument, this))
                    {
                        item.tbm_Instrument = null;
                    }
                }
            }
        }
    
        private void Fixuptbm_ProductFacility(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (tbm_ProductFacility item in e.NewItems)
                {
                    item.tbm_Instrument = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (tbm_ProductFacility item in e.OldItems)
                {
                    if (ReferenceEquals(item.tbm_Instrument, this))
                    {
                        item.tbm_Instrument = null;
                    }
                }
            }
        }

        #endregion

    }
}
