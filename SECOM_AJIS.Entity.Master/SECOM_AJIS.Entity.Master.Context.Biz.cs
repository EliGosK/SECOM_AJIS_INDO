//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.EntityClient;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace SECOM_AJIS.DataEntity.Master
{
    public partial class BizMADataEntities
    {
        #region Methods
    		public virtual List<doCustAddressEN> GetCustAddressEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustAddressEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustAddressLC> GetCustAddressLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustAddressLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustAlleyEN> GetCustAlleyEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustAlleyEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustAlleyLC> GetCustAlleyLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustAlleyLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustRoadEN> GetCustRoadEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustRoadEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustRoadLC> GetCustRoadLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustRoadLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustSubDistrictEN> GetCustSubDistrictEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustSubDistrictEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustSubDistrictLC> GetCustSubDistrictLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustSubDistrictLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doGroupNameDataList> GetGroupNameDataList(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetGroupNameDataList(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<tbm_District> GetTbm_District(string provinceCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_District(provinceCode).ToList();
    		}
    		public virtual List<tbm_Province> GetTbm_Province()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Province().ToList();
    		}
    		public virtual List<doCustAddress> GetCustAddress(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustAddress(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustAlley> GetCustAlley(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustAlley(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustRoad> GetCustRoad(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustRoad(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doCustSubDistrict> GetCustSubDistrict(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustSubDistrict(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtEmailAddress> GetUserEmailAddressDataList(string pchvEmployeeName, string pchvnEmailAddress, string pchvOfficeCode, string pchrDepartmentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetUserEmailAddressDataList(pchvEmployeeName, pchvnEmailAddress, pchvOfficeCode, pchrDepartmentCode).ToList();
    		}
    		public virtual List<tbm_Office> GetTbm_Office(string pchrOfficeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Office(pchrOfficeCode).ToList();
    		}
    		public virtual List<tbm_Department> GetTbm_Department()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Department().ToList();
    		}
    		public virtual List<tbm_Group> InsertGroup(string pchrGroupCode, string pchvnGroupNameEN, string pchnvGroupNameLC, string pchnvMemo, string pchnvGroupOffice, string pchnvGroupEmpNo, Nullable<bool> pbitDeleteFlag, Nullable<System.DateTime> pdtmCreateDate, string pchnvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchnvUpdateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertGroup(pchrGroupCode, pchvnGroupNameEN, pchnvGroupNameLC, pchnvMemo, pchnvGroupOffice, pchnvGroupEmpNo, pbitDeleteFlag, pdtmCreateDate, pchnvCreateBy, pdtmUpdateDate, pchnvUpdateBy).ToList();
    		}
    		public virtual List<Nullable<int>> IsUsedGroup(string pchvnstrGroupCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.IsUsedGroup(pchvnstrGroupCode).ToList();
    		}
    		public virtual List<tbm_Group> UpdateGroup(string pchrGroupCode, string pchvnGroupNameEN, string pchnvGroupNameLC, string pchnvMemo, string pchnvGroupOffice, string pchnvGroupEmpNo, Nullable<bool> pbitDeleteFlag, Nullable<System.DateTime> pdtmUpdateDate, string pchnvUpdateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateGroup(pchrGroupCode, pchvnGroupNameEN, pchnvGroupNameLC, pchnvMemo, pchnvGroupOffice, pchnvGroupEmpNo, pbitDeleteFlag, pdtmUpdateDate, pchnvUpdateBy).ToList();
    		}
    		public virtual List<doSite> GetSite(string siteCode, string custCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSite(siteCode, custCode).ToList();
    		}
    		public virtual List<doGroup> GetGroup(string pchvnGroupCode, string pchvnGroupName)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetGroup(pchvnGroupCode, pchvnGroupName).ToList();
    		}
    		public virtual List<doInstrumentExpansion> GetChildInstrument(string pchvnChildInstrumentCode, string c_LINE_UP_TYPE, string c_EXPANSION_TYPE_CHILD)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetChildInstrument(pchvnChildInstrumentCode, c_LINE_UP_TYPE, c_EXPANSION_TYPE_CHILD).ToList();
    		}
    		public virtual List<tbm_InstrumentExpansion> DeleteInstrumentExpansion(string pchvnChildInstrumentCode, string pchvnInstrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteInstrumentExpansion(pchvnChildInstrumentCode, pchvnInstrumentCode).ToList();
    		}
    		public virtual List<tbm_InstrumentExpansion> InsertInstrumentExpansion(string pchnvInstrumentCode, string pchnvChildInstrumentCode, Nullable<System.DateTime> pdtmCreateDate, string pchnvCreateBy, Nullable<System.DateTime> pdtmUpdateDate, string pchnvUpdateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertInstrumentExpansion(pchnvInstrumentCode, pchnvChildInstrumentCode, pdtmCreateDate, pchnvCreateBy, pdtmUpdateDate, pchnvUpdateBy).ToList();
    		}
    		public virtual int DeleteAllInstrument(string instrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteAllInstrument(instrumentCode);
    		}
    		public virtual List<tbm_BuildingUsage> GetTbm_BiuldingUsage()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_BiuldingUsage().ToList();
    		}
    		public virtual List<tbm_BusinessType> GetTbm_BusinessType()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_BusinessType().ToList();
    		}
    		public virtual List<tbm_CompanyType> GetTbm_CompanyType()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_CompanyType().ToList();
    		}
    		public virtual List<tbm_Region> GetTbm_Region()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Region().ToList();
    		}
    		public virtual List<dtCustomeGroupData> GetCustomeGroupData(string pchrCustomerCode, string chvnGroupName)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustomeGroupData(pchrCustomerCode, chvnGroupName).ToList();
    		}
    		public virtual List<dtSiteData> GetSiteDataForSearch(string pC_CUST_STATUS, string pCustomerCode, string pCustomerName, string pSiteCode, string pSiteName, string pBuildingUsageCode, string pAddress, string pAlley, string pRoad, string pSubDistrict, string pDistrictCode, string pProvinceCode, string pZipCode, string pXmlCustStatus)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteDataForSearch(pC_CUST_STATUS, pCustomerCode, pCustomerName, pSiteCode, pSiteName, pBuildingUsageCode, pAddress, pAlley, pRoad, pSubDistrict, pDistrictCode, pProvinceCode, pZipCode, pXmlCustStatus).ToList();
    		}
    		public virtual List<dtCustomerForView> GetCustomerForView(string chrCustCode, string pC_CUST_STATUS, string pC_CUST_TYPE, string pC_FINANCIAL_MARKET_TYPE)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustomerForView(chrCustCode, pC_CUST_STATUS, pC_CUST_TYPE, pC_FINANCIAL_MARKET_TYPE).ToList();
    		}
    		public virtual List<tbm_Instrument> UpdateInstrument(string xmlInstrument)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateInstrument(xmlInstrument).ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistInstrument(string pchvInstrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistInstrument(pchvInstrumentCode).ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistParentChild(string pchvInstrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistParentChild(pchvInstrumentCode).ToList();
    		}
    		public virtual List<dtInstrument> GetInstrument(string pchvInstrumentCode, string pchvInstrumentName, string pchrLineUpTypeCode, string pchvFieldName)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrument(pchvInstrumentCode, pchvInstrumentName, pchrLineUpTypeCode, pchvFieldName).ToList();
    		}
    		public virtual List<dtInstrumentDetail> GetInstrumentDetail(string pchvInstrumentCode, string pchvFieldName, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentDetail(pchvInstrumentCode, pchvFieldName, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbm_Instrument> InsertInstrument(string xmlInstrument)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertInstrument(xmlInstrument).ToList();
    		}
    		public virtual List<tbs_MiscellaneousTypeCode> GetTbs_MiscellaneousTypeCode(string c_CUST_TYPE)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbs_MiscellaneousTypeCode(c_CUST_TYPE).ToList();
    		}
    		public virtual List<doBillingNameEN> GetBillingNameEn(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingNameEn(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doGetBillingNameLC> GetBillingNameLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingNameLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doBillingBranchNameEN> GetBillingBranchNameEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingBranchNameEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doBillingBranchNameLC> GetBillingBranchNameLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingBranchNameLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doBillingAddressNameEN> GetBillingAddressNameEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingAddressNameEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<doBillingAddressNameLC> GetBillingAddressNameLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingAddressNameLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtBillingClientDataForSearch> GetBillingClientDataForSearch(string pC_CUST_TYPE, string pchrBillingClientCode, string pchvnBillingClientName, string pchrCompanyTypeCode, string pchrRegionCode, string pchrBusinessTypeCode, string pchvnAddress, string pchvnPhoneNo, string xmlCustomerTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingClientDataForSearch(pC_CUST_TYPE, pchrBillingClientCode, pchvnBillingClientName, pchrCompanyTypeCode, pchrRegionCode, pchrBusinessTypeCode, pchvnAddress, pchvnPhoneNo, xmlCustomerTypeCode).ToList();
    		}
    		public virtual List<dtCustName> GetCustName(string pLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustName(pLiveSearch).ToList();
    		}
    		public virtual List<dtSiteName> GetSiteName(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteName(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteAddress> GetSiteAddress(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteAddress(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteAlley> GetSiteAlley(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteAlley(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteRoad> GetSiteRoad(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteRoad(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteSubDistrict> GetSiteSubDistrict(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteSubDistrict(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtBillingClientName> GetBillingClientName(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingClientName(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtBillingClientAddress> GetBillingClientAddress(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingClientAddress(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtOffice> GetFunctionQuotaion(string pchrC_FUNC_QUATATION_NO)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetFunctionQuotaion(pchrC_FUNC_QUATATION_NO).ToList();
    		}
    		public virtual List<dtOffice> GetFunctionSecurity(string pchrC_FUNC_SECURITY_NO)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetFunctionSecurity(pchrC_FUNC_SECURITY_NO).ToList();
    		}
    		public virtual List<tbm_Product> GetTbm_Product(string pchrProductCode, string pcharProductTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Product(pchrProductCode, pcharProductTypeCode).ToList();
    		}
    		public virtual List<tbm_Employee> GetEmployeeList(string xml0)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeList(xml0).ToList();
    		}
    		public virtual List<dtSiteRoadEN> SiteRoadEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.SiteRoadEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteAddressEN> GetSiteAddressEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteAddressEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteAddressLC> GetSiteAddressLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteAddressLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteAlleyEN> GetSiteAlleyEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteAlleyEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteAlleyLC> GetSiteAlleyLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteAlleyLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteNameEN> GetSiteNameEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteNameEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteNameLC> GetSiteNameLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteNameLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteRoadEN> GetSiteRoadEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteRoadEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteRoadLC> GetSiteRoadLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteRoadLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteSubDistrictEN> GetSiteSubDistrictEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteSubDistrictEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtSiteSubDistrictLC> GetSiteSubDistrictLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSiteSubDistrictLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<tbm_Instrument> GetIntrumentList(string xml_dtIntrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetIntrumentList(xml_dtIntrumentCode).ToList();
    		}
    		public virtual List<doInstrumentName> GetInstrumentName(string pchvInstrumentName)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentName(pchvInstrumentName).ToList();
    		}
    		public virtual List<dtCustomerData> GetCustomerDataForSearch(string pchrCustomerCode, string chvnCustomerName, string pchrCompanyTypeCode, string chvnIDNo, Nullable<bool> bitDummyIDFlag, string chrRegionCode, string chrBusinessTypeCode, string chvnAddress, string chvnAlley, string chvnRoad, string chvnSubDistrict, string chrDistrictCode, string chrProvinceCode, string chrZipCode, string chvnPhoneNo, string chvnGroupName, string pC_CUST_STATUS, string pC_CUST_TYPE, string pC_FINANCIAL_MARKET_TYPE, string xmlCustStatus, string xmlCustTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustomerDataForSearch(pchrCustomerCode, chvnCustomerName, pchrCompanyTypeCode, chvnIDNo, bitDummyIDFlag, chrRegionCode, chrBusinessTypeCode, chvnAddress, chvnAlley, chvnRoad, chvnSubDistrict, chrDistrictCode, chrProvinceCode, chrZipCode, chvnPhoneNo, chvnGroupName, pC_CUST_STATUS, pC_CUST_TYPE, pC_FINANCIAL_MARKET_TYPE, xmlCustStatus, xmlCustTypeCode).ToList();
    		}
    		public virtual List<tbm_Group> GetTbm_Group(string pGroupCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Group(pGroupCode).ToList();
    		}
    		public virtual List<Nullable<int>> CheckExistCustomerGroup(string pchnvGroupCode, string pchnvCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistCustomerGroup(pchnvGroupCode, pchnvCustCode).ToList();
    		}
    		public virtual List<dtManageCustomerInformation> ManageCustomerInformation(string pchvnstrCustCode, string c_CUST_STATUS_NEW_CUSTOMER)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.ManageCustomerInformation(pchvnstrCustCode, c_CUST_STATUS_NEW_CUSTOMER).ToList();
    		}
    		public virtual List<Nullable<int>> CheckDuplicateCustomer(string c_CUST_STATUS_EXISTING_CUSTOMER, string pchrCustCode, string pchrIDNo, string pchrCustNameLC)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckDuplicateCustomer(c_CUST_STATUS_EXISTING_CUSTOMER, pchrCustCode, pchrIDNo, pchrCustNameLC).ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistBelonging(string pchvOfficeCode, string pchrDepartmentCode, string pchvEmpNo, Nullable<int> pintBelongingID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistBelonging(pchvOfficeCode, pchrDepartmentCode, pchvEmpNo, pintBelongingID).ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistEmployee(string pchvEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistEmployee(pchvEmpNo).ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistMainDepartmentFlag(string pchvEmpNo, Nullable<int> pintBelongingID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistMainDepartmentFlag(pchvEmpNo, pintBelongingID).ToList();
    		}
    		public virtual List<dtEmployeeName> GetEmployeeName(string pchrnEmpFirstNameEN)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeName(pchrnEmpFirstNameEN).ToList();
    		}
    		public virtual List<dtEmployeeDetail> GetEmployeeDetail(string pchvEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeDetail(pchvEmpNo).ToList();
    		}
    		public virtual List<tbm_Belonging> InsertBelonging(string xmlBelonging)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertBelonging(xmlBelonging).ToList();
    		}
    		public virtual List<tbm_Employee> InsertEmployee(string xmlEmployee)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertEmployee(xmlEmployee).ToList();
    		}
    		public virtual List<tbm_Belonging> UpdateBelonging(string xmlBelonging, Nullable<int> pintBelongingID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateBelonging(xmlBelonging, pintBelongingID).ToList();
    		}
    		public virtual List<tbm_Employee> UpdateEmployee(string xmlEmployee)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateEmployee(xmlEmployee).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetBelongingUpdateDate(Nullable<int> pintBelongingID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBelongingUpdateDate(pintBelongingID).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetEmployeeUpdateDate(string pchvEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeUpdateDate(pchvEmpNo).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetInstrumentUpdateDate(string pchvInstrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentUpdateDate(pchvInstrumentCode).ToList();
    		}
    		public virtual List<CheckUpdateDate> CheckUpdateDate(string siteCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckUpdateDate(siteCode).ToList();
    		}
    		public virtual List<tbm_Site> UpdateSite(string siteCode, string custCode, string siteNo, string siteNameEN, string siteNameLC, string sECOMContactPerson, string personInCharge, string phoneNo, string buildingUsageCode, string addressEN, string alleyEN, string roadEN, string subDistrictEN, string addressFullEN, string addressLC, string alleyLC, string roadLC, string subDistrictLC, string addressFullLC, string districtCode, string provinceCode, string zipCode, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateSite(siteCode, custCode, siteNo, siteNameEN, siteNameLC, sECOMContactPerson, personInCharge, phoneNo, buildingUsageCode, addressEN, alleyEN, roadEN, subDistrictEN, addressFullEN, addressLC, alleyLC, roadLC, subDistrictLC, addressFullLC, districtCode, provinceCode, zipCode, updateDate, updateBy).ToList();
    		}
    		public virtual List<tbm_Customer> GetTbm_Customer(string custCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Customer(custCode).ToList();
    		}
    		public virtual List<tbm_Customer> InsertCustomer(string custCode, string custStatus, Nullable<bool> importantFlag, string custNameEN, string custNameLC, string custFullNameEN, string custFullNameLC, string repPersonName, string contactPersonName, string sECOMContactPerson, string custTypeCode, string companyTypeCode, string financialMarketTypeCode, string businessTypeCode, string phoneNo, string faxNo, string iDNo, Nullable<bool> dummyIDFlag, string regionCode, string uRL, string memo, string alleyEN, string addressEN, string roadEN, string subDistrictEN, string addressFullEN, string addressLC, string alleyLC, string roadLC, string subDistrictLC, string addressFullLC, string districtCode, string provinceCode, string zipCode, Nullable<bool> deleteFlag, Nullable<System.DateTime> createDate, string createBy, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertCustomer(custCode, custStatus, importantFlag, custNameEN, custNameLC, custFullNameEN, custFullNameLC, repPersonName, contactPersonName, sECOMContactPerson, custTypeCode, companyTypeCode, financialMarketTypeCode, businessTypeCode, phoneNo, faxNo, iDNo, dummyIDFlag, regionCode, uRL, memo, alleyEN, addressEN, roadEN, subDistrictEN, addressFullEN, addressLC, alleyLC, roadLC, subDistrictLC, addressFullLC, districtCode, provinceCode, zipCode, deleteFlag, createDate, createBy, updateDate, updateBy).ToList();
    		}
    		public virtual List<tbm_Customer> CheckCustomer(string pchnvCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckCustomer(pchnvCustCode).ToList();
    		}
    		public virtual List<tbm_Customer> UpdateCustomer(string custCode, string custStatus, Nullable<bool> importantFlag, string custNameEN, string custNameLC, string custFullNameEN, string custFullNameLC, string repPersonName, string contactPersonName, string sECOMContactPerson, string custTypeCode, string companyTypeCode, string financialMarketTypeCode, string businessTypeCode, string phoneNo, string faxNo, string iDNo, Nullable<bool> dummyIDFlag, string regionCode, string uRL, string memo, string alleyEN, string addressEN, string roadEN, string subDistrictEN, string addressFullEN, string addressLC, string alleyLC, string roadLC, string subDistrictLC, string addressFullLC, string districtCode, string provinceCode, string zipCode, Nullable<bool> deleteFlag, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateCustomer(custCode, custStatus, importantFlag, custNameEN, custNameLC, custFullNameEN, custFullNameLC, repPersonName, contactPersonName, sECOMContactPerson, custTypeCode, companyTypeCode, financialMarketTypeCode, businessTypeCode, phoneNo, faxNo, iDNo, dummyIDFlag, regionCode, uRL, memo, alleyEN, addressEN, roadEN, subDistrictEN, addressFullEN, addressLC, alleyLC, roadLC, subDistrictLC, addressFullLC, districtCode, provinceCode, zipCode, deleteFlag, updateDate, updateBy).ToList();
    		}
    		public virtual List<tbm_CustomerGroup> DeleteCustomerGroup(string xml_dtCustomerGroup)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteCustomerGroup(xml_dtCustomerGroup).ToList();
    		}
    		public virtual List<tbm_Site> InsertSite(string siteCode, string custCode, string siteNo, string siteNameEN, string siteNameLC, string sECOMContactPerson, string personInCharge, string phoneNo, string buildingUsageCode, string addressEN, string alleyEN, string roadEN, string subDistrictEN, string addressFullEN, string addressLC, string alleyLC, string roadLC, string subDistrictLC, string addressFullLC, string districtCode, string provinceCode, string zipCode, Nullable<System.DateTime> createDate, string createBy, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertSite(siteCode, custCode, siteNo, siteNameEN, siteNameLC, sECOMContactPerson, personInCharge, phoneNo, buildingUsageCode, addressEN, alleyEN, roadEN, subDistrictEN, addressFullEN, addressLC, alleyLC, roadLC, subDistrictLC, addressFullLC, districtCode, provinceCode, zipCode, createDate, createBy, updateDate, updateBy).ToList();
    		}
    		public virtual List<doCustomer> GetCustomer(string pchrCustCode, string pcharC_CUST_STATUS, string pcharC_CUST_TYPE, string pcharC_FINANCIAL_MARKET_TYPE)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustomer(pchrCustCode, pcharC_CUST_STATUS, pcharC_CUST_TYPE, pcharC_FINANCIAL_MARKET_TYPE).ToList();
    		}
    		public virtual List<tbm_Employee> DeleteEmployee(string pchvEmpNo, Nullable<bool> pbitDeleteFlag, string pchvUpdateBy, Nullable<System.DateTime> pdtmUpdateDate)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteEmployee(pchvEmpNo, pbitDeleteFlag, pchvUpdateBy, pdtmUpdateDate).ToList();
    		}
    		public virtual List<doGetTbm_Site> GetTbm_Site(string pchrSiteCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Site(pchrSiteCode).ToList();
    		}
    		public virtual List<tbm_Belonging> DeleteBelonging(Nullable<int> pintBelongingID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteBelonging(pintBelongingID).ToList();
    		}
    		public virtual List<dtCustomerGroupForView> GetCustomerGroup(string pchrGroupCode, string pchrCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustomerGroup(pchrGroupCode, pchrCustCode).ToList();
    		}
    		public virtual List<Nullable<int>> CheckExistCustomer(string pchrCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistCustomer(pchrCustCode).ToList();
    		}
    		public virtual List<Nullable<int>> CheckExistSite(string pchrSiteCode, string pchrCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistSite(pchrSiteCode, pchrCustCode).ToList();
    		}
    		public virtual List<dtUserBelonging> getBelongingByEmpNo(string pchvEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.getBelongingByEmpNo(pchvEmpNo).ToList();
    		}
    		public virtual List<doCompanyType> GetCompanyType(string pchrstrCompanyTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCompanyType(pchrstrCompanyTypeCode).ToList();
    		}
    		public virtual List<Nullable<int>> CheckExistActiveEmployee(string pchvEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistActiveEmployee(pchvEmpNo).ToList();
    		}
    		public virtual List<dtEmployeeData> GetUserData(string pchvEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetUserData(pchvEmpNo).ToList();
    		}
    		public virtual List<dtAuthorizeOffice> GetAuthorizeOffice(string xml_dtBelonging)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetAuthorizeOffice(xml_dtBelonging).ToList();
    		}
    		public virtual List<tbm_Object> GetTbm_Object()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Object().ToList();
    		}
    		public virtual List<dtGetInstrumentMaker> GetInstrumentMaker(string pchnvStrAuto)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentMaker(pchnvStrAuto).ToList();
    		}
    		public virtual List<doInstrumentData> GetInstrumentDataForSearch(string phvInstrumentCode, string phnvInstrumentName, string phnvMaker, string pchrSupplierCode, string pchrLineUpTypeCode, Nullable<int> instrumentFlag_1, Nullable<int> instrumentFlag_2, string expansionType_1, string expansionType_2, Nullable<int> saleFlag, Nullable<int> rentalFlag, string instrumentType_1, string instrumentType_2, string instrumentType_3, string c_LINE_UP_TYPE, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentDataForSearch(phvInstrumentCode, phnvInstrumentName, phnvMaker, pchrSupplierCode, pchrLineUpTypeCode, instrumentFlag_1, instrumentFlag_2, expansionType_1, expansionType_2, saleFlag, rentalFlag, instrumentType_1, instrumentType_2, instrumentType_3, c_LINE_UP_TYPE, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbm_Product> GetActiveProduct(string pcharProductCode, string pcharProductTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetActiveProduct(pcharProductCode, pcharProductTypeCode).ToList();
    		}
    		public virtual List<doOfficeList> GetOfficeList(string xml0)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetOfficeList(xml0).ToList();
    		}
    		public virtual List<doCustomerList> GetCustomerList(string xml0)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustomerList(xml0).ToList();
    		}
    		public virtual List<dtObjectFunction> GetObjectFunction(Nullable<int> moduleID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetObjectFunction(moduleID).ToList();
    		}
    		public virtual List<tbm_ProductInstrument> GetTbm_ProductInstrument(string pchrProductCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_ProductInstrument(pchrProductCode).ToList();
    		}
    		public virtual List<doActiveEmployeeList> GetActiveEmployeeList(string xml0)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetActiveEmployeeList(xml0).ToList();
    		}
    		public virtual List<tbm_Module> GetTbm_Module()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Module().ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistEmpNo(string officeCode, string departmentCode, string positionCode, string empNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistEmpNo(officeCode, departmentCode, positionCode, empNo).ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistPermission(string officeCode, string departmentCode, string positionCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistPermission(officeCode, departmentCode, positionCode).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetPermissionGroupUpdateDate(string permissionGroupCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetPermissionGroupUpdateDate(permissionGroupCode).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetPermissionIndividualUpdateDate(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetPermissionIndividualUpdateDate(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<tbm_PermissionIndividualDetail> DeletePermissionIndividualDetail(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeletePermissionIndividualDetail(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<tbm_PermissionIndividual> DeletePermissionIndividual(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeletePermissionIndividual(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<tbm_PermissionDetail> DeletePermissionDetail(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeletePermissionDetail(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<tbm_PermissionGroup> DeletePermissionGroup(string permissionGroupCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeletePermissionGroup(permissionGroupCode).ToList();
    		}
    		public virtual List<tbm_PermissionGroup> InsertPermissionGroup(string permissionGroupCode, string permissionGroupName, string officeCode, string departmentCode, string positionCode, Nullable<System.DateTime> createDate, string createBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertPermissionGroup(permissionGroupCode, permissionGroupName, officeCode, departmentCode, positionCode, createDate, createBy).ToList();
    		}
    		public virtual List<string> GeneratePermissionGroupCode()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GeneratePermissionGroupCode().ToList();
    		}
    		public virtual List<tbm_PermissionIndividual> InsertPermissionIndividual(string permissionGroupCode, string permissionIndividualCode, string permissionIndividualName, Nullable<System.DateTime> createDate, string createBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertPermissionIndividual(permissionGroupCode, permissionIndividualCode, permissionIndividualName, createDate, createBy).ToList();
    		}
    		public virtual List<tbm_PermissionIndividualDetail> InsertPermissionIndividualDetail(string permissionGroupCode, string permissionIndividualCode, string empNo, Nullable<System.DateTime> createDate, string createBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertPermissionIndividualDetail(permissionGroupCode, permissionIndividualCode, empNo, createDate, createBy).ToList();
    		}
    		public virtual List<tbm_Site> DeleteSite(string pchnvSiteCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteSite(pchnvSiteCode).ToList();
    		}
    		public virtual List<dtFunction> GetFunction(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetFunction(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<dtEmpNo> GetEmpNo(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmpNo(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<tbm_ProductFacility> GetTbm_ProductFacility(string pchrProductCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_ProductFacility(pchrProductCode).ToList();
    		}
    		public virtual List<tbm_Position> GetTbm_Position()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Position().ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetPermissionDetailUpdateDate(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetPermissionDetailUpdateDate(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<tbm_PermissionGroup> UpdatePermissionGroup(string permissionGroupCode, string permissionGroupName, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdatePermissionGroup(permissionGroupCode, permissionGroupName, updateDate, updateBy).ToList();
    		}
    		public virtual List<tbm_PermissionIndividual> UpdatePermissionIndividual(string permissionGroupCode, string permissionIndividualCode, string permissionIndividualName, Nullable<System.DateTime> updateDate, string updateBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdatePermissionIndividual(permissionGroupCode, permissionIndividualCode, permissionIndividualName, updateDate, updateBy).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetPermissionIndividualDetailUpdateDate(string permissionGroupCode, string permissionIndividualCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetPermissionIndividualDetailUpdateDate(permissionGroupCode, permissionIndividualCode).ToList();
    		}
    		public virtual List<tbm_PermissionIndividualDetail> InsertPermissionIndividualDetailByEmpNo(string permissionGroupCode, string permissionIndividualCode, string empNoList, Nullable<System.DateTime> createDate, string createBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertPermissionIndividualDetailByEmpNo(permissionGroupCode, permissionIndividualCode, empNoList, createDate, createBy).ToList();
    		}
    		public virtual List<tbm_PermissionIndividualDetail> DeletePermissionIndividualDetailByEmpNo(string permissionGroupCode, string permissionIndividualCode, string empNoList)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeletePermissionIndividualDetailByEmpNo(permissionGroupCode, permissionIndividualCode, empNoList).ToList();
    		}
    		public virtual List<dtEmpNo> GetEmployeeNameByEmpNo(string empNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeNameByEmpNo(empNo).ToList();
    		}
    		public virtual List<string> GeneratePermissionIndividualCode()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GeneratePermissionIndividualCode().ToList();
    		}
    		public virtual List<tbm_PermissionDetail> InsertPermissionDetailFromSelectedFunction(string permissionGroupCode, string objectFunction, string permissionIndividualCode, Nullable<System.DateTime> createDate, string createBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertPermissionDetailFromSelectedFunction(permissionGroupCode, objectFunction, permissionIndividualCode, createDate, createBy).ToList();
    		}
    		public virtual List<tbm_Employee> GetTbm_Employee(string pEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Employee(pEmpNo).ToList();
    		}
    		public virtual List<doParentGeneralInstrument> GetParentGeneralInstrumentList(string xml0, string c_LINE_UP_TYPE, string c_INSTRUMENT_TYPE_GENERAL, string c_EXPANSION_TYPE_PARENT, string c_LINE_UP_TYPE_STOP_SALE, string c_LINE_UP_TYPE_LOGICAL_DELETE)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetParentGeneralInstrumentList(xml0, c_LINE_UP_TYPE, c_INSTRUMENT_TYPE_GENERAL, c_EXPANSION_TYPE_PARENT, c_LINE_UP_TYPE_STOP_SALE, c_LINE_UP_TYPE_LOGICAL_DELETE).ToList();
    		}
    		public virtual List<tbm_Employee> GetActiveEmployee(string strEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetActiveEmployee(strEmpNo).ToList();
    		}
    		public virtual List<doMonitoringInstrument> GetMonitoringInstrumentList(string xml0, string c_LINE_UP_TYPE, string c_INSTRUMENT_TYPE_MONITORING)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetMonitoringInstrumentList(xml0, c_LINE_UP_TYPE, c_INSTRUMENT_TYPE_MONITORING).ToList();
    		}
    		public virtual List<dtBillingClientData> GetBillingClient(string c_CUST_TYPE, string strBillingClientCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingClient(c_CUST_TYPE, strBillingClientCode).ToList();
    		}
    		public virtual List<dtProductName> GetProductName(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetProductName(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtEmployee> GetEmployee(string pchvEmpNo, string pchrnEmpFirstNameEN, Nullable<bool> pbitMainDepartmentFlag)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployee(pchvEmpNo, pchrnEmpFirstNameEN, pbitMainDepartmentFlag).ToList();
    		}
    		public virtual List<dtCustNameEN> GetCustNameEN(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustNameEN(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<dtCustNameLC> GetCustNameLC(string pchvnstrAutoComplete)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustNameLC(pchvnstrAutoComplete).ToList();
    		}
    		public virtual List<tbm_BillingType> GetTbm_BillingType(string billingTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_BillingType(billingTypeCode).ToList();
    		}
    		public virtual List<dtBelongingOffice> GetBelongingOfficeList(string pEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBelongingOfficeList(pEmpNo).ToList();
    		}
    		public virtual List<dtGetEmailAddress> GetEmailAddress(string pcharEmpFirstNameEN, string pcharEmailAddress, string pcharOfficeCode, string pcharDepartmentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmailAddress(pcharEmpFirstNameEN, pcharEmailAddress, pcharOfficeCode, pcharDepartmentCode).ToList();
    		}
    		public virtual List<dtEmailAddressForIncident> GetEmailAddressForIncident(Nullable<bool> c_FLAG_ON)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmailAddressForIncident(c_FLAG_ON).ToList();
    		}
    		public virtual List<doBelongingData> GetMainBelongingByEmpNo(string strEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetMainBelongingByEmpNo(strEmpNo).ToList();
    		}
    		public virtual List<Nullable<int>> CheckDuplicateGroup(string pGroupNameLC, string pGroupCode, Nullable<bool> pC_FLAG_OFF)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckDuplicateGroup(pGroupNameLC, pGroupCode, pC_FLAG_OFF).ToList();
    		}
    		public virtual List<Nullable<int>> IsUsedCustomer(string pcharCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.IsUsedCustomer(pcharCustCode).ToList();
    		}
    		public virtual List<tbm_CustomerGroup> InsertCustomerGroup(string xml_dtCustomerGroup)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertCustomerGroup(xml_dtCustomerGroup).ToList();
    		}
    		public virtual List<Nullable<int>> GenerateSiteCode(string pcharCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GenerateSiteCode(pcharCustCode).ToList();
    		}
    		public virtual List<tbm_InstrumentExpansion> CheckExistInstrumentExpansion(string pchvParentInstrumentCode, string pchvChildInstrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistInstrumentExpansion(pchvParentInstrumentCode, pchvChildInstrumentCode).ToList();
    		}
    		public virtual List<tbm_InstrumentExpansion> GetTbm_InstrumentExpansion(string pInstrumentCode, string pChildInstrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_InstrumentExpansion(pInstrumentCode, pChildInstrumentCode).ToList();
    		}
    		public virtual List<doInstrumentExpansion> GetInstrumentExpansion(string pchvnInstrumentCode, string c_LINE_UP_TYPE)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentExpansion(pchvnInstrumentCode, c_LINE_UP_TYPE).ToList();
    		}
    		public virtual List<tbm_BillingClient> InsertBillingClient(string billingClientCode, string nameEN, string nameLC, string fullNameEN, string fullNameLC, string branchNo, string branchNameEN, string branchNameLC, string custTypeCode, string companyTypeCode, string businessTypeCode, string phoneNo, string iDNo, string regionCode, string addressEN, string addressLC, Nullable<System.DateTime> createDate, string createBy, Nullable<System.DateTime> updateDate, string updateBy, Nullable<bool> deleteFlag)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertBillingClient(billingClientCode, nameEN, nameLC, fullNameEN, fullNameLC, branchNo, branchNameEN, branchNameLC, custTypeCode, companyTypeCode, businessTypeCode, phoneNo, iDNo, regionCode, addressEN, addressLC, createDate, createBy, updateDate, updateBy, deleteFlag).ToList();
    		}
    		public virtual List<Nullable<int>> CheckDuplicateSite(string pSiteCode, string pCustCode, string pSiteNameLC, string pAddressFullLC)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckDuplicateSite(pSiteCode, pCustCode, pSiteNameLC, pAddressFullLC).ToList();
    		}
    		public virtual List<Nullable<int>> CheckExistParentInstrument(string pchvnInstrumentCode, string c_EXPANSION_TYPE_PARENT)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistParentInstrument(pchvnInstrumentCode, c_EXPANSION_TYPE_PARENT).ToList();
    		}
    		public virtual List<doParentInstrument> GetParentInstrument(string pchvnInstrumentCode, string c_EXPANSION_TYPE_PARENT)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetParentInstrument(pchvnInstrumentCode, c_EXPANSION_TYPE_PARENT).ToList();
    		}
    		public virtual List<dtBelonging> GetBelonging(string pchvOfficeCode, string pchrDepartmentCode, string pchrPositionCode, string pchvEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBelonging(pchvOfficeCode, pchrDepartmentCode, pchrPositionCode, pchvEmpNo).ToList();
    		}
    		public virtual List<Nullable<bool>> CheckExistMainDepartmentPersonInCharge(string officeCode, string departmentCode, Nullable<int> belongingID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckExistMainDepartmentPersonInCharge(officeCode, departmentCode, belongingID).ToList();
    		}
    		public virtual List<Nullable<int>> CheckDuplicateCustomer_CustNameLC(string c_CUST_STATUS_EXISTING_CUSTOMER, string pchrCustCode, string pchrCustNameLC)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckDuplicateCustomer_CustNameLC(c_CUST_STATUS_EXISTING_CUSTOMER, pchrCustCode, pchrCustNameLC).ToList();
    		}
    		public virtual List<Nullable<int>> CheckDuplicateCustomer_IDNo(string c_CUST_STATUS_EXISTING_CUSTOMER, string pchrCustCode, string pchrIDNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckDuplicateCustomer_IDNo(c_CUST_STATUS_EXISTING_CUSTOMER, pchrCustCode, pchrIDNo).ToList();
    		}
    		public virtual List<dtBelongingEmpNo> GetBelongingEmpNoByOffice(string officeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBelongingEmpNoByOffice(officeCode).ToList();
    		}
    		public virtual List<Nullable<int>> CheckActiveCustomer(string pcharCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckActiveCustomer(pcharCustCode).ToList();
    		}
    		public virtual int UpdateCustomerStatus(string c_CUST_STATUS_EXISTING_CUSTOMER, string c_CUST_STATUS_NEW_CUSTOMER, string pchnvstrCustCode, string updateBy, Nullable<System.DateTime> updateDate)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateCustomerStatus(c_CUST_STATUS_EXISTING_CUSTOMER, c_CUST_STATUS_NEW_CUSTOMER, pchnvstrCustCode, updateBy, updateDate);
    		}
    		public virtual List<tbm_CustomerGroup> ClearAllCustomerGroup(string custCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.ClearAllCustomerGroup(custCode).ToList();
    		}
    		public virtual List<dtOffice> GetFunctionSale(string pchrC_FUNC_SALE_NO)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetFunctionSale(pchrC_FUNC_SALE_NO).ToList();
    		}
    		public virtual List<doCustomer> GetCustomerAll(string pchrCustCode, string pcharC_CUST_STATUS, string pcharC_CUST_TYPE, string pcharC_FINANCIAL_MARKET_TYPE)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetCustomerAll(pchrCustCode, pcharC_CUST_STATUS, pcharC_CUST_TYPE, pcharC_FINANCIAL_MARKET_TYPE).ToList();
    		}
    		public virtual List<string> GetPositionCodeAtMaxPositionLevel()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetPositionCodeAtMaxPositionLevel().ToList();
    		}
    		public virtual List<dtPermissionHeader> GetPermission(Nullable<bool> typeOffice, Nullable<bool> typeIndividual, string permissionGroupName, string officeCode, string department, string positionCode, string dtScreenFunction, string empNo, string c_PERMISSION_TYPE, string c_PERMISSION_TYPE_OFFICE, string c_PERMISSION_TYPE_INDIVIDUAL)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetPermission(typeOffice, typeIndividual, permissionGroupName, officeCode, department, positionCode, dtScreenFunction, empNo, c_PERMISSION_TYPE, c_PERMISSION_TYPE_OFFICE, c_PERMISSION_TYPE_INDIVIDUAL).ToList();
    		}
    		public virtual List<dtEmployeeBelonging> GetBelongingEmpList(string strOfficeCode, string strDepartmentCode, Nullable<bool> bChiefFlag, Nullable<bool> bApproverFlag, Nullable<bool> bCorrespondentFlag, string strEmpNoChief, Nullable<bool> c_FLAG_ON)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBelongingEmpList(strOfficeCode, strDepartmentCode, bChiefFlag, bApproverFlag, bCorrespondentFlag, strEmpNoChief, c_FLAG_ON).ToList();
    		}
    		public virtual List<dtDepartment> GetBelongingDepartmentList(string strOfficeCode, string strDepCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBelongingDepartmentList(strOfficeCode, strDepCode).ToList();
    		}
    		public virtual List<string> GetPermissionGroupName(string empFirstNameEN)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetPermissionGroupName(empFirstNameEN).ToList();
    		}
    		public virtual List<string> GetEmployeeCode(string empNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeCode(empNo).ToList();
    		}
    		public virtual List<CheckHeadOffice_Result> CheckHeadOffice(string strOfficeCode, string c_OFFICELEVEL_HEAD)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckHeadOffice(strOfficeCode, c_OFFICELEVEL_HEAD).ToList();
    		}
    		public virtual List<dtOfficeChief> GetOfficeChiefList(string strOfficeCode, Nullable<bool> c_FLAG_ON)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetOfficeChiefList(strOfficeCode, c_FLAG_ON).ToList();
    		}
    		public virtual List<doFunctionBilling> GetFunctionBilling(string pchrC_FUNC_BILLING_NO)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetFunctionBilling(pchrC_FUNC_BILLING_NO).ToList();
    		}
    		public virtual List<dtOffice> GetFunctionLogistic(string c_FUNC_LOGISTIC_NO)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetFunctionLogistic(c_FUNC_LOGISTIC_NO).ToList();
    		}
    		public virtual List<dtEmployeeOffice> GetEmployeeOffice(string strEmpNo, Nullable<bool> blnMainDepartmentFlag)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeOffice(strEmpNo, blnMainDepartmentFlag).ToList();
    		}
    		public virtual List<tbm_Office> GetIncidentOffice()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetIncidentOffice().ToList();
    		}
    		public virtual List<tbm_Office> GetAROffice()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetAROffice().ToList();
    		}
    		public virtual List<tbm_Instrument> GetTbm_Instrument(string instrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Instrument(instrumentCode).ToList();
    		}
    		public virtual List<dtDocumentTemplateByDocumentCode> GetDocumentTemplateByDocumentCode(string pDocumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetDocumentTemplateByDocumentCode(pDocumentCode).ToList();
    		}
    		public virtual List<string> GetSupplierName(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSupplierName(strLiveSearch).ToList();
    		}
    		public virtual List<tbm_Supplier> GetSupplier(string strSupplierCode, string strSupplierName)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSupplier(strSupplierCode, strSupplierName).ToList();
    		}
    		public virtual List<doSubcontractor> GetSubcontractor(string subcontractorCode, string coCompanyCode, string installationTeam, string subcontractorName)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractor(subcontractorCode, coCompanyCode, installationTeam, subcontractorName).ToList();
    		}
    		public virtual List<tbm_Belonging> DeleteAllBelonging(string pEmpNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteAllBelonging(pEmpNo).ToList();
    		}
    		public virtual List<doSubcontractor> GetSubcontractorDetail(string subcontractorCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractorDetail(subcontractorCode).ToList();
    		}
    		public virtual List<doSubcontractor> InsertSubcontractor(string xmlSubcontractor)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertSubcontractor(xmlSubcontractor).ToList();
    		}
    		public virtual List<doSubcontractor> UpdateSubcontractor(string xmlSubcontractor)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateSubcontractor(xmlSubcontractor).ToList();
    		}
    		public virtual List<tbm_Calendar> GetTbm_Calendar(Nullable<System.DateTime> onDate)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Calendar(onDate).ToList();
    		}
    		public virtual List<Nullable<int>> CheckInventoryHeadOffice(string officeCode, string c_FUNC_LOGISTIC_HQ)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckInventoryHeadOffice(officeCode, c_FUNC_LOGISTIC_HQ).ToList();
    		}
    		public virtual List<doSubcontractorName> GetSubcontractorName(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractorName(strLiveSearch).ToList();
    		}
    		public virtual List<doSubcontractorNameEN> GetSubcontractorNameEN(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractorNameEN(strLiveSearch).ToList();
    		}
    		public virtual List<doSubcontractorNameLC> GetSubcontractorNameLC(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractorNameLC(strLiveSearch).ToList();
    		}
    		public virtual List<doSubcontractorAddress> GetSubcontractorAddress(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractorAddress(strLiveSearch).ToList();
    		}
    		public virtual List<doSubcontractorAddressEN> GetSubcontractorAddressEN(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractorAddressEN(strLiveSearch).ToList();
    		}
    		public virtual List<doSubcontractorAddressLC> GetSubcontractorAddressLC(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSubcontractorAddressLC(strLiveSearch).ToList();
    		}
    		public virtual List<doSafetyStock> GetSafetyStock(string instrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSafetyStock(instrumentCode).ToList();
    		}
    		public virtual List<tbm_SafetyStock> InsertSafetyStock(string xmlSafetyStock)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertSafetyStock(xmlSafetyStock).ToList();
    		}
    		public virtual List<tbm_SafetyStock> UpdateSafetyStock(string xmlSafetyStock)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateSafetyStock(xmlSafetyStock).ToList();
    		}
    		public virtual List<Nullable<System.DateTime>> GetAutoTransferDate(string bankCode, string autoTransferDate)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetAutoTransferDate(bankCode, autoTransferDate).ToList();
    		}
    		public virtual List<tbm_Shelf> CheckDuplicateShelf(string pShelfNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckDuplicateShelf(pShelfNo).ToList();
    		}
    		public virtual List<doShelf> GetShelf(string shelfNo, string shelfName, string shelfTypeCode, string areaCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetShelf(shelfNo, shelfName, shelfTypeCode, areaCode).ToList();
    		}
    		public virtual List<tbm_Shelf> InsertShelf(string xmlShelf)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.InsertShelf(xmlShelf).ToList();
    		}
    		public virtual List<tbm_Shelf> UpdateShelf(string xmlShelf)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateShelf(xmlShelf).ToList();
    		}
    		public virtual List<doShelfName> GetShelfName(string strLiveSearch)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetShelfName(strLiveSearch).ToList();
    		}
    		public virtual List<Nullable<int>> CheckShelfDuplicateArea(string strInstrumentCode, string strAreaCode, string c_INV_SHELF_TYPE_NORMAL, Nullable<bool> c_FLAG_NO)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CheckShelfDuplicateArea(strInstrumentCode, strAreaCode, c_INV_SHELF_TYPE_NORMAL, c_FLAG_NO).ToList();
    		}
    		public virtual List<tbm_BillingClient> GetTbm_BillingClient(string billingClientCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_BillingClient(billingClientCode).ToList();
    		}
    		public virtual List<tbm_BillingClient> UpdateBillingClient(string xmlBillingClient)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.UpdateBillingClient(xmlBillingClient).ToList();
    		}
    		public virtual List<tbm_Bank> GetTbm_Bank()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Bank().ToList();
    		}
    		public virtual List<tbm_BankBranch> GetTbm_BankBranch(string bankCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_BankBranch(bankCode).ToList();
    		}
    		public virtual List<tbm_BillingType> GetBillingTypeOneTimeList(string billingServiceTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingTypeOneTimeList(billingServiceTypeCode).ToList();
    		}
    		public virtual List<tbm_Shelf> GetTbm_Shelf(string pShelfNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_Shelf(pShelfNo).ToList();
    		}
    		public virtual List<tbm_SecomBankAccount> GetTbm_SecomBankAccount(Nullable<int> secomAccountID)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_SecomBankAccount(secomAccountID).ToList();
    		}
    		public virtual List<tbm_CreditCardCompany> GetTbm_CreditCardCompany()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_CreditCardCompany().ToList();
    		}
    		public virtual List<tbm_PermissionDetail> CopyPermissionFromGroupToIndividual(string permissionGroupCode, string permissionIndividualCode, Nullable<System.DateTime> createDate, string createBy)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.CopyPermissionFromGroupToIndividual(permissionGroupCode, permissionIndividualCode, createDate, createBy).ToList();
    		}
    		public virtual List<tbm_CustomerGroup> DeleteTbm_CustomerGroup(string pGroupCode, string pCustCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.DeleteTbm_CustomerGroup(pGroupCode, pCustCode).ToList();
    		}
    		public virtual List<tbm_AutoTransferScheduleList> GetTbm_AutoTransferScheduleList(string bankCode, string autoTransferDate)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetTbm_AutoTransferScheduleList(bankCode, autoTransferDate).ToList();
    		}
    		public virtual List<tbm_SecomBankAccount> GetSecomBankAccountForAutoTransfer(string bankCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSecomBankAccountForAutoTransfer(bankCode).ToList();
    		}
    		public virtual List<dtBankBranch> GetBankBranch()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBankBranch().ToList();
    		}
    		public virtual List<doInstrumentData> GetInstrumentListForView(string xml0, string c_LINE_UP_TYPE, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentListForView(xml0, c_LINE_UP_TYPE, c_CURRENCY_LOCAL, c_CURRENCY_US).ToList();
    		}
    		public virtual List<tbm_BillingType> GetBillingTypeList(string billingServiceTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetBillingTypeList(billingServiceTypeCode).ToList();
    		}
    		public virtual List<tbm_Bank> GetAutoTransferBank()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetAutoTransferBank().ToList();
    		}
    		public virtual List<doSECOMAccount> GetSECOMAccountAutoTransfer()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSECOMAccountAutoTransfer().ToList();
    		}
    		public virtual List<doSECOMAccount> GetSECOMAccountBankTransfer()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSECOMAccountBankTransfer().ToList();
    		}
    		public virtual List<doSECOMAccount> GetSECOMAccountDummyTransfer()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSECOMAccountDummyTransfer().ToList();
    		}
    		public virtual List<doSECOMAccount> GetSECOMAccount()
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetSECOMAccount().ToList();
    		}
    		public virtual List<string> GetShelfNoDuplicateArea(string strInstrumentCode, string strAreaCode, string c_INV_SHELF_TYPE_NORMAL, Nullable<bool> c_FLAG_NO)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetShelfNoDuplicateArea(strInstrumentCode, strAreaCode, c_INV_SHELF_TYPE_NORMAL, c_FLAG_NO).ToList();
    		}
    		public virtual List<string> GetInstrumentCode(string instrumentCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentCode(instrumentCode).ToList();
    		}
    		public virtual List<string> GetInstrumentCodeAll(string instrumentCode, string expansionTypeCode)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetInstrumentCodeAll(instrumentCode, expansionTypeCode).ToList();
    		}
    		public virtual List<tbm_Employee> GetEmployeeByEmpNo(string empNo)
    		{
    			MADataEntities context = new MADataEntities();
    			return context.GetEmployeeByEmpNo(empNo).ToList();
    		}

        #endregion

    }
}
