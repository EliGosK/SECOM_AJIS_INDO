//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SECOM_AJIS.DataEntity.Contract
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CTDataEntities : DbContext
    {
        public CTDataEntities()
            : base("name=CTDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tbt_RentalBEDetails> tbt_RentalBEDetails { get; set; }
        public DbSet<tbt_RentalInstrumentDetails> tbt_RentalInstrumentDetails { get; set; }
        public DbSet<tbt_RentalMaintenanceDetails> tbt_RentalMaintenanceDetails { get; set; }
        public DbSet<tbt_RentalOperationType> tbt_RentalOperationType { get; set; }
        public DbSet<tbt_RentalSecurityBasic> tbt_RentalSecurityBasic { get; set; }
        public DbSet<tbt_RentalSentryGuard> tbt_RentalSentryGuard { get; set; }
        public DbSet<tbt_RentalSentryGuardDetails> tbt_RentalSentryGuardDetails { get; set; }
        public DbSet<tbt_CancelContractMemoDetail> tbt_CancelContractMemoDetail { get; set; }
        public DbSet<tbt_RentalInstSubcontractor> tbt_RentalInstSubcontractor { get; set; }
        public DbSet<tbt_CancelContractMemo> tbt_CancelContractMemo { get; set; }
        public DbSet<tbt_RelationType> tbt_RelationType { get; set; }
        public DbSet<tbt_BillingTemp> tbt_BillingTemp { get; set; }
        public DbSet<tbt_Project> tbt_Project { get; set; }
        public DbSet<tbt_RentalContractBasic> tbt_RentalContractBasic { get; set; }
        public DbSet<tbt_SaleBasic> tbt_SaleBasic { get; set; }
        public DbSet<tbt_SaleInstrumentDetails> tbt_SaleInstrumentDetails { get; set; }
        public DbSet<tbt_SaleInstSubcontractor> tbt_SaleInstSubcontractor { get; set; }
        public DbSet<tbt_ContractEmail> tbt_ContractEmail { get; set; }
        public DbSet<tbt_MaintenanceCheckup> tbt_MaintenanceCheckup { get; set; }
        public DbSet<tbt_MaintenanceCheckupDetails> tbt_MaintenanceCheckupDetails { get; set; }
        public DbSet<tbm_SubContractor> tbm_SubContractor { get; set; }
        public DbSet<tbt_DraftRentalBillingTarget> tbt_DraftRentalBillingTarget { get; set; }
        public DbSet<tbt_DraftRentalContract> tbt_DraftRentalContract { get; set; }
        public DbSet<tbt_DraftRentalEmail> tbt_DraftRentalEmail { get; set; }
        public DbSet<tbt_DraftRentalInstrument> tbt_DraftRentalInstrument { get; set; }
        public DbSet<tbt_DraftRentalMaintenanceDetails> tbt_DraftRentalMaintenanceDetails { get; set; }
        public DbSet<tbt_DraftRentalOperationType> tbt_DraftRentalOperationType { get; set; }
        public DbSet<tbt_DraftSaleContract> tbt_DraftSaleContract { get; set; }
        public DbSet<tbs_ARPermissionConfiguration> tbs_ARPermissionConfiguration { get; set; }
        public DbSet<tbt_IncidentRole> tbt_IncidentRole { get; set; }
        public DbSet<tbs_IncidentPermissionConfiguration> tbs_IncidentPermissionConfiguration { get; set; }
        public DbSet<tbt_DraftRentalBEDetails> tbt_DraftRentalBEDetails { get; set; }
        public DbSet<tbt_DraftRentalSentryGuard> tbt_DraftRentalSentryGuard { get; set; }
        public DbSet<tbt_DraftRentalSentryGuardDetails> tbt_DraftRentalSentryGuardDetails { get; set; }
        public DbSet<tbt_ProjectExpectedInstrumentDetails> tbt_ProjectExpectedInstrumentDetails { get; set; }
        public DbSet<tbt_ProjectOtherRalatedCompany> tbt_ProjectOtherRalatedCompany { get; set; }
        public DbSet<tbt_ProjectPurchaserCustomer> tbt_ProjectPurchaserCustomer { get; set; }
        public DbSet<tbt_ProjectSupportStaffDetails> tbt_ProjectSupportStaffDetails { get; set; }
        public DbSet<tbt_ProjectSystemDetails> tbt_ProjectSystemDetails { get; set; }
        public DbSet<tbs_ContractDocTemplate> tbs_ContractDocTemplate { get; set; }
        public DbSet<tbt_DocCancelContractMemo> tbt_DocCancelContractMemo { get; set; }
        public DbSet<tbt_DocCancelContractMemoDetail> tbt_DocCancelContractMemoDetail { get; set; }
        public DbSet<tbt_ContractDocument> tbt_ContractDocument { get; set; }
        public DbSet<tbt_DocChangeFeeMemo> tbt_DocChangeFeeMemo { get; set; }
        public DbSet<tbt_DocChangeMemo> tbt_DocChangeMemo { get; set; }
        public DbSet<tbt_DocChangeNotice> tbt_DocChangeNotice { get; set; }
        public DbSet<tbt_DocConfirmCurrentInstrumentMemo> tbt_DocConfirmCurrentInstrumentMemo { get; set; }
        public DbSet<tbt_DocContractReport> tbt_DocContractReport { get; set; }
        public DbSet<tbt_DocInstrumentDetails> tbt_DocInstrumentDetails { get; set; }
        public DbSet<tbt_DraftSaleBillingTarget> tbt_DraftSaleBillingTarget { get; set; }
        public DbSet<tbt_DraftSaleEmail> tbt_DraftSaleEmail { get; set; }
        public DbSet<tbt_DraftSaleInstrument> tbt_DraftSaleInstrument { get; set; }
        public DbSet<tbt_ProjectStockoutBranchIntrumentDetails> tbt_ProjectStockoutBranchIntrumentDetails { get; set; }
        public DbSet<tbt_ProjectStockoutInstrument1> tbt_ProjectStockoutInstrument1 { get; set; }
        public DbSet<tbt_Incident> tbt_Incident { get; set; }
        public DbSet<tbt_IncidentHistory> tbt_IncidentHistory { get; set; }
        public DbSet<tbt_IncidentHistoryDetail> tbt_IncidentHistoryDetail { get; set; }
        public DbSet<tbs_ARTypeTitle> tbs_ARTypeTitle { get; set; }
        public DbSet<tbs_ARTypePattern> tbs_ARTypePattern { get; set; }
        public DbSet<tbt_AR> tbt_AR { get; set; }
        public DbSet<tbt_ARFeeAdjustment> tbt_ARFeeAdjustment { get; set; }
        public DbSet<tbt_ARRole> tbt_ARRole { get; set; }
        public DbSet<tbt_ARHistory> tbt_ARHistory { get; set; }
        public DbSet<tbt_ARHistoryDetail> tbt_ARHistoryDetail { get; set; }
        public DbSet<tbs_IncidentReasonType> tbs_IncidentReasonType { get; set; }
        public DbSet<tbt_ContractCustomerHistory> tbt_ContractCustomerHistory { get; set; }
        public DbSet<tbt_ProjectStockOutMemo> tbt_ProjectStockOutMemo { get; set; }
        public DbSet<tbs_ARApproveNoRunningNo> tbs_ARApproveNoRunningNo { get; set; }
        public DbSet<tbs_ARRunningNo> tbs_ARRunningNo { get; set; }
        public DbSet<tbs_IncidentRunningNo> tbs_IncidentRunningNo { get; set; }
        public DbSet<tbt_DocStartMemo> tbt_DocStartMemo { get; set; }
    
        public virtual ObjectResult<dtContractData> GetContractDataForSearch(string pchrCustomerCode, string pchvnCustomerName, string pchvBranchName, string pchvnAddress, string pchvnAlley, string pchvnRoad, string pchvnSubDistrict, string pchrProvinceCode, string pchrDistrictCode, string pchrZipCode, string pchvSALE_CHANGE_TYPE_NEW_SALE, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var pchrCustomerCodeParameter = pchrCustomerCode != null ?
                new ObjectParameter("pchrCustomerCode", pchrCustomerCode) :
                new ObjectParameter("pchrCustomerCode", typeof(string));
    
            var pchvnCustomerNameParameter = pchvnCustomerName != null ?
                new ObjectParameter("pchvnCustomerName", pchvnCustomerName) :
                new ObjectParameter("pchvnCustomerName", typeof(string));
    
            var pchvBranchNameParameter = pchvBranchName != null ?
                new ObjectParameter("pchvBranchName", pchvBranchName) :
                new ObjectParameter("pchvBranchName", typeof(string));
    
            var pchvnAddressParameter = pchvnAddress != null ?
                new ObjectParameter("pchvnAddress", pchvnAddress) :
                new ObjectParameter("pchvnAddress", typeof(string));
    
            var pchvnAlleyParameter = pchvnAlley != null ?
                new ObjectParameter("pchvnAlley", pchvnAlley) :
                new ObjectParameter("pchvnAlley", typeof(string));
    
            var pchvnRoadParameter = pchvnRoad != null ?
                new ObjectParameter("pchvnRoad", pchvnRoad) :
                new ObjectParameter("pchvnRoad", typeof(string));
    
            var pchvnSubDistrictParameter = pchvnSubDistrict != null ?
                new ObjectParameter("pchvnSubDistrict", pchvnSubDistrict) :
                new ObjectParameter("pchvnSubDistrict", typeof(string));
    
            var pchrProvinceCodeParameter = pchrProvinceCode != null ?
                new ObjectParameter("pchrProvinceCode", pchrProvinceCode) :
                new ObjectParameter("pchrProvinceCode", typeof(string));
    
            var pchrDistrictCodeParameter = pchrDistrictCode != null ?
                new ObjectParameter("pchrDistrictCode", pchrDistrictCode) :
                new ObjectParameter("pchrDistrictCode", typeof(string));
    
            var pchrZipCodeParameter = pchrZipCode != null ?
                new ObjectParameter("pchrZipCode", pchrZipCode) :
                new ObjectParameter("pchrZipCode", typeof(string));
    
            var pchvSALE_CHANGE_TYPE_NEW_SALEParameter = pchvSALE_CHANGE_TYPE_NEW_SALE != null ?
                new ObjectParameter("pchvSALE_CHANGE_TYPE_NEW_SALE", pchvSALE_CHANGE_TYPE_NEW_SALE) :
                new ObjectParameter("pchvSALE_CHANGE_TYPE_NEW_SALE", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractData>("GetContractDataForSearch", pchrCustomerCodeParameter, pchvnCustomerNameParameter, pchvBranchNameParameter, pchvnAddressParameter, pchvnAlleyParameter, pchvnRoadParameter, pchvnSubDistrictParameter, pchrProvinceCodeParameter, pchrDistrictCodeParameter, pchrZipCodeParameter, pchvSALE_CHANGE_TYPE_NEW_SALEParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtContractBranchName> GetContractBranchName(string pchvLiveSearch)
        {
            var pchvLiveSearchParameter = pchvLiveSearch != null ?
                new ObjectParameter("pchvLiveSearch", pchvLiveSearch) :
                new ObjectParameter("pchvLiveSearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractBranchName>("GetContractBranchName", pchvLiveSearchParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> GetTbt_RentalContractBasic(string pContractCode, string pUserCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pUserCodeParameter = pUserCode != null ?
                new ObjectParameter("pUserCode", pUserCode) :
                new ObjectParameter("pUserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("GetTbt_RentalContractBasic", pContractCodeParameter, pUserCodeParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> GetTbt_RentalContractBasic(string pContractCode, string pUserCode, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pUserCodeParameter = pUserCode != null ?
                new ObjectParameter("pUserCode", pUserCode) :
                new ObjectParameter("pUserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("GetTbt_RentalContractBasic", mergeOption, pContractCodeParameter, pUserCodeParameter);
        }
    
        public virtual ObjectResult<dtRelatedContract> GetRelatedContractList(string pchrRelationType, string pchvstrContractCode, string pchrOCC, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var pchrRelationTypeParameter = pchrRelationType != null ?
                new ObjectParameter("pchrRelationType", pchrRelationType) :
                new ObjectParameter("pchrRelationType", typeof(string));
    
            var pchvstrContractCodeParameter = pchvstrContractCode != null ?
                new ObjectParameter("pchvstrContractCode", pchvstrContractCode) :
                new ObjectParameter("pchvstrContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtRelatedContract>("GetRelatedContractList", pchrRelationTypeParameter, pchvstrContractCodeParameter, pchrOCCParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalContractBasicForView> GetTbt_RentalContractBasicForView(string pchvContractCode)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalContractBasicForView>("GetTbt_RentalContractBasicForView", pchvContractCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalSecurityBasicForView> GetTbt_RentalSecurityBasicForView(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalSecurityBasicForView>("GetTbt_RentalSecurityBasicForView", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalMaintenanceDetailsForView> GetTbt_RentalMaintenanceDetailsForView(string contractCode, string oCC)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalMaintenanceDetailsForView>("GetTbt_RentalMaintenanceDetailsForView", contractCodeParameter, oCCParameter);
        }
    
        public virtual ObjectResult<dtTbt_CancelContractMemoDetailForView> GetTbt_CancelContractMemoDetailForView(string contractCode, string oCC)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_CancelContractMemoDetailForView>("GetTbt_CancelContractMemoDetailForView", contractCodeParameter, oCCParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalOperationTypeListForView> GetTbt_RentalOperationTypeListForView(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalOperationTypeListForView>("GetTbt_RentalOperationTypeListForView", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dtContractsSameSite> GetContractsSameSiteList(string pSiteCode, string pC_RENTAL_CHANGE_TYPE, string pC_SALE_CHANGE_TYPE, string pC_SERVICE_TYPE_RENTAL, string pContractCode)
        {
            var pSiteCodeParameter = pSiteCode != null ?
                new ObjectParameter("pSiteCode", pSiteCode) :
                new ObjectParameter("pSiteCode", typeof(string));
    
            var pC_RENTAL_CHANGE_TYPEParameter = pC_RENTAL_CHANGE_TYPE != null ?
                new ObjectParameter("pC_RENTAL_CHANGE_TYPE", pC_RENTAL_CHANGE_TYPE) :
                new ObjectParameter("pC_RENTAL_CHANGE_TYPE", typeof(string));
    
            var pC_SALE_CHANGE_TYPEParameter = pC_SALE_CHANGE_TYPE != null ?
                new ObjectParameter("pC_SALE_CHANGE_TYPE", pC_SALE_CHANGE_TYPE) :
                new ObjectParameter("pC_SALE_CHANGE_TYPE", typeof(string));
    
            var pC_SERVICE_TYPE_RENTALParameter = pC_SERVICE_TYPE_RENTAL != null ?
                new ObjectParameter("pC_SERVICE_TYPE_RENTAL", pC_SERVICE_TYPE_RENTAL) :
                new ObjectParameter("pC_SERVICE_TYPE_RENTAL", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractsSameSite>("GetContractsSameSiteList", pSiteCodeParameter, pC_RENTAL_CHANGE_TYPEParameter, pC_SALE_CHANGE_TYPEParameter, pC_SERVICE_TYPE_RENTALParameter, pContractCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalInstSubContractorListForView> GetTbt_RentalInstSubContractorListForView(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalInstSubContractorListForView>("GetTbt_RentalInstSubContractorListForView", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dtContractDocument> GetContractDocDataListForView(string pContractCode, string pOCC, string pContractOfficeCode_List, string pOperationOfficeCode_List)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pContractOfficeCode_ListParameter = pContractOfficeCode_List != null ?
                new ObjectParameter("pContractOfficeCode_List", pContractOfficeCode_List) :
                new ObjectParameter("pContractOfficeCode_List", typeof(string));
    
            var pOperationOfficeCode_ListParameter = pOperationOfficeCode_List != null ?
                new ObjectParameter("pOperationOfficeCode_List", pOperationOfficeCode_List) :
                new ObjectParameter("pOperationOfficeCode_List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractDocument>("GetContractDocDataListForView", pContractCodeParameter, pOCCParameter, pContractOfficeCode_ListParameter, pOperationOfficeCode_ListParameter);
        }
    
        public virtual ObjectResult<doContractHeader> GetContractHeaderData(string xml0)
        {
            var xml0Parameter = xml0 != null ?
                new ObjectParameter("xml0", xml0) :
                new ObjectParameter("xml0", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doContractHeader>("GetContractHeaderData", xml0Parameter);
        }
    
        public virtual ObjectResult<dtTbt_SaleBasicForView> GetTbt_SaleBasicForView(string pchvContractCode, string pchrOCC, Nullable<bool> pLatestOCCFlag)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            var pLatestOCCFlagParameter = pLatestOCCFlag.HasValue ?
                new ObjectParameter("pLatestOCCFlag", pLatestOCCFlag) :
                new ObjectParameter("pLatestOCCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_SaleBasicForView>("GetTbt_SaleBasicForView", pchvContractCodeParameter, pchrOCCParameter, pLatestOCCFlagParameter);
        }
    
        public virtual ObjectResult<dtSaleHistoryDigest> GetSaleHistoryDigestList(string pchvContractCode, string xml_SelChangeType, string xml_selIncidentARtype, string pC_SALE_CHANGE_TYPE, string pC_INCIDENT_TYPE, string pC_AR_TYPE, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var xml_SelChangeTypeParameter = xml_SelChangeType != null ?
                new ObjectParameter("xml_SelChangeType", xml_SelChangeType) :
                new ObjectParameter("xml_SelChangeType", typeof(string));
    
            var xml_selIncidentARtypeParameter = xml_selIncidentARtype != null ?
                new ObjectParameter("xml_selIncidentARtype", xml_selIncidentARtype) :
                new ObjectParameter("xml_selIncidentARtype", typeof(string));
    
            var pC_SALE_CHANGE_TYPEParameter = pC_SALE_CHANGE_TYPE != null ?
                new ObjectParameter("pC_SALE_CHANGE_TYPE", pC_SALE_CHANGE_TYPE) :
                new ObjectParameter("pC_SALE_CHANGE_TYPE", typeof(string));
    
            var pC_INCIDENT_TYPEParameter = pC_INCIDENT_TYPE != null ?
                new ObjectParameter("pC_INCIDENT_TYPE", pC_INCIDENT_TYPE) :
                new ObjectParameter("pC_INCIDENT_TYPE", typeof(string));
    
            var pC_AR_TYPEParameter = pC_AR_TYPE != null ?
                new ObjectParameter("pC_AR_TYPE", pC_AR_TYPE) :
                new ObjectParameter("pC_AR_TYPE", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSaleHistoryDigest>("GetSaleHistoryDigestList", pchvContractCodeParameter, xml_SelChangeTypeParameter, xml_selIncidentARtypeParameter, pC_SALE_CHANGE_TYPEParameter, pC_INCIDENT_TYPEParameter, pC_AR_TYPEParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtRentalHistoryDigest> GetRentalHistoryDigestList(string pchvContractCode, string xml_SelChangeType, string xml_selIncidentARtype, string pC_RENTAL_CHANGE_TYPE, string pC_INCIDENT_TYPE, string pC_AR_TYPE, string pC_DOC_AUDIT_RESULT, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var xml_SelChangeTypeParameter = xml_SelChangeType != null ?
                new ObjectParameter("xml_SelChangeType", xml_SelChangeType) :
                new ObjectParameter("xml_SelChangeType", typeof(string));
    
            var xml_selIncidentARtypeParameter = xml_selIncidentARtype != null ?
                new ObjectParameter("xml_selIncidentARtype", xml_selIncidentARtype) :
                new ObjectParameter("xml_selIncidentARtype", typeof(string));
    
            var pC_RENTAL_CHANGE_TYPEParameter = pC_RENTAL_CHANGE_TYPE != null ?
                new ObjectParameter("pC_RENTAL_CHANGE_TYPE", pC_RENTAL_CHANGE_TYPE) :
                new ObjectParameter("pC_RENTAL_CHANGE_TYPE", typeof(string));
    
            var pC_INCIDENT_TYPEParameter = pC_INCIDENT_TYPE != null ?
                new ObjectParameter("pC_INCIDENT_TYPE", pC_INCIDENT_TYPE) :
                new ObjectParameter("pC_INCIDENT_TYPE", typeof(string));
    
            var pC_AR_TYPEParameter = pC_AR_TYPE != null ?
                new ObjectParameter("pC_AR_TYPE", pC_AR_TYPE) :
                new ObjectParameter("pC_AR_TYPE", typeof(string));
    
            var pC_DOC_AUDIT_RESULTParameter = pC_DOC_AUDIT_RESULT != null ?
                new ObjectParameter("pC_DOC_AUDIT_RESULT", pC_DOC_AUDIT_RESULT) :
                new ObjectParameter("pC_DOC_AUDIT_RESULT", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtRentalHistoryDigest>("GetRentalHistoryDigestList", pchvContractCodeParameter, xml_SelChangeTypeParameter, xml_selIncidentARtypeParameter, pC_RENTAL_CHANGE_TYPEParameter, pC_INCIDENT_TYPEParameter, pC_AR_TYPEParameter, pC_DOC_AUDIT_RESULTParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtSearchDraftContractResult> SearchDraftContractList(string pchvQuotationTargetCode, string pchrAlphabet, Nullable<System.DateTime> pdtmRegistrationDateFrom, Nullable<System.DateTime> pdtmRegistrationDateTo, string pchvSalesman1Code, string pchvnSaleman1Name, string pchvnContractTargetName, string pchrnSiteName, string pchvnContractOfficeCode, string pchvnOperationOfficeCode, string pchrApproveContractStatus, Nullable<System.DateTime> pdtmApproveDateFrom, Nullable<System.DateTime> pdtmApproveDateTo)
        {
            var pchvQuotationTargetCodeParameter = pchvQuotationTargetCode != null ?
                new ObjectParameter("pchvQuotationTargetCode", pchvQuotationTargetCode) :
                new ObjectParameter("pchvQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pdtmRegistrationDateFromParameter = pdtmRegistrationDateFrom.HasValue ?
                new ObjectParameter("pdtmRegistrationDateFrom", pdtmRegistrationDateFrom) :
                new ObjectParameter("pdtmRegistrationDateFrom", typeof(System.DateTime));
    
            var pdtmRegistrationDateToParameter = pdtmRegistrationDateTo.HasValue ?
                new ObjectParameter("pdtmRegistrationDateTo", pdtmRegistrationDateTo) :
                new ObjectParameter("pdtmRegistrationDateTo", typeof(System.DateTime));
    
            var pchvSalesman1CodeParameter = pchvSalesman1Code != null ?
                new ObjectParameter("pchvSalesman1Code", pchvSalesman1Code) :
                new ObjectParameter("pchvSalesman1Code", typeof(string));
    
            var pchvnSaleman1NameParameter = pchvnSaleman1Name != null ?
                new ObjectParameter("pchvnSaleman1Name", pchvnSaleman1Name) :
                new ObjectParameter("pchvnSaleman1Name", typeof(string));
    
            var pchvnContractTargetNameParameter = pchvnContractTargetName != null ?
                new ObjectParameter("pchvnContractTargetName", pchvnContractTargetName) :
                new ObjectParameter("pchvnContractTargetName", typeof(string));
    
            var pchrnSiteNameParameter = pchrnSiteName != null ?
                new ObjectParameter("pchrnSiteName", pchrnSiteName) :
                new ObjectParameter("pchrnSiteName", typeof(string));
    
            var pchvnContractOfficeCodeParameter = pchvnContractOfficeCode != null ?
                new ObjectParameter("pchvnContractOfficeCode", pchvnContractOfficeCode) :
                new ObjectParameter("pchvnContractOfficeCode", typeof(string));
    
            var pchvnOperationOfficeCodeParameter = pchvnOperationOfficeCode != null ?
                new ObjectParameter("pchvnOperationOfficeCode", pchvnOperationOfficeCode) :
                new ObjectParameter("pchvnOperationOfficeCode", typeof(string));
    
            var pchrApproveContractStatusParameter = pchrApproveContractStatus != null ?
                new ObjectParameter("pchrApproveContractStatus", pchrApproveContractStatus) :
                new ObjectParameter("pchrApproveContractStatus", typeof(string));
    
            var pdtmApproveDateFromParameter = pdtmApproveDateFrom.HasValue ?
                new ObjectParameter("pdtmApproveDateFrom", pdtmApproveDateFrom) :
                new ObjectParameter("pdtmApproveDateFrom", typeof(System.DateTime));
    
            var pdtmApproveDateToParameter = pdtmApproveDateTo.HasValue ?
                new ObjectParameter("pdtmApproveDateTo", pdtmApproveDateTo) :
                new ObjectParameter("pdtmApproveDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSearchDraftContractResult>("SearchDraftContractList", pchvQuotationTargetCodeParameter, pchrAlphabetParameter, pdtmRegistrationDateFromParameter, pdtmRegistrationDateToParameter, pchvSalesman1CodeParameter, pchvnSaleman1NameParameter, pchvnContractTargetNameParameter, pchrnSiteNameParameter, pchvnContractOfficeCodeParameter, pchvnOperationOfficeCodeParameter, pchrApproveContractStatusParameter, pdtmApproveDateFromParameter, pdtmApproveDateToParameter);
        }
    
        public virtual ObjectResult<dtContractTargetInfoByRelated> GetContractTargetInfoByRelated(string pRelatedContractCode, string pRelationType, string pRelatedOCC, string pC_PROD_TYPE_SALE, string pC_PROD_TYPE_AL, string pC_PROD_TYPE_ONLINE, string pC_PROD_TYPE_RENTAL_SALE, string pRelatedProductTypeCode, string pC_RELATION_TYPE_MA, string pC_RELATION_TYPE_SALE)
        {
            var pRelatedContractCodeParameter = pRelatedContractCode != null ?
                new ObjectParameter("pRelatedContractCode", pRelatedContractCode) :
                new ObjectParameter("pRelatedContractCode", typeof(string));
    
            var pRelationTypeParameter = pRelationType != null ?
                new ObjectParameter("pRelationType", pRelationType) :
                new ObjectParameter("pRelationType", typeof(string));
    
            var pRelatedOCCParameter = pRelatedOCC != null ?
                new ObjectParameter("pRelatedOCC", pRelatedOCC) :
                new ObjectParameter("pRelatedOCC", typeof(string));
    
            var pC_PROD_TYPE_SALEParameter = pC_PROD_TYPE_SALE != null ?
                new ObjectParameter("pC_PROD_TYPE_SALE", pC_PROD_TYPE_SALE) :
                new ObjectParameter("pC_PROD_TYPE_SALE", typeof(string));
    
            var pC_PROD_TYPE_ALParameter = pC_PROD_TYPE_AL != null ?
                new ObjectParameter("pC_PROD_TYPE_AL", pC_PROD_TYPE_AL) :
                new ObjectParameter("pC_PROD_TYPE_AL", typeof(string));
    
            var pC_PROD_TYPE_ONLINEParameter = pC_PROD_TYPE_ONLINE != null ?
                new ObjectParameter("pC_PROD_TYPE_ONLINE", pC_PROD_TYPE_ONLINE) :
                new ObjectParameter("pC_PROD_TYPE_ONLINE", typeof(string));
    
            var pC_PROD_TYPE_RENTAL_SALEParameter = pC_PROD_TYPE_RENTAL_SALE != null ?
                new ObjectParameter("pC_PROD_TYPE_RENTAL_SALE", pC_PROD_TYPE_RENTAL_SALE) :
                new ObjectParameter("pC_PROD_TYPE_RENTAL_SALE", typeof(string));
    
            var pRelatedProductTypeCodeParameter = pRelatedProductTypeCode != null ?
                new ObjectParameter("pRelatedProductTypeCode", pRelatedProductTypeCode) :
                new ObjectParameter("pRelatedProductTypeCode", typeof(string));
    
            var pC_RELATION_TYPE_MAParameter = pC_RELATION_TYPE_MA != null ?
                new ObjectParameter("pC_RELATION_TYPE_MA", pC_RELATION_TYPE_MA) :
                new ObjectParameter("pC_RELATION_TYPE_MA", typeof(string));
    
            var pC_RELATION_TYPE_SALEParameter = pC_RELATION_TYPE_SALE != null ?
                new ObjectParameter("pC_RELATION_TYPE_SALE", pC_RELATION_TYPE_SALE) :
                new ObjectParameter("pC_RELATION_TYPE_SALE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractTargetInfoByRelated>("GetContractTargetInfoByRelated", pRelatedContractCodeParameter, pRelationTypeParameter, pRelatedOCCParameter, pC_PROD_TYPE_SALEParameter, pC_PROD_TYPE_ALParameter, pC_PROD_TYPE_ONLINEParameter, pC_PROD_TYPE_RENTAL_SALEParameter, pRelatedProductTypeCodeParameter, pC_RELATION_TYPE_MAParameter, pC_RELATION_TYPE_SALEParameter);
        }
    
        public virtual ObjectResult<dtMaintContractTargetInfoByRelated> GetMaintContractTargetInfoByRelated(string pRelatedContractCode, string pC_MA_TARGET_PROD_TYPE, string pC_MA_TYPE, string pC_MA_FEE_TYPE, string pC_RELATION_TYPE_MA, string pRelatedOCC, string pC_PROD_TYPE_SALE, string pC_PROD_TYPE_AL, string pC_PROD_TYPE_ONLINE, string pC_PROD_TYPE_RENTAL_SALE, string pRelatedProductTypeCode)
        {
            var pRelatedContractCodeParameter = pRelatedContractCode != null ?
                new ObjectParameter("pRelatedContractCode", pRelatedContractCode) :
                new ObjectParameter("pRelatedContractCode", typeof(string));
    
            var pC_MA_TARGET_PROD_TYPEParameter = pC_MA_TARGET_PROD_TYPE != null ?
                new ObjectParameter("pC_MA_TARGET_PROD_TYPE", pC_MA_TARGET_PROD_TYPE) :
                new ObjectParameter("pC_MA_TARGET_PROD_TYPE", typeof(string));
    
            var pC_MA_TYPEParameter = pC_MA_TYPE != null ?
                new ObjectParameter("pC_MA_TYPE", pC_MA_TYPE) :
                new ObjectParameter("pC_MA_TYPE", typeof(string));
    
            var pC_MA_FEE_TYPEParameter = pC_MA_FEE_TYPE != null ?
                new ObjectParameter("pC_MA_FEE_TYPE", pC_MA_FEE_TYPE) :
                new ObjectParameter("pC_MA_FEE_TYPE", typeof(string));
    
            var pC_RELATION_TYPE_MAParameter = pC_RELATION_TYPE_MA != null ?
                new ObjectParameter("pC_RELATION_TYPE_MA", pC_RELATION_TYPE_MA) :
                new ObjectParameter("pC_RELATION_TYPE_MA", typeof(string));
    
            var pRelatedOCCParameter = pRelatedOCC != null ?
                new ObjectParameter("pRelatedOCC", pRelatedOCC) :
                new ObjectParameter("pRelatedOCC", typeof(string));
    
            var pC_PROD_TYPE_SALEParameter = pC_PROD_TYPE_SALE != null ?
                new ObjectParameter("pC_PROD_TYPE_SALE", pC_PROD_TYPE_SALE) :
                new ObjectParameter("pC_PROD_TYPE_SALE", typeof(string));
    
            var pC_PROD_TYPE_ALParameter = pC_PROD_TYPE_AL != null ?
                new ObjectParameter("pC_PROD_TYPE_AL", pC_PROD_TYPE_AL) :
                new ObjectParameter("pC_PROD_TYPE_AL", typeof(string));
    
            var pC_PROD_TYPE_ONLINEParameter = pC_PROD_TYPE_ONLINE != null ?
                new ObjectParameter("pC_PROD_TYPE_ONLINE", pC_PROD_TYPE_ONLINE) :
                new ObjectParameter("pC_PROD_TYPE_ONLINE", typeof(string));
    
            var pC_PROD_TYPE_RENTAL_SALEParameter = pC_PROD_TYPE_RENTAL_SALE != null ?
                new ObjectParameter("pC_PROD_TYPE_RENTAL_SALE", pC_PROD_TYPE_RENTAL_SALE) :
                new ObjectParameter("pC_PROD_TYPE_RENTAL_SALE", typeof(string));
    
            var pRelatedProductTypeCodeParameter = pRelatedProductTypeCode != null ?
                new ObjectParameter("pRelatedProductTypeCode", pRelatedProductTypeCode) :
                new ObjectParameter("pRelatedProductTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtMaintContractTargetInfoByRelated>("GetMaintContractTargetInfoByRelated", pRelatedContractCodeParameter, pC_MA_TARGET_PROD_TYPEParameter, pC_MA_TYPEParameter, pC_MA_FEE_TYPEParameter, pC_RELATION_TYPE_MAParameter, pRelatedOCCParameter, pC_PROD_TYPE_SALEParameter, pC_PROD_TYPE_ALParameter, pC_PROD_TYPE_ONLINEParameter, pC_PROD_TYPE_RENTAL_SALEParameter, pRelatedProductTypeCodeParameter);
        }
    
        public virtual ObjectResult<dtSaleInstruDetailListForView> GetSaleInstruDetailListForView(string pContractCode, string pOCC, string pInstrumentTypeCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pInstrumentTypeCodeParameter = pInstrumentTypeCode != null ?
                new ObjectParameter("pInstrumentTypeCode", pInstrumentTypeCode) :
                new ObjectParameter("pInstrumentTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSaleInstruDetailListForView>("GetSaleInstruDetailListForView", pContractCodeParameter, pOCCParameter, pInstrumentTypeCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalBEDetailsForView> GetTbt_RentalBEDetailsForView(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalBEDetailsForView>("GetTbt_RentalBEDetailsForView", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalInstrumentDetailsListForView> GetTbt_RentalInstrumentDetailsListForView(string pContractCode, string pOCC, string pInstrumentCode, string pInstrumentTypeCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pInstrumentCodeParameter = pInstrumentCode != null ?
                new ObjectParameter("pInstrumentCode", pInstrumentCode) :
                new ObjectParameter("pInstrumentCode", typeof(string));
    
            var pInstrumentTypeCodeParameter = pInstrumentTypeCode != null ?
                new ObjectParameter("pInstrumentTypeCode", pInstrumentTypeCode) :
                new ObjectParameter("pInstrumentTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalInstrumentDetailsListForView>("GetTbt_RentalInstrumentDetailsListForView", pContractCodeParameter, pOCCParameter, pInstrumentCodeParameter, pInstrumentTypeCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalSentryGuardDetailsListForView> GetTbt_RentalSentryGuardDetailsListForView(string pContractCode, string pOCC, Nullable<int> pSequenceNo)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSequenceNoParameter = pSequenceNo.HasValue ?
                new ObjectParameter("pSequenceNo", pSequenceNo) :
                new ObjectParameter("pSequenceNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalSentryGuardDetailsListForView>("GetTbt_RentalSentryGuardDetailsListForView", pContractCodeParameter, pOCCParameter, pSequenceNoParameter);
        }
    
        public virtual ObjectResult<dtTbt_RentalSentryGuardForView> GetTbt_RentalSentryGuardForView(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_RentalSentryGuardForView>("GetTbt_RentalSentryGuardForView", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dtTbt_SaleInstSubcontractorListForView> GetTbt_SaleInstSubcontractorListForView(string pContractCode, string pOCC, string pSubcontractorCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSubcontractorCodeParameter = pSubcontractorCode != null ?
                new ObjectParameter("pSubcontractorCode", pSubcontractorCode) :
                new ObjectParameter("pSubcontractorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_SaleInstSubcontractorListForView>("GetTbt_SaleInstSubcontractorListForView", pContractCodeParameter, pOCCParameter, pSubcontractorCodeParameter);
        }
    
        public virtual ObjectResult<string> GetSaleLastOCC(string pContractCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSaleLastOCC", pContractCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_BillingTempListForView> GetTbt_BillingTempListForView(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_BillingTempListForView>("GetTbt_BillingTempListForView", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dtGroupSummary> GetGroupSummaryForViewCustGrp(string strGroupCode, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtGroupSummary>("GetGroupSummaryForViewCustGrp", strGroupCodeParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtCustomerListGrp> GetCustomerListForViewCustGrp(string strGroupCode, string strCustRoleType, string strProductTypeCode)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCustRoleTypeParameter = strCustRoleType != null ?
                new ObjectParameter("strCustRoleType", strCustRoleType) :
                new ObjectParameter("strCustRoleType", typeof(string));
    
            var strProductTypeCodeParameter = strProductTypeCode != null ?
                new ObjectParameter("strProductTypeCode", strProductTypeCode) :
                new ObjectParameter("strProductTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtCustomerListGrp>("GetCustomerListForViewCustGrp", strGroupCodeParameter, strCustRoleTypeParameter, strProductTypeCodeParameter);
        }
    
        public virtual ObjectResult<dtsiteListGrp> GetSiteListForViewCustGrp(string strGroupCode, string strCustRoleType, string strProductTypeCode)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCustRoleTypeParameter = strCustRoleType != null ?
                new ObjectParameter("strCustRoleType", strCustRoleType) :
                new ObjectParameter("strCustRoleType", typeof(string));
    
            var strProductTypeCodeParameter = strProductTypeCode != null ?
                new ObjectParameter("strProductTypeCode", strProductTypeCode) :
                new ObjectParameter("strProductTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtsiteListGrp>("GetSiteListForViewCustGrp", strGroupCodeParameter, strCustRoleTypeParameter, strProductTypeCodeParameter);
        }
    
        public virtual ObjectResult<dtContractListGrp> GetContractListForViewCustGrp(string strGroupCode, string strCustRoleType, string strProductTypeCode)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCustRoleTypeParameter = strCustRoleType != null ?
                new ObjectParameter("strCustRoleType", strCustRoleType) :
                new ObjectParameter("strCustRoleType", typeof(string));
    
            var strProductTypeCodeParameter = strProductTypeCode != null ?
                new ObjectParameter("strProductTypeCode", strProductTypeCode) :
                new ObjectParameter("strProductTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractListGrp>("GetContractListForViewCustGrp", strGroupCodeParameter, strCustRoleTypeParameter, strProductTypeCodeParameter);
        }
    
        public virtual ObjectResult<dtTbs_ARApproveNoRunningNo> GetTbs_ARApproveNoRunningNo(string pYear, string pPrefix)
        {
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbs_ARApproveNoRunningNo>("GetTbs_ARApproveNoRunningNo", pYearParameter, pPrefixParameter);
        }
    
        public virtual ObjectResult<tbs_ARApproveNoRunningNo> UpdateTbs_ARApproveNoRunningNo(string pYear, string pPrefix, Nullable<int> pRunningNo, string pUpdateBy)
        {
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUpdateByParameter = pUpdateBy != null ?
                new ObjectParameter("pUpdateBy", pUpdateBy) :
                new ObjectParameter("pUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARApproveNoRunningNo>("UpdateTbs_ARApproveNoRunningNo", pYearParameter, pPrefixParameter, pRunningNoParameter, pUpdateByParameter);
        }
    
        public virtual ObjectResult<tbs_ARApproveNoRunningNo> UpdateTbs_ARApproveNoRunningNo(string pYear, string pPrefix, Nullable<int> pRunningNo, string pUpdateBy, MergeOption mergeOption)
        {
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUpdateByParameter = pUpdateBy != null ?
                new ObjectParameter("pUpdateBy", pUpdateBy) :
                new ObjectParameter("pUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARApproveNoRunningNo>("UpdateTbs_ARApproveNoRunningNo", mergeOption, pYearParameter, pPrefixParameter, pRunningNoParameter, pUpdateByParameter);
        }
    
        public virtual ObjectResult<tbs_ARApproveNoRunningNo> InsertTbs_ARApproveNoRunningNo(string pYear, string pPrefix, Nullable<int> pRunningNo, string pUser)
        {
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARApproveNoRunningNo>("InsertTbs_ARApproveNoRunningNo", pYearParameter, pPrefixParameter, pRunningNoParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbs_ARApproveNoRunningNo> InsertTbs_ARApproveNoRunningNo(string pYear, string pPrefix, Nullable<int> pRunningNo, string pUser, MergeOption mergeOption)
        {
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARApproveNoRunningNo>("InsertTbs_ARApproveNoRunningNo", mergeOption, pYearParameter, pPrefixParameter, pRunningNoParameter, pUserParameter);
        }
    
        public virtual ObjectResult<dtGroupList> GetGroupListForSearchCustGrp(string pchvGroupCode, string pchrnGroupName, string pchvOfficeCode, string pchvEmpNo, Nullable<int> pintNumOfCustFrom, Nullable<int> pintNumOfCustTo, Nullable<int> pintNumOfSiteFrom, Nullable<int> pintNumOfSiteTo, string c_CONTRACT_STATUS_BEF_START, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_AFTER_START, Nullable<bool> c_FLAG_ON)
        {
            var pchvGroupCodeParameter = pchvGroupCode != null ?
                new ObjectParameter("pchvGroupCode", pchvGroupCode) :
                new ObjectParameter("pchvGroupCode", typeof(string));
    
            var pchrnGroupNameParameter = pchrnGroupName != null ?
                new ObjectParameter("pchrnGroupName", pchrnGroupName) :
                new ObjectParameter("pchrnGroupName", typeof(string));
    
            var pchvOfficeCodeParameter = pchvOfficeCode != null ?
                new ObjectParameter("pchvOfficeCode", pchvOfficeCode) :
                new ObjectParameter("pchvOfficeCode", typeof(string));
    
            var pchvEmpNoParameter = pchvEmpNo != null ?
                new ObjectParameter("pchvEmpNo", pchvEmpNo) :
                new ObjectParameter("pchvEmpNo", typeof(string));
    
            var pintNumOfCustFromParameter = pintNumOfCustFrom.HasValue ?
                new ObjectParameter("pintNumOfCustFrom", pintNumOfCustFrom) :
                new ObjectParameter("pintNumOfCustFrom", typeof(int));
    
            var pintNumOfCustToParameter = pintNumOfCustTo.HasValue ?
                new ObjectParameter("pintNumOfCustTo", pintNumOfCustTo) :
                new ObjectParameter("pintNumOfCustTo", typeof(int));
    
            var pintNumOfSiteFromParameter = pintNumOfSiteFrom.HasValue ?
                new ObjectParameter("pintNumOfSiteFrom", pintNumOfSiteFrom) :
                new ObjectParameter("pintNumOfSiteFrom", typeof(int));
    
            var pintNumOfSiteToParameter = pintNumOfSiteTo.HasValue ?
                new ObjectParameter("pintNumOfSiteTo", pintNumOfSiteTo) :
                new ObjectParameter("pintNumOfSiteTo", typeof(int));
    
            var c_CONTRACT_STATUS_BEF_STARTParameter = c_CONTRACT_STATUS_BEF_START != null ?
                new ObjectParameter("C_CONTRACT_STATUS_BEF_START", c_CONTRACT_STATUS_BEF_START) :
                new ObjectParameter("C_CONTRACT_STATUS_BEF_START", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_AFTER_STARTParameter = c_CONTRACT_STATUS_AFTER_START != null ?
                new ObjectParameter("C_CONTRACT_STATUS_AFTER_START", c_CONTRACT_STATUS_AFTER_START) :
                new ObjectParameter("C_CONTRACT_STATUS_AFTER_START", typeof(string));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtGroupList>("GetGroupListForSearchCustGrp", pchvGroupCodeParameter, pchrnGroupNameParameter, pchvOfficeCodeParameter, pchvEmpNoParameter, pintNumOfCustFromParameter, pintNumOfCustToParameter, pintNumOfSiteFromParameter, pintNumOfSiteToParameter, c_CONTRACT_STATUS_BEF_STARTParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_AFTER_STARTParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> GetTbt_SaleBasic(string pchvContractCode, string pchrOCC, Nullable<bool> pbLastOCCFlag)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            var pbLastOCCFlagParameter = pbLastOCCFlag.HasValue ?
                new ObjectParameter("pbLastOCCFlag", pbLastOCCFlag) :
                new ObjectParameter("pbLastOCCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("GetTbt_SaleBasic", pchvContractCodeParameter, pchrOCCParameter, pbLastOCCFlagParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> GetTbt_SaleBasic(string pchvContractCode, string pchrOCC, Nullable<bool> pbLastOCCFlag, MergeOption mergeOption)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            var pbLastOCCFlagParameter = pbLastOCCFlag.HasValue ?
                new ObjectParameter("pbLastOCCFlag", pbLastOCCFlag) :
                new ObjectParameter("pbLastOCCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("GetTbt_SaleBasic", mergeOption, pchvContractCodeParameter, pchrOCCParameter, pbLastOCCFlagParameter);
        }
    
        public virtual ObjectResult<dtTbs_ARRunningNo> GetTbs_ARRunningNo(string pOffice, string pYear, string pPrefix)
        {
            var pOfficeParameter = pOffice != null ?
                new ObjectParameter("pOffice", pOffice) :
                new ObjectParameter("pOffice", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbs_ARRunningNo>("GetTbs_ARRunningNo", pOfficeParameter, pYearParameter, pPrefixParameter);
        }
    
        public virtual ObjectResult<tbs_ARRunningNo> UpdateTbs_ARRunningNo(string pOfficeNo, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUpdateBy)
        {
            var pOfficeNoParameter = pOfficeNo != null ?
                new ObjectParameter("pOfficeNo", pOfficeNo) :
                new ObjectParameter("pOfficeNo", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUpdateByParameter = pUpdateBy != null ?
                new ObjectParameter("pUpdateBy", pUpdateBy) :
                new ObjectParameter("pUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARRunningNo>("UpdateTbs_ARRunningNo", pOfficeNoParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUpdateByParameter);
        }
    
        public virtual ObjectResult<tbs_ARRunningNo> UpdateTbs_ARRunningNo(string pOfficeNo, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUpdateBy, MergeOption mergeOption)
        {
            var pOfficeNoParameter = pOfficeNo != null ?
                new ObjectParameter("pOfficeNo", pOfficeNo) :
                new ObjectParameter("pOfficeNo", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUpdateByParameter = pUpdateBy != null ?
                new ObjectParameter("pUpdateBy", pUpdateBy) :
                new ObjectParameter("pUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARRunningNo>("UpdateTbs_ARRunningNo", mergeOption, pOfficeNoParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUpdateByParameter);
        }
    
        public virtual ObjectResult<tbs_ARRunningNo> InsertTbs_ARRunningNo(string pOffice, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUser)
        {
            var pOfficeParameter = pOffice != null ?
                new ObjectParameter("pOffice", pOffice) :
                new ObjectParameter("pOffice", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARRunningNo>("InsertTbs_ARRunningNo", pOfficeParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbs_ARRunningNo> InsertTbs_ARRunningNo(string pOffice, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUser, MergeOption mergeOption)
        {
            var pOfficeParameter = pOffice != null ?
                new ObjectParameter("pOffice", pOffice) :
                new ObjectParameter("pOffice", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARRunningNo>("InsertTbs_ARRunningNo", mergeOption, pOfficeParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUserParameter);
        }
    
        public virtual ObjectResult<dtTbs_IncidentRunningNo> GetTbs_IncidentRunningNo(string pOffice, string pYear, string pPrefix)
        {
            var pOfficeParameter = pOffice != null ?
                new ObjectParameter("pOffice", pOffice) :
                new ObjectParameter("pOffice", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbs_IncidentRunningNo>("GetTbs_IncidentRunningNo", pOfficeParameter, pYearParameter, pPrefixParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentRunningNo> InsertTbs_IncidentRunningNo(string pOffice, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUser)
        {
            var pOfficeParameter = pOffice != null ?
                new ObjectParameter("pOffice", pOffice) :
                new ObjectParameter("pOffice", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentRunningNo>("InsertTbs_IncidentRunningNo", pOfficeParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentRunningNo> InsertTbs_IncidentRunningNo(string pOffice, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUser, MergeOption mergeOption)
        {
            var pOfficeParameter = pOffice != null ?
                new ObjectParameter("pOffice", pOffice) :
                new ObjectParameter("pOffice", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentRunningNo>("InsertTbs_IncidentRunningNo", mergeOption, pOfficeParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentRunningNo> UpdateTbs_IncidentRunningNo(string pOfficeNo, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUpdateBy)
        {
            var pOfficeNoParameter = pOfficeNo != null ?
                new ObjectParameter("pOfficeNo", pOfficeNo) :
                new ObjectParameter("pOfficeNo", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUpdateByParameter = pUpdateBy != null ?
                new ObjectParameter("pUpdateBy", pUpdateBy) :
                new ObjectParameter("pUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentRunningNo>("UpdateTbs_IncidentRunningNo", pOfficeNoParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUpdateByParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentRunningNo> UpdateTbs_IncidentRunningNo(string pOfficeNo, string pYear, string pPrefix, Nullable<int> pRunningNo, string pUpdateBy, MergeOption mergeOption)
        {
            var pOfficeNoParameter = pOfficeNo != null ?
                new ObjectParameter("pOfficeNo", pOfficeNo) :
                new ObjectParameter("pOfficeNo", typeof(string));
    
            var pYearParameter = pYear != null ?
                new ObjectParameter("pYear", pYear) :
                new ObjectParameter("pYear", typeof(string));
    
            var pPrefixParameter = pPrefix != null ?
                new ObjectParameter("pPrefix", pPrefix) :
                new ObjectParameter("pPrefix", typeof(string));
    
            var pRunningNoParameter = pRunningNo.HasValue ?
                new ObjectParameter("pRunningNo", pRunningNo) :
                new ObjectParameter("pRunningNo", typeof(int));
    
            var pUpdateByParameter = pUpdateBy != null ?
                new ObjectParameter("pUpdateBy", pUpdateBy) :
                new ObjectParameter("pUpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentRunningNo>("UpdateTbs_IncidentRunningNo", mergeOption, pOfficeNoParameter, pYearParameter, pPrefixParameter, pRunningNoParameter, pUpdateByParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> GetTbt_RentalSecurityBasic(string pchvContractCode, string pchrOCC)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("GetTbt_RentalSecurityBasic", pchvContractCodeParameter, pchrOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> GetTbt_RentalSecurityBasic(string pchvContractCode, string pchrOCC, MergeOption mergeOption)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("GetTbt_RentalSecurityBasic", mergeOption, pchvContractCodeParameter, pchrOCCParameter);
        }
    
        public virtual ObjectResult<dtChangedCustHistDetail> GetChangedCustHistDetail(string pchvContractCode, Nullable<int> pintSequenceNo, string pchvC_CONTRACT_SIGNER_TYPE, string pchvC_CUST_STATUS, string pchvC_CUST_TYPE, string pchvC_FINANCIAL_MARKET_TYPE, string pchvC_CHANGE_NAME_REASON_TYPE)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pintSequenceNoParameter = pintSequenceNo.HasValue ?
                new ObjectParameter("pintSequenceNo", pintSequenceNo) :
                new ObjectParameter("pintSequenceNo", typeof(int));
    
            var pchvC_CONTRACT_SIGNER_TYPEParameter = pchvC_CONTRACT_SIGNER_TYPE != null ?
                new ObjectParameter("pchvC_CONTRACT_SIGNER_TYPE", pchvC_CONTRACT_SIGNER_TYPE) :
                new ObjectParameter("pchvC_CONTRACT_SIGNER_TYPE", typeof(string));
    
            var pchvC_CUST_STATUSParameter = pchvC_CUST_STATUS != null ?
                new ObjectParameter("pchvC_CUST_STATUS", pchvC_CUST_STATUS) :
                new ObjectParameter("pchvC_CUST_STATUS", typeof(string));
    
            var pchvC_CUST_TYPEParameter = pchvC_CUST_TYPE != null ?
                new ObjectParameter("pchvC_CUST_TYPE", pchvC_CUST_TYPE) :
                new ObjectParameter("pchvC_CUST_TYPE", typeof(string));
    
            var pchvC_FINANCIAL_MARKET_TYPEParameter = pchvC_FINANCIAL_MARKET_TYPE != null ?
                new ObjectParameter("pchvC_FINANCIAL_MARKET_TYPE", pchvC_FINANCIAL_MARKET_TYPE) :
                new ObjectParameter("pchvC_FINANCIAL_MARKET_TYPE", typeof(string));
    
            var pchvC_CHANGE_NAME_REASON_TYPEParameter = pchvC_CHANGE_NAME_REASON_TYPE != null ?
                new ObjectParameter("pchvC_CHANGE_NAME_REASON_TYPE", pchvC_CHANGE_NAME_REASON_TYPE) :
                new ObjectParameter("pchvC_CHANGE_NAME_REASON_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtChangedCustHistDetail>("GetChangedCustHistDetail", pchvContractCodeParameter, pintSequenceNoParameter, pchvC_CONTRACT_SIGNER_TYPEParameter, pchvC_CUST_STATUSParameter, pchvC_CUST_TYPEParameter, pchvC_FINANCIAL_MARKET_TYPEParameter, pchvC_CHANGE_NAME_REASON_TYPEParameter);
        }
    
        public virtual ObjectResult<dtChangedCustHistList2> GetChangedCustHistList2(string pContractCode, string pOCC, string pCSCustCode, string pRCCustCode, string pSiteCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pCSCustCodeParameter = pCSCustCode != null ?
                new ObjectParameter("pCSCustCode", pCSCustCode) :
                new ObjectParameter("pCSCustCode", typeof(string));
    
            var pRCCustCodeParameter = pRCCustCode != null ?
                new ObjectParameter("pRCCustCode", pRCCustCode) :
                new ObjectParameter("pRCCustCode", typeof(string));
    
            var pSiteCodeParameter = pSiteCode != null ?
                new ObjectParameter("pSiteCode", pSiteCode) :
                new ObjectParameter("pSiteCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtChangedCustHistList2>("GetChangedCustHistList2", pContractCodeParameter, pOCCParameter, pCSCustCodeParameter, pRCCustCodeParameter, pSiteCodeParameter);
        }
    
        public virtual ObjectResult<dtMaintCheckUpResultList> GetMaintCheckUpResultList(string pContractCode, string pMATargetContractCode, string pProductCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMATargetContractCodeParameter = pMATargetContractCode != null ?
                new ObjectParameter("pMATargetContractCode", pMATargetContractCode) :
                new ObjectParameter("pMATargetContractCode", typeof(string));
    
            var pProductCodeParameter = pProductCode != null ?
                new ObjectParameter("pProductCode", pProductCode) :
                new ObjectParameter("pProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtMaintCheckUpResultList>("GetMaintCheckUpResultList", pContractCodeParameter, pMATargetContractCodeParameter, pProductCodeParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstrumentDetails> GetTbt_RentalInstrumentDetails(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstrumentDetails>("GetTbt_RentalInstrumentDetails", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstrumentDetails> GetTbt_RentalInstrumentDetails(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstrumentDetails>("GetTbt_RentalInstrumentDetails", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstSubcontractor> GetTbt_RentalInstSubContractor(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstSubcontractor>("GetTbt_RentalInstSubContractor", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstSubcontractor> GetTbt_RentalInstSubContractor(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstSubcontractor>("GetTbt_RentalInstSubContractor", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalMaintenanceDetails> GetTbt_RentalMaintenanceDetails(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalMaintenanceDetails>("GetTbt_RentalMaintenanceDetails", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalMaintenanceDetails> GetTbt_RentalMaintenanceDetails(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalMaintenanceDetails>("GetTbt_RentalMaintenanceDetails", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalOperationType> GetTbt_RentalOperationType(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalOperationType>("GetTbt_RentalOperationType", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalOperationType> GetTbt_RentalOperationType(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalOperationType>("GetTbt_RentalOperationType", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> GetTbt_RentalSentryGuard(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("GetTbt_RentalSentryGuard", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> GetTbt_RentalSentryGuard(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("GetTbt_RentalSentryGuard", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuardDetails> GetTbt_RentalSentryGuardDetails(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuardDetails>("GetTbt_RentalSentryGuardDetails", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuardDetails> GetTbt_RentalSentryGuardDetails(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuardDetails>("GetTbt_RentalSentryGuardDetails", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> GetTbt_CancelContractMemo(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("GetTbt_CancelContractMemo", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> GetTbt_CancelContractMemo(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("GetTbt_CancelContractMemo", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> GetTbt_CancelContractMemoDetail(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("GetTbt_CancelContractMemoDetail", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> GetTbt_CancelContractMemoDetail(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("GetTbt_CancelContractMemoDetail", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalBEDetails> GetTbt_RentalBEDetails(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalBEDetails>("GetTbt_RentalBEDetails", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalBEDetails> GetTbt_RentalBEDetails(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalBEDetails>("GetTbt_RentalBEDetails", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dsSaleInstrumentDetails> GetSaleInstrumentDetails(string pchrContractCode, string pchrOCC, string c_INST_TYPE_GENERAL, string c_SALE_CHANGE_TYPE_CANCEL)
        {
            var pchrContractCodeParameter = pchrContractCode != null ?
                new ObjectParameter("pchrContractCode", pchrContractCode) :
                new ObjectParameter("pchrContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            var c_INST_TYPE_GENERALParameter = c_INST_TYPE_GENERAL != null ?
                new ObjectParameter("C_INST_TYPE_GENERAL", c_INST_TYPE_GENERAL) :
                new ObjectParameter("C_INST_TYPE_GENERAL", typeof(string));
    
            var c_SALE_CHANGE_TYPE_CANCELParameter = c_SALE_CHANGE_TYPE_CANCEL != null ?
                new ObjectParameter("C_SALE_CHANGE_TYPE_CANCEL", c_SALE_CHANGE_TYPE_CANCEL) :
                new ObjectParameter("C_SALE_CHANGE_TYPE_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dsSaleInstrumentDetails>("GetSaleInstrumentDetails", pchrContractCodeParameter, pchrOCCParameter, c_INST_TYPE_GENERALParameter, c_SALE_CHANGE_TYPE_CANCELParameter);
        }
    
        public virtual ObjectResult<dsGetSiteContractList> GetSiteContractList(string pContractCode, Nullable<bool> pLastestOCCFlag)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pLastestOCCFlagParameter = pLastestOCCFlag.HasValue ?
                new ObjectParameter("pLastestOCCFlag", pLastestOCCFlag) :
                new ObjectParameter("pLastestOCCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dsGetSiteContractList>("GetSiteContractList", pContractCodeParameter, pLastestOCCFlagParameter);
        }
    
        public virtual ObjectResult<dtGetMaintenanceTargetContract> GetMaintenanceTargetContract(string pContractCode, Nullable<bool> pLastestOCCFlag)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pLastestOCCFlagParameter = pLastestOCCFlag.HasValue ?
                new ObjectParameter("pLastestOCCFlag", pLastestOCCFlag) :
                new ObjectParameter("pLastestOCCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtGetMaintenanceTargetContract>("GetMaintenanceTargetContract", pContractCodeParameter, pLastestOCCFlagParameter);
        }
    
        public virtual ObjectResult<dtProjectData> GetProjectDataForSearch(string pchrProjectCode, string pchvContractCode, string pchnvProductCode, string pchnvProjectName, string pchnvProjectAddress, string pchnvPJPurchaseName, string pchnvOwner1Name, string pchnvCompanyName, string pchnvOtherProjectRelatedPersonName, string pchnvHeadSalesmanEmpName, string pchnvProjectManagerEmpName)
        {
            var pchrProjectCodeParameter = pchrProjectCode != null ?
                new ObjectParameter("pchrProjectCode", pchrProjectCode) :
                new ObjectParameter("pchrProjectCode", typeof(string));
    
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchnvProductCodeParameter = pchnvProductCode != null ?
                new ObjectParameter("pchnvProductCode", pchnvProductCode) :
                new ObjectParameter("pchnvProductCode", typeof(string));
    
            var pchnvProjectNameParameter = pchnvProjectName != null ?
                new ObjectParameter("pchnvProjectName", pchnvProjectName) :
                new ObjectParameter("pchnvProjectName", typeof(string));
    
            var pchnvProjectAddressParameter = pchnvProjectAddress != null ?
                new ObjectParameter("pchnvProjectAddress", pchnvProjectAddress) :
                new ObjectParameter("pchnvProjectAddress", typeof(string));
    
            var pchnvPJPurchaseNameParameter = pchnvPJPurchaseName != null ?
                new ObjectParameter("pchnvPJPurchaseName", pchnvPJPurchaseName) :
                new ObjectParameter("pchnvPJPurchaseName", typeof(string));
    
            var pchnvOwner1NameParameter = pchnvOwner1Name != null ?
                new ObjectParameter("pchnvOwner1Name", pchnvOwner1Name) :
                new ObjectParameter("pchnvOwner1Name", typeof(string));
    
            var pchnvCompanyNameParameter = pchnvCompanyName != null ?
                new ObjectParameter("pchnvCompanyName", pchnvCompanyName) :
                new ObjectParameter("pchnvCompanyName", typeof(string));
    
            var pchnvOtherProjectRelatedPersonNameParameter = pchnvOtherProjectRelatedPersonName != null ?
                new ObjectParameter("pchnvOtherProjectRelatedPersonName", pchnvOtherProjectRelatedPersonName) :
                new ObjectParameter("pchnvOtherProjectRelatedPersonName", typeof(string));
    
            var pchnvHeadSalesmanEmpNameParameter = pchnvHeadSalesmanEmpName != null ?
                new ObjectParameter("pchnvHeadSalesmanEmpName", pchnvHeadSalesmanEmpName) :
                new ObjectParameter("pchnvHeadSalesmanEmpName", typeof(string));
    
            var pchnvProjectManagerEmpNameParameter = pchnvProjectManagerEmpName != null ?
                new ObjectParameter("pchnvProjectManagerEmpName", pchnvProjectManagerEmpName) :
                new ObjectParameter("pchnvProjectManagerEmpName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtProjectData>("GetProjectDataForSearch", pchrProjectCodeParameter, pchvContractCodeParameter, pchnvProductCodeParameter, pchnvProjectNameParameter, pchnvProjectAddressParameter, pchnvPJPurchaseNameParameter, pchnvOwner1NameParameter, pchnvCompanyNameParameter, pchnvOtherProjectRelatedPersonNameParameter, pchnvHeadSalesmanEmpNameParameter, pchnvProjectManagerEmpNameParameter);
        }
    
        public virtual ObjectResult<dtCustomerList> GetCustomerListForSearchInfo(string pchrCustomerCode, string pchrRoleTypeContractTarget, string pchrRoleTypePurchaser, string pchrRoleTypeRealCustomer, string pchrGroupCode, string pchrnCustomerName, string pchrnGroupName, string pchrCustomerStatus, string pchrCustomerTypeCode, string pchrCompanyTypeCode, string pchrnIDNo, string pchrRegionCode, string pchrBusinessTypeCode, string pchrnCust_Address, string pchrnCust_Alley, string pchrnCust_Road, string pchrnCust_SubDistrict, string pchrCust_ProvinceCode, string pchrCust_DistrictCode, string pchrCust_ZipCode, string pchrnCust_PhoneNo, string pchrnCust_FaxNo, string pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET, string pchrC_CUST_ROLE_TYPE_REAL_CUST, string pchrC_CUST_ROLE_TYPE_PURCHASER, Nullable<bool> pbitC_FLAG_ON, string pchrC_SERVICE_TYPE_RENTAL, string pchrC_SERVICE_TYPE_SALE, string pchrC_CONTRACT_STATUS_BEF_START, string c_CUST_TYPE_JURISTIC)
        {
            var pchrCustomerCodeParameter = pchrCustomerCode != null ?
                new ObjectParameter("pchrCustomerCode", pchrCustomerCode) :
                new ObjectParameter("pchrCustomerCode", typeof(string));
    
            var pchrRoleTypeContractTargetParameter = pchrRoleTypeContractTarget != null ?
                new ObjectParameter("pchrRoleTypeContractTarget", pchrRoleTypeContractTarget) :
                new ObjectParameter("pchrRoleTypeContractTarget", typeof(string));
    
            var pchrRoleTypePurchaserParameter = pchrRoleTypePurchaser != null ?
                new ObjectParameter("pchrRoleTypePurchaser", pchrRoleTypePurchaser) :
                new ObjectParameter("pchrRoleTypePurchaser", typeof(string));
    
            var pchrRoleTypeRealCustomerParameter = pchrRoleTypeRealCustomer != null ?
                new ObjectParameter("pchrRoleTypeRealCustomer", pchrRoleTypeRealCustomer) :
                new ObjectParameter("pchrRoleTypeRealCustomer", typeof(string));
    
            var pchrGroupCodeParameter = pchrGroupCode != null ?
                new ObjectParameter("pchrGroupCode", pchrGroupCode) :
                new ObjectParameter("pchrGroupCode", typeof(string));
    
            var pchrnCustomerNameParameter = pchrnCustomerName != null ?
                new ObjectParameter("pchrnCustomerName", pchrnCustomerName) :
                new ObjectParameter("pchrnCustomerName", typeof(string));
    
            var pchrnGroupNameParameter = pchrnGroupName != null ?
                new ObjectParameter("pchrnGroupName", pchrnGroupName) :
                new ObjectParameter("pchrnGroupName", typeof(string));
    
            var pchrCustomerStatusParameter = pchrCustomerStatus != null ?
                new ObjectParameter("pchrCustomerStatus", pchrCustomerStatus) :
                new ObjectParameter("pchrCustomerStatus", typeof(string));
    
            var pchrCustomerTypeCodeParameter = pchrCustomerTypeCode != null ?
                new ObjectParameter("pchrCustomerTypeCode", pchrCustomerTypeCode) :
                new ObjectParameter("pchrCustomerTypeCode", typeof(string));
    
            var pchrCompanyTypeCodeParameter = pchrCompanyTypeCode != null ?
                new ObjectParameter("pchrCompanyTypeCode", pchrCompanyTypeCode) :
                new ObjectParameter("pchrCompanyTypeCode", typeof(string));
    
            var pchrnIDNoParameter = pchrnIDNo != null ?
                new ObjectParameter("pchrnIDNo", pchrnIDNo) :
                new ObjectParameter("pchrnIDNo", typeof(string));
    
            var pchrRegionCodeParameter = pchrRegionCode != null ?
                new ObjectParameter("pchrRegionCode", pchrRegionCode) :
                new ObjectParameter("pchrRegionCode", typeof(string));
    
            var pchrBusinessTypeCodeParameter = pchrBusinessTypeCode != null ?
                new ObjectParameter("pchrBusinessTypeCode", pchrBusinessTypeCode) :
                new ObjectParameter("pchrBusinessTypeCode", typeof(string));
    
            var pchrnCust_AddressParameter = pchrnCust_Address != null ?
                new ObjectParameter("pchrnCust_Address", pchrnCust_Address) :
                new ObjectParameter("pchrnCust_Address", typeof(string));
    
            var pchrnCust_AlleyParameter = pchrnCust_Alley != null ?
                new ObjectParameter("pchrnCust_Alley", pchrnCust_Alley) :
                new ObjectParameter("pchrnCust_Alley", typeof(string));
    
            var pchrnCust_RoadParameter = pchrnCust_Road != null ?
                new ObjectParameter("pchrnCust_Road", pchrnCust_Road) :
                new ObjectParameter("pchrnCust_Road", typeof(string));
    
            var pchrnCust_SubDistrictParameter = pchrnCust_SubDistrict != null ?
                new ObjectParameter("pchrnCust_SubDistrict", pchrnCust_SubDistrict) :
                new ObjectParameter("pchrnCust_SubDistrict", typeof(string));
    
            var pchrCust_ProvinceCodeParameter = pchrCust_ProvinceCode != null ?
                new ObjectParameter("pchrCust_ProvinceCode", pchrCust_ProvinceCode) :
                new ObjectParameter("pchrCust_ProvinceCode", typeof(string));
    
            var pchrCust_DistrictCodeParameter = pchrCust_DistrictCode != null ?
                new ObjectParameter("pchrCust_DistrictCode", pchrCust_DistrictCode) :
                new ObjectParameter("pchrCust_DistrictCode", typeof(string));
    
            var pchrCust_ZipCodeParameter = pchrCust_ZipCode != null ?
                new ObjectParameter("pchrCust_ZipCode", pchrCust_ZipCode) :
                new ObjectParameter("pchrCust_ZipCode", typeof(string));
    
            var pchrnCust_PhoneNoParameter = pchrnCust_PhoneNo != null ?
                new ObjectParameter("pchrnCust_PhoneNo", pchrnCust_PhoneNo) :
                new ObjectParameter("pchrnCust_PhoneNo", typeof(string));
    
            var pchrnCust_FaxNoParameter = pchrnCust_FaxNo != null ?
                new ObjectParameter("pchrnCust_FaxNo", pchrnCust_FaxNo) :
                new ObjectParameter("pchrnCust_FaxNo", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_CONTRACT_TARGETParameter = pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET", pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_REAL_CUSTParameter = pchrC_CUST_ROLE_TYPE_REAL_CUST != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_REAL_CUST", pchrC_CUST_ROLE_TYPE_REAL_CUST) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_REAL_CUST", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_PURCHASERParameter = pchrC_CUST_ROLE_TYPE_PURCHASER != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_PURCHASER", pchrC_CUST_ROLE_TYPE_PURCHASER) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_PURCHASER", typeof(string));
    
            var pbitC_FLAG_ONParameter = pbitC_FLAG_ON.HasValue ?
                new ObjectParameter("pbitC_FLAG_ON", pbitC_FLAG_ON) :
                new ObjectParameter("pbitC_FLAG_ON", typeof(bool));
    
            var pchrC_SERVICE_TYPE_RENTALParameter = pchrC_SERVICE_TYPE_RENTAL != null ?
                new ObjectParameter("pchrC_SERVICE_TYPE_RENTAL", pchrC_SERVICE_TYPE_RENTAL) :
                new ObjectParameter("pchrC_SERVICE_TYPE_RENTAL", typeof(string));
    
            var pchrC_SERVICE_TYPE_SALEParameter = pchrC_SERVICE_TYPE_SALE != null ?
                new ObjectParameter("pchrC_SERVICE_TYPE_SALE", pchrC_SERVICE_TYPE_SALE) :
                new ObjectParameter("pchrC_SERVICE_TYPE_SALE", typeof(string));
    
            var pchrC_CONTRACT_STATUS_BEF_STARTParameter = pchrC_CONTRACT_STATUS_BEF_START != null ?
                new ObjectParameter("pchrC_CONTRACT_STATUS_BEF_START", pchrC_CONTRACT_STATUS_BEF_START) :
                new ObjectParameter("pchrC_CONTRACT_STATUS_BEF_START", typeof(string));
    
            var c_CUST_TYPE_JURISTICParameter = c_CUST_TYPE_JURISTIC != null ?
                new ObjectParameter("C_CUST_TYPE_JURISTIC", c_CUST_TYPE_JURISTIC) :
                new ObjectParameter("C_CUST_TYPE_JURISTIC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtCustomerList>("GetCustomerListForSearchInfo", pchrCustomerCodeParameter, pchrRoleTypeContractTargetParameter, pchrRoleTypePurchaserParameter, pchrRoleTypeRealCustomerParameter, pchrGroupCodeParameter, pchrnCustomerNameParameter, pchrnGroupNameParameter, pchrCustomerStatusParameter, pchrCustomerTypeCodeParameter, pchrCompanyTypeCodeParameter, pchrnIDNoParameter, pchrRegionCodeParameter, pchrBusinessTypeCodeParameter, pchrnCust_AddressParameter, pchrnCust_AlleyParameter, pchrnCust_RoadParameter, pchrnCust_SubDistrictParameter, pchrCust_ProvinceCodeParameter, pchrCust_DistrictCodeParameter, pchrCust_ZipCodeParameter, pchrnCust_PhoneNoParameter, pchrnCust_FaxNoParameter, pchrC_CUST_ROLE_TYPE_CONTRACT_TARGETParameter, pchrC_CUST_ROLE_TYPE_REAL_CUSTParameter, pchrC_CUST_ROLE_TYPE_PURCHASERParameter, pbitC_FLAG_ONParameter, pchrC_SERVICE_TYPE_RENTALParameter, pchrC_SERVICE_TYPE_SALEParameter, pchrC_CONTRACT_STATUS_BEF_STARTParameter, c_CUST_TYPE_JURISTICParameter);
        }
    
        public virtual ObjectResult<dtContractsSameSite> GetContractsListForViewSite(string pSiteCode, string pC_RENTAL_CHANGE_TYPE, string pC_SALE_CHANGE_TYPE, string pC_SERVICE_TYPE_RENTAL, string pC_SALE_CHANGE_TYPE_NEW_SALE, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var pSiteCodeParameter = pSiteCode != null ?
                new ObjectParameter("pSiteCode", pSiteCode) :
                new ObjectParameter("pSiteCode", typeof(string));
    
            var pC_RENTAL_CHANGE_TYPEParameter = pC_RENTAL_CHANGE_TYPE != null ?
                new ObjectParameter("pC_RENTAL_CHANGE_TYPE", pC_RENTAL_CHANGE_TYPE) :
                new ObjectParameter("pC_RENTAL_CHANGE_TYPE", typeof(string));
    
            var pC_SALE_CHANGE_TYPEParameter = pC_SALE_CHANGE_TYPE != null ?
                new ObjectParameter("pC_SALE_CHANGE_TYPE", pC_SALE_CHANGE_TYPE) :
                new ObjectParameter("pC_SALE_CHANGE_TYPE", typeof(string));
    
            var pC_SERVICE_TYPE_RENTALParameter = pC_SERVICE_TYPE_RENTAL != null ?
                new ObjectParameter("pC_SERVICE_TYPE_RENTAL", pC_SERVICE_TYPE_RENTAL) :
                new ObjectParameter("pC_SERVICE_TYPE_RENTAL", typeof(string));
    
            var pC_SALE_CHANGE_TYPE_NEW_SALEParameter = pC_SALE_CHANGE_TYPE_NEW_SALE != null ?
                new ObjectParameter("pC_SALE_CHANGE_TYPE_NEW_SALE", pC_SALE_CHANGE_TYPE_NEW_SALE) :
                new ObjectParameter("pC_SALE_CHANGE_TYPE_NEW_SALE", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractsSameSite>("GetContractsListForViewSite", pSiteCodeParameter, pC_RENTAL_CHANGE_TYPEParameter, pC_SALE_CHANGE_TYPEParameter, pC_SERVICE_TYPE_RENTALParameter, pC_SALE_CHANGE_TYPE_NEW_SALEParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtSiteList> GetSiteListForCustInfo(string pchvCustomerCode, string pchrCustomerRole, string pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET, string pchrC_CUST_ROLE_TYPE_REAL_CUST, string pchrC_CUST_ROLE_TYPE_PURCHASER, Nullable<bool> pbitC_FLAG_ON, string pchrC_SERVICE_TYPE_RENTAL, string pchrC_RENTAL_CHANGE_TYPE_END_CONTRACT, string pchrC_RENTAL_CHANGE_TYPE_CANCEL, string pchrC_SERVICE_TYPE_SALE, string pchrC_CONTRACT_STATUS_CANCEL, string pchrC_CONTRACT_STATUS_END, string pchrC_CONTRACT_STATUS_BEF_START, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var pchvCustomerCodeParameter = pchvCustomerCode != null ?
                new ObjectParameter("pchvCustomerCode", pchvCustomerCode) :
                new ObjectParameter("pchvCustomerCode", typeof(string));
    
            var pchrCustomerRoleParameter = pchrCustomerRole != null ?
                new ObjectParameter("pchrCustomerRole", pchrCustomerRole) :
                new ObjectParameter("pchrCustomerRole", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_CONTRACT_TARGETParameter = pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET", pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_REAL_CUSTParameter = pchrC_CUST_ROLE_TYPE_REAL_CUST != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_REAL_CUST", pchrC_CUST_ROLE_TYPE_REAL_CUST) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_REAL_CUST", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_PURCHASERParameter = pchrC_CUST_ROLE_TYPE_PURCHASER != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_PURCHASER", pchrC_CUST_ROLE_TYPE_PURCHASER) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_PURCHASER", typeof(string));
    
            var pbitC_FLAG_ONParameter = pbitC_FLAG_ON.HasValue ?
                new ObjectParameter("pbitC_FLAG_ON", pbitC_FLAG_ON) :
                new ObjectParameter("pbitC_FLAG_ON", typeof(bool));
    
            var pchrC_SERVICE_TYPE_RENTALParameter = pchrC_SERVICE_TYPE_RENTAL != null ?
                new ObjectParameter("pchrC_SERVICE_TYPE_RENTAL", pchrC_SERVICE_TYPE_RENTAL) :
                new ObjectParameter("pchrC_SERVICE_TYPE_RENTAL", typeof(string));
    
            var pchrC_RENTAL_CHANGE_TYPE_END_CONTRACTParameter = pchrC_RENTAL_CHANGE_TYPE_END_CONTRACT != null ?
                new ObjectParameter("pchrC_RENTAL_CHANGE_TYPE_END_CONTRACT", pchrC_RENTAL_CHANGE_TYPE_END_CONTRACT) :
                new ObjectParameter("pchrC_RENTAL_CHANGE_TYPE_END_CONTRACT", typeof(string));
    
            var pchrC_RENTAL_CHANGE_TYPE_CANCELParameter = pchrC_RENTAL_CHANGE_TYPE_CANCEL != null ?
                new ObjectParameter("pchrC_RENTAL_CHANGE_TYPE_CANCEL", pchrC_RENTAL_CHANGE_TYPE_CANCEL) :
                new ObjectParameter("pchrC_RENTAL_CHANGE_TYPE_CANCEL", typeof(string));
    
            var pchrC_SERVICE_TYPE_SALEParameter = pchrC_SERVICE_TYPE_SALE != null ?
                new ObjectParameter("pchrC_SERVICE_TYPE_SALE", pchrC_SERVICE_TYPE_SALE) :
                new ObjectParameter("pchrC_SERVICE_TYPE_SALE", typeof(string));
    
            var pchrC_CONTRACT_STATUS_CANCELParameter = pchrC_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("pchrC_CONTRACT_STATUS_CANCEL", pchrC_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("pchrC_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var pchrC_CONTRACT_STATUS_ENDParameter = pchrC_CONTRACT_STATUS_END != null ?
                new ObjectParameter("pchrC_CONTRACT_STATUS_END", pchrC_CONTRACT_STATUS_END) :
                new ObjectParameter("pchrC_CONTRACT_STATUS_END", typeof(string));
    
            var pchrC_CONTRACT_STATUS_BEF_STARTParameter = pchrC_CONTRACT_STATUS_BEF_START != null ?
                new ObjectParameter("pchrC_CONTRACT_STATUS_BEF_START", pchrC_CONTRACT_STATUS_BEF_START) :
                new ObjectParameter("pchrC_CONTRACT_STATUS_BEF_START", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSiteList>("GetSiteListForCustInfo", pchvCustomerCodeParameter, pchrCustomerRoleParameter, pchrC_CUST_ROLE_TYPE_CONTRACT_TARGETParameter, pchrC_CUST_ROLE_TYPE_REAL_CUSTParameter, pchrC_CUST_ROLE_TYPE_PURCHASERParameter, pbitC_FLAG_ONParameter, pchrC_SERVICE_TYPE_RENTALParameter, pchrC_RENTAL_CHANGE_TYPE_END_CONTRACTParameter, pchrC_RENTAL_CHANGE_TYPE_CANCELParameter, pchrC_SERVICE_TYPE_SALEParameter, pchrC_CONTRACT_STATUS_CANCELParameter, pchrC_CONTRACT_STATUS_ENDParameter, pchrC_CONTRACT_STATUS_BEF_STARTParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<doBillingTempBasic> GetBillingBasicData(string pContractCode, string pOCC, string pBillingType, string pBillingTiming, string pC_BILLING_TYPE_SALE_PRICE, string pC_BILLINGTEMP_FLAG_KEEP, string pC_CURRENCY_LOCAL)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pC_BILLING_TYPE_SALE_PRICEParameter = pC_BILLING_TYPE_SALE_PRICE != null ?
                new ObjectParameter("pC_BILLING_TYPE_SALE_PRICE", pC_BILLING_TYPE_SALE_PRICE) :
                new ObjectParameter("pC_BILLING_TYPE_SALE_PRICE", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_KEEPParameter = pC_BILLINGTEMP_FLAG_KEEP != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", pC_BILLINGTEMP_FLAG_KEEP) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", typeof(string));
    
            var pC_CURRENCY_LOCALParameter = pC_CURRENCY_LOCAL != null ?
                new ObjectParameter("pC_CURRENCY_LOCAL", pC_CURRENCY_LOCAL) :
                new ObjectParameter("pC_CURRENCY_LOCAL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doBillingTempBasic>("GetBillingBasicData", pContractCodeParameter, pOCCParameter, pBillingTypeParameter, pBillingTimingParameter, pC_BILLING_TYPE_SALE_PRICEParameter, pC_BILLINGTEMP_FLAG_KEEPParameter, pC_CURRENCY_LOCALParameter);
        }
    
        public virtual ObjectResult<doBillingTempDetail> GetBillingDetailData(string pContractCode, string pOCC, string pBillingType, string pBillingTiming, string pC_BILLINGTEMP_FLAG_KEEP)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_KEEPParameter = pC_BILLINGTEMP_FLAG_KEEP != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", pC_BILLINGTEMP_FLAG_KEEP) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doBillingTempDetail>("GetBillingDetailData", pContractCodeParameter, pOCCParameter, pBillingTypeParameter, pBillingTimingParameter, pC_BILLINGTEMP_FLAG_KEEPParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> InsertTbt_BillingTemp(string pContractCode, string pOCC, string pBillingOCC, string pBillingTargetRunningNo, string pBillingClientCode, string pBillingTargetCode, string pBillingOfficeCode, string pBillingType, Nullable<int> pCreditTerm, string pBillingTiming, Nullable<decimal> pBillingAmt, string pPayMethod, Nullable<int> pBillingCycle, string pCalDailyFeeStatus, string pSendFlag, Nullable<System.DateTime> pProcessDateTime, string pEmpNo, string pDocLanguage, Nullable<decimal> pBillingAmtUsd, string pBillingAmtCurrencyType)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetRunningNoParameter = pBillingTargetRunningNo != null ?
                new ObjectParameter("pBillingTargetRunningNo", pBillingTargetRunningNo) :
                new ObjectParameter("pBillingTargetRunningNo", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pCreditTermParameter = pCreditTerm.HasValue ?
                new ObjectParameter("pCreditTerm", pCreditTerm) :
                new ObjectParameter("pCreditTerm", typeof(int));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pBillingAmtParameter = pBillingAmt.HasValue ?
                new ObjectParameter("pBillingAmt", pBillingAmt) :
                new ObjectParameter("pBillingAmt", typeof(decimal));
    
            var pPayMethodParameter = pPayMethod != null ?
                new ObjectParameter("pPayMethod", pPayMethod) :
                new ObjectParameter("pPayMethod", typeof(string));
    
            var pBillingCycleParameter = pBillingCycle.HasValue ?
                new ObjectParameter("pBillingCycle", pBillingCycle) :
                new ObjectParameter("pBillingCycle", typeof(int));
    
            var pCalDailyFeeStatusParameter = pCalDailyFeeStatus != null ?
                new ObjectParameter("pCalDailyFeeStatus", pCalDailyFeeStatus) :
                new ObjectParameter("pCalDailyFeeStatus", typeof(string));
    
            var pSendFlagParameter = pSendFlag != null ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pDocLanguageParameter = pDocLanguage != null ?
                new ObjectParameter("pDocLanguage", pDocLanguage) :
                new ObjectParameter("pDocLanguage", typeof(string));
    
            var pBillingAmtUsdParameter = pBillingAmtUsd.HasValue ?
                new ObjectParameter("pBillingAmtUsd", pBillingAmtUsd) :
                new ObjectParameter("pBillingAmtUsd", typeof(decimal));
    
            var pBillingAmtCurrencyTypeParameter = pBillingAmtCurrencyType != null ?
                new ObjectParameter("pBillingAmtCurrencyType", pBillingAmtCurrencyType) :
                new ObjectParameter("pBillingAmtCurrencyType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("InsertTbt_BillingTemp", pContractCodeParameter, pOCCParameter, pBillingOCCParameter, pBillingTargetRunningNoParameter, pBillingClientCodeParameter, pBillingTargetCodeParameter, pBillingOfficeCodeParameter, pBillingTypeParameter, pCreditTermParameter, pBillingTimingParameter, pBillingAmtParameter, pPayMethodParameter, pBillingCycleParameter, pCalDailyFeeStatusParameter, pSendFlagParameter, pProcessDateTimeParameter, pEmpNoParameter, pDocLanguageParameter, pBillingAmtUsdParameter, pBillingAmtCurrencyTypeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> InsertTbt_BillingTemp(string pContractCode, string pOCC, string pBillingOCC, string pBillingTargetRunningNo, string pBillingClientCode, string pBillingTargetCode, string pBillingOfficeCode, string pBillingType, Nullable<int> pCreditTerm, string pBillingTiming, Nullable<decimal> pBillingAmt, string pPayMethod, Nullable<int> pBillingCycle, string pCalDailyFeeStatus, string pSendFlag, Nullable<System.DateTime> pProcessDateTime, string pEmpNo, string pDocLanguage, Nullable<decimal> pBillingAmtUsd, string pBillingAmtCurrencyType, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetRunningNoParameter = pBillingTargetRunningNo != null ?
                new ObjectParameter("pBillingTargetRunningNo", pBillingTargetRunningNo) :
                new ObjectParameter("pBillingTargetRunningNo", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pCreditTermParameter = pCreditTerm.HasValue ?
                new ObjectParameter("pCreditTerm", pCreditTerm) :
                new ObjectParameter("pCreditTerm", typeof(int));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pBillingAmtParameter = pBillingAmt.HasValue ?
                new ObjectParameter("pBillingAmt", pBillingAmt) :
                new ObjectParameter("pBillingAmt", typeof(decimal));
    
            var pPayMethodParameter = pPayMethod != null ?
                new ObjectParameter("pPayMethod", pPayMethod) :
                new ObjectParameter("pPayMethod", typeof(string));
    
            var pBillingCycleParameter = pBillingCycle.HasValue ?
                new ObjectParameter("pBillingCycle", pBillingCycle) :
                new ObjectParameter("pBillingCycle", typeof(int));
    
            var pCalDailyFeeStatusParameter = pCalDailyFeeStatus != null ?
                new ObjectParameter("pCalDailyFeeStatus", pCalDailyFeeStatus) :
                new ObjectParameter("pCalDailyFeeStatus", typeof(string));
    
            var pSendFlagParameter = pSendFlag != null ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pDocLanguageParameter = pDocLanguage != null ?
                new ObjectParameter("pDocLanguage", pDocLanguage) :
                new ObjectParameter("pDocLanguage", typeof(string));
    
            var pBillingAmtUsdParameter = pBillingAmtUsd.HasValue ?
                new ObjectParameter("pBillingAmtUsd", pBillingAmtUsd) :
                new ObjectParameter("pBillingAmtUsd", typeof(decimal));
    
            var pBillingAmtCurrencyTypeParameter = pBillingAmtCurrencyType != null ?
                new ObjectParameter("pBillingAmtCurrencyType", pBillingAmtCurrencyType) :
                new ObjectParameter("pBillingAmtCurrencyType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("InsertTbt_BillingTemp", mergeOption, pContractCodeParameter, pOCCParameter, pBillingOCCParameter, pBillingTargetRunningNoParameter, pBillingClientCodeParameter, pBillingTargetCodeParameter, pBillingOfficeCodeParameter, pBillingTypeParameter, pCreditTermParameter, pBillingTimingParameter, pBillingAmtParameter, pPayMethodParameter, pBillingCycleParameter, pCalDailyFeeStatusParameter, pSendFlagParameter, pProcessDateTimeParameter, pEmpNoParameter, pDocLanguageParameter, pBillingAmtUsdParameter, pBillingAmtCurrencyTypeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByContractCode(string pContractCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByContractCode", pContractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByContractCode(string pContractCode, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByContractCode", mergeOption, pContractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByContractCodeOCC(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByContractCodeOCC", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByContractCodeOCC(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByContractCodeOCC", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByKey(string pContractCode, string pOCC, Nullable<int> pSequenceNo)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSequenceNoParameter = pSequenceNo.HasValue ?
                new ObjectParameter("pSequenceNo", pSequenceNo) :
                new ObjectParameter("pSequenceNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByKey", pContractCodeParameter, pOCCParameter, pSequenceNoParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByKey(string pContractCode, string pOCC, Nullable<int> pSequenceNo, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSequenceNoParameter = pSequenceNo.HasValue ?
                new ObjectParameter("pSequenceNo", pSequenceNo) :
                new ObjectParameter("pSequenceNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByKey", mergeOption, pContractCodeParameter, pOCCParameter, pSequenceNoParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTemp_ByBillingClientAndOffice(string pBillingOCC, string pBillingTargetCode, string pContractCode, string pBillingClientCode, string pBillingOfficeCode, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo)
        {
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTemp_ByBillingClientAndOffice", pBillingOCCParameter, pBillingTargetCodeParameter, pContractCodeParameter, pBillingClientCodeParameter, pBillingOfficeCodeParameter, pProcessingDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTemp_ByBillingClientAndOffice(string pBillingOCC, string pBillingTargetCode, string pContractCode, string pBillingClientCode, string pBillingOfficeCode, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo, MergeOption mergeOption)
        {
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTemp_ByBillingClientAndOffice", mergeOption, pBillingOCCParameter, pBillingTargetCodeParameter, pContractCodeParameter, pBillingClientCodeParameter, pBillingOfficeCodeParameter, pProcessingDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTemp_ByBillingTarget(string pNewBillingClientCode, string pNewBillingOfficeCode, string pNewBillingTargetCode, string pOldBillingClientCode, string pOldBillingOfficeCode, string pOldBillingTargetCode, string pContractCode, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo, string pC_BILLINGTEMP_FLAG_KEEP)
        {
            var pNewBillingClientCodeParameter = pNewBillingClientCode != null ?
                new ObjectParameter("pNewBillingClientCode", pNewBillingClientCode) :
                new ObjectParameter("pNewBillingClientCode", typeof(string));
    
            var pNewBillingOfficeCodeParameter = pNewBillingOfficeCode != null ?
                new ObjectParameter("pNewBillingOfficeCode", pNewBillingOfficeCode) :
                new ObjectParameter("pNewBillingOfficeCode", typeof(string));
    
            var pNewBillingTargetCodeParameter = pNewBillingTargetCode != null ?
                new ObjectParameter("pNewBillingTargetCode", pNewBillingTargetCode) :
                new ObjectParameter("pNewBillingTargetCode", typeof(string));
    
            var pOldBillingClientCodeParameter = pOldBillingClientCode != null ?
                new ObjectParameter("pOldBillingClientCode", pOldBillingClientCode) :
                new ObjectParameter("pOldBillingClientCode", typeof(string));
    
            var pOldBillingOfficeCodeParameter = pOldBillingOfficeCode != null ?
                new ObjectParameter("pOldBillingOfficeCode", pOldBillingOfficeCode) :
                new ObjectParameter("pOldBillingOfficeCode", typeof(string));
    
            var pOldBillingTargetCodeParameter = pOldBillingTargetCode != null ?
                new ObjectParameter("pOldBillingTargetCode", pOldBillingTargetCode) :
                new ObjectParameter("pOldBillingTargetCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_KEEPParameter = pC_BILLINGTEMP_FLAG_KEEP != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", pC_BILLINGTEMP_FLAG_KEEP) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTemp_ByBillingTarget", pNewBillingClientCodeParameter, pNewBillingOfficeCodeParameter, pNewBillingTargetCodeParameter, pOldBillingClientCodeParameter, pOldBillingOfficeCodeParameter, pOldBillingTargetCodeParameter, pContractCodeParameter, pProcessingDateTimeParameter, pEmpNoParameter, pC_BILLINGTEMP_FLAG_KEEPParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTemp_ByBillingTarget(string pNewBillingClientCode, string pNewBillingOfficeCode, string pNewBillingTargetCode, string pOldBillingClientCode, string pOldBillingOfficeCode, string pOldBillingTargetCode, string pContractCode, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo, string pC_BILLINGTEMP_FLAG_KEEP, MergeOption mergeOption)
        {
            var pNewBillingClientCodeParameter = pNewBillingClientCode != null ?
                new ObjectParameter("pNewBillingClientCode", pNewBillingClientCode) :
                new ObjectParameter("pNewBillingClientCode", typeof(string));
    
            var pNewBillingOfficeCodeParameter = pNewBillingOfficeCode != null ?
                new ObjectParameter("pNewBillingOfficeCode", pNewBillingOfficeCode) :
                new ObjectParameter("pNewBillingOfficeCode", typeof(string));
    
            var pNewBillingTargetCodeParameter = pNewBillingTargetCode != null ?
                new ObjectParameter("pNewBillingTargetCode", pNewBillingTargetCode) :
                new ObjectParameter("pNewBillingTargetCode", typeof(string));
    
            var pOldBillingClientCodeParameter = pOldBillingClientCode != null ?
                new ObjectParameter("pOldBillingClientCode", pOldBillingClientCode) :
                new ObjectParameter("pOldBillingClientCode", typeof(string));
    
            var pOldBillingOfficeCodeParameter = pOldBillingOfficeCode != null ?
                new ObjectParameter("pOldBillingOfficeCode", pOldBillingOfficeCode) :
                new ObjectParameter("pOldBillingOfficeCode", typeof(string));
    
            var pOldBillingTargetCodeParameter = pOldBillingTargetCode != null ?
                new ObjectParameter("pOldBillingTargetCode", pOldBillingTargetCode) :
                new ObjectParameter("pOldBillingTargetCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_KEEPParameter = pC_BILLINGTEMP_FLAG_KEEP != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", pC_BILLINGTEMP_FLAG_KEEP) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTemp_ByBillingTarget", mergeOption, pNewBillingClientCodeParameter, pNewBillingOfficeCodeParameter, pNewBillingTargetCodeParameter, pOldBillingClientCodeParameter, pOldBillingOfficeCodeParameter, pOldBillingTargetCodeParameter, pContractCodeParameter, pProcessingDateTimeParameter, pEmpNoParameter, pC_BILLINGTEMP_FLAG_KEEPParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTemp_ByKey(string pBillingOCC, string pBillingTargetRunningNo, string pBillingClientCode, string pBillingTargetCode, string pBillingOfficeCode, string pBillingType, Nullable<int> pCreditTerm, string pBillingTiming, Nullable<decimal> pBillingAmt, string pPayMethod, Nullable<int> pBillingCycle, string pCalDailyFeeStatus, string pSendFlag, string pContractCode, string pOCC, Nullable<int> pSequenceNo, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo, string pBillingAmtCurrencyType, Nullable<decimal> pBillingAmtUsd)
        {
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetRunningNoParameter = pBillingTargetRunningNo != null ?
                new ObjectParameter("pBillingTargetRunningNo", pBillingTargetRunningNo) :
                new ObjectParameter("pBillingTargetRunningNo", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pCreditTermParameter = pCreditTerm.HasValue ?
                new ObjectParameter("pCreditTerm", pCreditTerm) :
                new ObjectParameter("pCreditTerm", typeof(int));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pBillingAmtParameter = pBillingAmt.HasValue ?
                new ObjectParameter("pBillingAmt", pBillingAmt) :
                new ObjectParameter("pBillingAmt", typeof(decimal));
    
            var pPayMethodParameter = pPayMethod != null ?
                new ObjectParameter("pPayMethod", pPayMethod) :
                new ObjectParameter("pPayMethod", typeof(string));
    
            var pBillingCycleParameter = pBillingCycle.HasValue ?
                new ObjectParameter("pBillingCycle", pBillingCycle) :
                new ObjectParameter("pBillingCycle", typeof(int));
    
            var pCalDailyFeeStatusParameter = pCalDailyFeeStatus != null ?
                new ObjectParameter("pCalDailyFeeStatus", pCalDailyFeeStatus) :
                new ObjectParameter("pCalDailyFeeStatus", typeof(string));
    
            var pSendFlagParameter = pSendFlag != null ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSequenceNoParameter = pSequenceNo.HasValue ?
                new ObjectParameter("pSequenceNo", pSequenceNo) :
                new ObjectParameter("pSequenceNo", typeof(int));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pBillingAmtCurrencyTypeParameter = pBillingAmtCurrencyType != null ?
                new ObjectParameter("pBillingAmtCurrencyType", pBillingAmtCurrencyType) :
                new ObjectParameter("pBillingAmtCurrencyType", typeof(string));
    
            var pBillingAmtUsdParameter = pBillingAmtUsd.HasValue ?
                new ObjectParameter("pBillingAmtUsd", pBillingAmtUsd) :
                new ObjectParameter("pBillingAmtUsd", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTemp_ByKey", pBillingOCCParameter, pBillingTargetRunningNoParameter, pBillingClientCodeParameter, pBillingTargetCodeParameter, pBillingOfficeCodeParameter, pBillingTypeParameter, pCreditTermParameter, pBillingTimingParameter, pBillingAmtParameter, pPayMethodParameter, pBillingCycleParameter, pCalDailyFeeStatusParameter, pSendFlagParameter, pContractCodeParameter, pOCCParameter, pSequenceNoParameter, pProcessingDateTimeParameter, pEmpNoParameter, pBillingAmtCurrencyTypeParameter, pBillingAmtUsdParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTemp_ByKey(string pBillingOCC, string pBillingTargetRunningNo, string pBillingClientCode, string pBillingTargetCode, string pBillingOfficeCode, string pBillingType, Nullable<int> pCreditTerm, string pBillingTiming, Nullable<decimal> pBillingAmt, string pPayMethod, Nullable<int> pBillingCycle, string pCalDailyFeeStatus, string pSendFlag, string pContractCode, string pOCC, Nullable<int> pSequenceNo, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo, string pBillingAmtCurrencyType, Nullable<decimal> pBillingAmtUsd, MergeOption mergeOption)
        {
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetRunningNoParameter = pBillingTargetRunningNo != null ?
                new ObjectParameter("pBillingTargetRunningNo", pBillingTargetRunningNo) :
                new ObjectParameter("pBillingTargetRunningNo", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pCreditTermParameter = pCreditTerm.HasValue ?
                new ObjectParameter("pCreditTerm", pCreditTerm) :
                new ObjectParameter("pCreditTerm", typeof(int));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pBillingAmtParameter = pBillingAmt.HasValue ?
                new ObjectParameter("pBillingAmt", pBillingAmt) :
                new ObjectParameter("pBillingAmt", typeof(decimal));
    
            var pPayMethodParameter = pPayMethod != null ?
                new ObjectParameter("pPayMethod", pPayMethod) :
                new ObjectParameter("pPayMethod", typeof(string));
    
            var pBillingCycleParameter = pBillingCycle.HasValue ?
                new ObjectParameter("pBillingCycle", pBillingCycle) :
                new ObjectParameter("pBillingCycle", typeof(int));
    
            var pCalDailyFeeStatusParameter = pCalDailyFeeStatus != null ?
                new ObjectParameter("pCalDailyFeeStatus", pCalDailyFeeStatus) :
                new ObjectParameter("pCalDailyFeeStatus", typeof(string));
    
            var pSendFlagParameter = pSendFlag != null ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSequenceNoParameter = pSequenceNo.HasValue ?
                new ObjectParameter("pSequenceNo", pSequenceNo) :
                new ObjectParameter("pSequenceNo", typeof(int));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pBillingAmtCurrencyTypeParameter = pBillingAmtCurrencyType != null ?
                new ObjectParameter("pBillingAmtCurrencyType", pBillingAmtCurrencyType) :
                new ObjectParameter("pBillingAmtCurrencyType", typeof(string));
    
            var pBillingAmtUsdParameter = pBillingAmtUsd.HasValue ?
                new ObjectParameter("pBillingAmtUsd", pBillingAmtUsd) :
                new ObjectParameter("pBillingAmtUsd", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTemp_ByKey", mergeOption, pBillingOCCParameter, pBillingTargetRunningNoParameter, pBillingClientCodeParameter, pBillingTargetCodeParameter, pBillingOfficeCodeParameter, pBillingTypeParameter, pCreditTermParameter, pBillingTimingParameter, pBillingAmtParameter, pPayMethodParameter, pBillingCycleParameter, pCalDailyFeeStatusParameter, pSendFlagParameter, pContractCodeParameter, pOCCParameter, pSequenceNoParameter, pProcessingDateTimeParameter, pEmpNoParameter, pBillingAmtCurrencyTypeParameter, pBillingAmtUsdParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateSendFlag(string pContractCode, Nullable<int> pSequenceNo, string pOCC, string pC_BILLINGTEMP_FLAG_SENT, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pSequenceNoParameter = pSequenceNo.HasValue ?
                new ObjectParameter("pSequenceNo", pSequenceNo) :
                new ObjectParameter("pSequenceNo", typeof(int));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_SENTParameter = pC_BILLINGTEMP_FLAG_SENT != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_SENT", pC_BILLINGTEMP_FLAG_SENT) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_SENT", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateSendFlag", pContractCodeParameter, pSequenceNoParameter, pOCCParameter, pC_BILLINGTEMP_FLAG_SENTParameter, pProcessingDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateSendFlag(string pContractCode, Nullable<int> pSequenceNo, string pOCC, string pC_BILLINGTEMP_FLAG_SENT, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pSequenceNoParameter = pSequenceNo.HasValue ?
                new ObjectParameter("pSequenceNo", pSequenceNo) :
                new ObjectParameter("pSequenceNo", typeof(int));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_SENTParameter = pC_BILLINGTEMP_FLAG_SENT != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_SENT", pC_BILLINGTEMP_FLAG_SENT) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_SENT", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateSendFlag", mergeOption, pContractCodeParameter, pSequenceNoParameter, pOCCParameter, pC_BILLINGTEMP_FLAG_SENTParameter, pProcessingDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<doRentalContractBasicInformation> GetRentalContractBasicInformation(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doRentalContractBasicInformation>("GetRentalContractBasicInformation", strContractCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetContractCounterNo(string strContractCode, string strLastOCC)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strLastOCCParameter = strLastOCC != null ?
                new ObjectParameter("strLastOCC", strLastOCC) :
                new ObjectParameter("strLastOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetContractCounterNo", strContractCodeParameter, strLastOCCParameter);
        }
    
        public virtual ObjectResult<string> GetLastImplementedOCCs(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLastImplementedOCCs", strContractCodeParameter);
        }
    
        public virtual ObjectResult<string> GetLastUnimplementedOCCs(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLastUnimplementedOCCs", strContractCodeParameter);
        }
    
        public virtual ObjectResult<string> GetContractDocOCC(string strCode, string strOCC)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetContractDocOCC", strCodeParameter, strOCCParameter);
        }
    
        public virtual ObjectResult<string> GetLastOCCs(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLastOCCs", strContractCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetLastContractCounterNo(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetLastContractCounterNo", strContractCodeParameter);
        }
    
        public virtual ObjectResult<dtContractListGrp> GetContractListForViewCustGrp_CT_Rental(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractListGrp>("GetContractListForViewCustGrp_CT_Rental", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtContractListGrp> GetContractListForViewCustGrp_CT_Sale(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractListGrp>("GetContractListForViewCustGrp_CT_Sale", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtContractListGrp> GetContractListForViewCustGrp_R_Rental(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractListGrp>("GetContractListForViewCustGrp_R_Rental", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtContractListGrp> GetContractListForViewCustGrp_R_Sale(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractListGrp>("GetContractListForViewCustGrp_R_Sale", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtCustomerListGrp> GetCustomerListForViewCustGrp_CT_Rental(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtCustomerListGrp>("GetCustomerListForViewCustGrp_CT_Rental", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtCustomerListGrp> GetCustomerListForViewCustGrp_CT_Sale(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtCustomerListGrp>("GetCustomerListForViewCustGrp_CT_Sale", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtCustomerListGrp> GetCustomerListForViewCustGrp_R_Rental(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtCustomerListGrp>("GetCustomerListForViewCustGrp_R_Rental", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtCustomerListGrp> GetCustomerListForViewCustGrp_R_Sale(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtCustomerListGrp>("GetCustomerListForViewCustGrp_R_Sale", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> UpdateTbt_SaleBasic(string xml_doTbtSaleBasic)
        {
            var xml_doTbtSaleBasicParameter = xml_doTbtSaleBasic != null ?
                new ObjectParameter("xml_doTbtSaleBasic", xml_doTbtSaleBasic) :
                new ObjectParameter("xml_doTbtSaleBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("UpdateTbt_SaleBasic", xml_doTbtSaleBasicParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> UpdateTbt_SaleBasic(string xml_doTbtSaleBasic, MergeOption mergeOption)
        {
            var xml_doTbtSaleBasicParameter = xml_doTbtSaleBasic != null ?
                new ObjectParameter("xml_doTbtSaleBasic", xml_doTbtSaleBasic) :
                new ObjectParameter("xml_doTbtSaleBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("UpdateTbt_SaleBasic", mergeOption, xml_doTbtSaleBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> UpdateTbt_RentalSecurityBasic(string xml_doTbtRentalSecurityBasic)
        {
            var xml_doTbtRentalSecurityBasicParameter = xml_doTbtRentalSecurityBasic != null ?
                new ObjectParameter("xml_doTbtRentalSecurityBasic", xml_doTbtRentalSecurityBasic) :
                new ObjectParameter("xml_doTbtRentalSecurityBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("UpdateTbt_RentalSecurityBasic", xml_doTbtRentalSecurityBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> UpdateTbt_RentalSecurityBasic(string xml_doTbtRentalSecurityBasic, MergeOption mergeOption)
        {
            var xml_doTbtRentalSecurityBasicParameter = xml_doTbtRentalSecurityBasic != null ?
                new ObjectParameter("xml_doTbtRentalSecurityBasic", xml_doTbtRentalSecurityBasic) :
                new ObjectParameter("xml_doTbtRentalSecurityBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("UpdateTbt_RentalSecurityBasic", mergeOption, xml_doTbtRentalSecurityBasicParameter);
        }
    
        public virtual ObjectResult<doContractAutoRenew> GetContractExpireNextMonth(string pC_CONTRACT_STATUS_AFTER_START, Nullable<System.DateTime> batchDate)
        {
            var pC_CONTRACT_STATUS_AFTER_STARTParameter = pC_CONTRACT_STATUS_AFTER_START != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_AFTER_START", pC_CONTRACT_STATUS_AFTER_START) :
                new ObjectParameter("pC_CONTRACT_STATUS_AFTER_START", typeof(string));
    
            var batchDateParameter = batchDate.HasValue ?
                new ObjectParameter("BatchDate", batchDate) :
                new ObjectParameter("BatchDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doContractAutoRenew>("GetContractExpireNextMonth", pC_CONTRACT_STATUS_AFTER_STARTParameter, batchDateParameter);
        }
    
        public virtual ObjectResult<doRentalSecurityBasicInformation> GetRentalSecurityBasicInformation(string strContractCode, string occ)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var occParameter = occ != null ?
                new ObjectParameter("occ", occ) :
                new ObjectParameter("occ", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doRentalSecurityBasicInformation>("GetRentalSecurityBasicInformation", strContractCodeParameter, occParameter);
        }
    
        public virtual ObjectResult<tbt_Project> GetTbt_Project(string pProjectCode)
        {
            var pProjectCodeParameter = pProjectCode != null ?
                new ObjectParameter("pProjectCode", pProjectCode) :
                new ObjectParameter("pProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("GetTbt_Project", pProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_Project> GetTbt_Project(string pProjectCode, MergeOption mergeOption)
        {
            var pProjectCodeParameter = pProjectCode != null ?
                new ObjectParameter("pProjectCode", pProjectCode) :
                new ObjectParameter("pProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("GetTbt_Project", mergeOption, pProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutInstrument> GetTbt_ProjectStockoutInstrument(string pProjectCode, string pInstrumentCode)
        {
            var pProjectCodeParameter = pProjectCode != null ?
                new ObjectParameter("pProjectCode", pProjectCode) :
                new ObjectParameter("pProjectCode", typeof(string));
    
            var pInstrumentCodeParameter = pInstrumentCode != null ?
                new ObjectParameter("pInstrumentCode", pInstrumentCode) :
                new ObjectParameter("pInstrumentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutInstrument>("GetTbt_ProjectStockoutInstrument", pProjectCodeParameter, pInstrumentCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutInstrument> InsertTbt_ProjectStockoutInstrument(string xml_doTbtProjectStockoutInstrument)
        {
            var xml_doTbtProjectStockoutInstrumentParameter = xml_doTbtProjectStockoutInstrument != null ?
                new ObjectParameter("xml_doTbtProjectStockoutInstrument", xml_doTbtProjectStockoutInstrument) :
                new ObjectParameter("xml_doTbtProjectStockoutInstrument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutInstrument>("InsertTbt_ProjectStockoutInstrument", xml_doTbtProjectStockoutInstrumentParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutInstrument> UpdateTbt_ProjectStockoutInstrument(string xml_doTbtProjectStockoutInstrument)
        {
            var xml_doTbtProjectStockoutInstrumentParameter = xml_doTbtProjectStockoutInstrument != null ?
                new ObjectParameter("xml_doTbtProjectStockoutInstrument", xml_doTbtProjectStockoutInstrument) :
                new ObjectParameter("xml_doTbtProjectStockoutInstrument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutInstrument>("UpdateTbt_ProjectStockoutInstrument", xml_doTbtProjectStockoutInstrumentParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> GetTbt_RelationType(string pContractCode, string pOCC, string pRelatedContractCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pRelatedContractCodeParameter = pRelatedContractCode != null ?
                new ObjectParameter("pRelatedContractCode", pRelatedContractCode) :
                new ObjectParameter("pRelatedContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("GetTbt_RelationType", pContractCodeParameter, pOCCParameter, pRelatedContractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> GetTbt_RelationType(string pContractCode, string pOCC, string pRelatedContractCode, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pRelatedContractCodeParameter = pRelatedContractCode != null ?
                new ObjectParameter("pRelatedContractCode", pRelatedContractCode) :
                new ObjectParameter("pRelatedContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("GetTbt_RelationType", mergeOption, pContractCodeParameter, pOCCParameter, pRelatedContractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> CheckRelationType(string pContractCode, string pC_CONTRACT_STATUS_END, string pC_CONTRACT_STATUS_CANCEL, string pC_CONTRACT_STATUS_FIXED_CANCEL, string pQuotationTargetCode, string pRelationType)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pC_CONTRACT_STATUS_ENDParameter = pC_CONTRACT_STATUS_END != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_END", pC_CONTRACT_STATUS_END) :
                new ObjectParameter("pC_CONTRACT_STATUS_END", typeof(string));
    
            var pC_CONTRACT_STATUS_CANCELParameter = pC_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_CANCEL", pC_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("pC_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var pC_CONTRACT_STATUS_FIXED_CANCELParameter = pC_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_FIXED_CANCEL", pC_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("pC_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pRelationTypeParameter = pRelationType != null ?
                new ObjectParameter("pRelationType", pRelationType) :
                new ObjectParameter("pRelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("CheckRelationType", pContractCodeParameter, pC_CONTRACT_STATUS_ENDParameter, pC_CONTRACT_STATUS_CANCELParameter, pC_CONTRACT_STATUS_FIXED_CANCELParameter, pQuotationTargetCodeParameter, pRelationTypeParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> CheckRelationType(string pContractCode, string pC_CONTRACT_STATUS_END, string pC_CONTRACT_STATUS_CANCEL, string pC_CONTRACT_STATUS_FIXED_CANCEL, string pQuotationTargetCode, string pRelationType, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pC_CONTRACT_STATUS_ENDParameter = pC_CONTRACT_STATUS_END != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_END", pC_CONTRACT_STATUS_END) :
                new ObjectParameter("pC_CONTRACT_STATUS_END", typeof(string));
    
            var pC_CONTRACT_STATUS_CANCELParameter = pC_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_CANCEL", pC_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("pC_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var pC_CONTRACT_STATUS_FIXED_CANCELParameter = pC_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_FIXED_CANCEL", pC_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("pC_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pRelationTypeParameter = pRelationType != null ?
                new ObjectParameter("pRelationType", pRelationType) :
                new ObjectParameter("pRelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("CheckRelationType", mergeOption, pContractCodeParameter, pC_CONTRACT_STATUS_ENDParameter, pC_CONTRACT_STATUS_CANCELParameter, pC_CONTRACT_STATUS_FIXED_CANCELParameter, pQuotationTargetCodeParameter, pRelationTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CancelUnoperationedContract(string strContractCode, string strOCC)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CancelUnoperationedContract", strContractCodeParameter, strOCCParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> DeleteTbt_CancelContractMemo_ByKey(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("DeleteTbt_CancelContractMemo_ByKey", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> DeleteTbt_CancelContractMemo_ByKey(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("DeleteTbt_CancelContractMemo_ByKey", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalBEDetails> DeleteTbt_RentalBEDetails_ByKey(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalBEDetails>("DeleteTbt_RentalBEDetails_ByKey", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalBEDetails> DeleteTbt_RentalBEDetails_ByKey(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalBEDetails>("DeleteTbt_RentalBEDetails_ByKey", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalOperationType> DeleteTbt_RentalOperationType_ByKey(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalOperationType>("DeleteTbt_RentalOperationType_ByKey", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalOperationType> DeleteTbt_RentalOperationType_ByKey(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalOperationType>("DeleteTbt_RentalOperationType_ByKey", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> DeleteTbt_RentalSentryGuard_ByKey(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("DeleteTbt_RentalSentryGuard_ByKey", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> DeleteTbt_RentalSentryGuard_ByKey(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("DeleteTbt_RentalSentryGuard_ByKey", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<dtsiteListGrp> GetSiteListForViewCustGrp_CT_Rental(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtsiteListGrp>("GetSiteListForViewCustGrp_CT_Rental", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtsiteListGrp> GetSiteListForViewCustGrp_CT_Sale(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtsiteListGrp>("GetSiteListForViewCustGrp_CT_Sale", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtsiteListGrp> GetSiteListForViewCustGrp_R_Rental(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtsiteListGrp>("GetSiteListForViewCustGrp_R_Rental", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtsiteListGrp> GetSiteListForViewCustGrp_R_Sale(string strGroupCode, string strCONTRACT_PREFIX, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strGroupCodeParameter = strGroupCode != null ?
                new ObjectParameter("strGroupCode", strGroupCode) :
                new ObjectParameter("strGroupCode", typeof(string));
    
            var strCONTRACT_PREFIXParameter = strCONTRACT_PREFIX != null ?
                new ObjectParameter("strCONTRACT_PREFIX", strCONTRACT_PREFIX) :
                new ObjectParameter("strCONTRACT_PREFIX", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtsiteListGrp>("GetSiteListForViewCustGrp_R_Sale", strGroupCodeParameter, strCONTRACT_PREFIXParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> DeleteTbt_CancelContractMemoDetail_ByContractCodeOCC(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("DeleteTbt_CancelContractMemoDetail_ByContractCodeOCC", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> DeleteTbt_CancelContractMemoDetail_ByContractCodeOCC(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("DeleteTbt_CancelContractMemoDetail_ByContractCodeOCC", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstrumentDetails> DeleteTbt_RentalInstrumentDetails_ByContractCodeOCC(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstrumentDetails>("DeleteTbt_RentalInstrumentDetails_ByContractCodeOCC", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstrumentDetails> DeleteTbt_RentalInstrumentDetails_ByContractCodeOCC(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstrumentDetails>("DeleteTbt_RentalInstrumentDetails_ByContractCodeOCC", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstSubcontractor> DeleteTbt_RentalInstSubContractor_ByContractCodeOCC(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstSubcontractor>("DeleteTbt_RentalInstSubContractor_ByContractCodeOCC", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstSubcontractor> DeleteTbt_RentalInstSubContractor_ByContractCodeOCC(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstSubcontractor>("DeleteTbt_RentalInstSubContractor_ByContractCodeOCC", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuardDetails> DeleteTbt_RentalSentryguardDetails_ByContractCodeOCC(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuardDetails>("DeleteTbt_RentalSentryguardDetails_ByContractCodeOCC", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuardDetails> DeleteTbt_RentalSentryguardDetails_ByContractCodeOCC(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuardDetails>("DeleteTbt_RentalSentryguardDetails_ByContractCodeOCC", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> DeleteTbt_RentalSecurityBasic_ByKey(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("DeleteTbt_RentalSecurityBasic_ByKey", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> DeleteTbt_RentalSecurityBasic_ByKey(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("DeleteTbt_RentalSecurityBasic_ByKey", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalMaintenanceDetails> DeleteTbt_RentalMaintenanceDetails_ByKey(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalMaintenanceDetails>("DeleteTbt_RentalMaintenanceDetails_ByKey", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RentalMaintenanceDetails> DeleteTbt_RentalMaintenanceDetails_ByKey(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalMaintenanceDetails>("DeleteTbt_RentalMaintenanceDetails_ByKey", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> GetTbt_SaleInstrumentDetails(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("GetTbt_SaleInstrumentDetails", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> GetTbt_SaleInstrumentDetails(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("GetTbt_SaleInstrumentDetails", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> InsertTbt_SaleBasic(string xml_SaleBasic)
        {
            var xml_SaleBasicParameter = xml_SaleBasic != null ?
                new ObjectParameter("xml_SaleBasic", xml_SaleBasic) :
                new ObjectParameter("xml_SaleBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("InsertTbt_SaleBasic", xml_SaleBasicParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> InsertTbt_SaleBasic(string xml_SaleBasic, MergeOption mergeOption)
        {
            var xml_SaleBasicParameter = xml_SaleBasic != null ?
                new ObjectParameter("xml_SaleBasic", xml_SaleBasic) :
                new ObjectParameter("xml_SaleBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("InsertTbt_SaleBasic", mergeOption, xml_SaleBasicParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> InsertTbt_SaleInstrumentDetails(string xml_SaleInstrumentDetails)
        {
            var xml_SaleInstrumentDetailsParameter = xml_SaleInstrumentDetails != null ?
                new ObjectParameter("xml_SaleInstrumentDetails", xml_SaleInstrumentDetails) :
                new ObjectParameter("xml_SaleInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("InsertTbt_SaleInstrumentDetails", xml_SaleInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> InsertTbt_SaleInstrumentDetails(string xml_SaleInstrumentDetails, MergeOption mergeOption)
        {
            var xml_SaleInstrumentDetailsParameter = xml_SaleInstrumentDetails != null ?
                new ObjectParameter("xml_SaleInstrumentDetails", xml_SaleInstrumentDetails) :
                new ObjectParameter("xml_SaleInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("InsertTbt_SaleInstrumentDetails", mergeOption, xml_SaleInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstSubcontractor> InsertTbt_SaleInstSubcontractor(string pContractCode, string pOCC, string pSubcontractorCode, Nullable<System.DateTime> pDate, string pUser)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSubcontractorCodeParameter = pSubcontractorCode != null ?
                new ObjectParameter("pSubcontractorCode", pSubcontractorCode) :
                new ObjectParameter("pSubcontractorCode", typeof(string));
    
            var pDateParameter = pDate.HasValue ?
                new ObjectParameter("pDate", pDate) :
                new ObjectParameter("pDate", typeof(System.DateTime));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstSubcontractor>("InsertTbt_SaleInstSubcontractor", pContractCodeParameter, pOCCParameter, pSubcontractorCodeParameter, pDateParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstSubcontractor> InsertTbt_SaleInstSubcontractor(string pContractCode, string pOCC, string pSubcontractorCode, Nullable<System.DateTime> pDate, string pUser, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSubcontractorCodeParameter = pSubcontractorCode != null ?
                new ObjectParameter("pSubcontractorCode", pSubcontractorCode) :
                new ObjectParameter("pSubcontractorCode", typeof(string));
    
            var pDateParameter = pDate.HasValue ?
                new ObjectParameter("pDate", pDate) :
                new ObjectParameter("pDate", typeof(System.DateTime));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstSubcontractor>("InsertTbt_SaleInstSubcontractor", mergeOption, pContractCodeParameter, pOCCParameter, pSubcontractorCodeParameter, pDateParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> UpdateSummaryFields(string strContractCode, string strLastChangeType, Nullable<System.DateTime> dateLastChangeImplementDate)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strLastChangeTypeParameter = strLastChangeType != null ?
                new ObjectParameter("strLastChangeType", strLastChangeType) :
                new ObjectParameter("strLastChangeType", typeof(string));
    
            var dateLastChangeImplementDateParameter = dateLastChangeImplementDate.HasValue ?
                new ObjectParameter("dateLastChangeImplementDate", dateLastChangeImplementDate) :
                new ObjectParameter("dateLastChangeImplementDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("UpdateSummaryFields", strContractCodeParameter, strLastChangeTypeParameter, dateLastChangeImplementDateParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> UpdateSummaryFields(string strContractCode, string strLastChangeType, Nullable<System.DateTime> dateLastChangeImplementDate, MergeOption mergeOption)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strLastChangeTypeParameter = strLastChangeType != null ?
                new ObjectParameter("strLastChangeType", strLastChangeType) :
                new ObjectParameter("strLastChangeType", typeof(string));
    
            var dateLastChangeImplementDateParameter = dateLastChangeImplementDate.HasValue ?
                new ObjectParameter("dateLastChangeImplementDate", dateLastChangeImplementDate) :
                new ObjectParameter("dateLastChangeImplementDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("UpdateSummaryFields", mergeOption, strContractCodeParameter, strLastChangeTypeParameter, dateLastChangeImplementDateParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> UpdateTbt_RentalContractBasic(string xml_doTbtRentalContractBasic)
        {
            var xml_doTbtRentalContractBasicParameter = xml_doTbtRentalContractBasic != null ?
                new ObjectParameter("xml_doTbtRentalContractBasic", xml_doTbtRentalContractBasic) :
                new ObjectParameter("xml_doTbtRentalContractBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("UpdateTbt_RentalContractBasic", xml_doTbtRentalContractBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> UpdateTbt_RentalContractBasic(string xml_doTbtRentalContractBasic, MergeOption mergeOption)
        {
            var xml_doTbtRentalContractBasicParameter = xml_doTbtRentalContractBasic != null ?
                new ObjectParameter("xml_doTbtRentalContractBasic", xml_doTbtRentalContractBasic) :
                new ObjectParameter("xml_doTbtRentalContractBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("UpdateTbt_RentalContractBasic", mergeOption, xml_doTbtRentalContractBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> InsertTbt_RentalContractBasic(string xml_RentalContractBasic)
        {
            var xml_RentalContractBasicParameter = xml_RentalContractBasic != null ?
                new ObjectParameter("xml_RentalContractBasic", xml_RentalContractBasic) :
                new ObjectParameter("xml_RentalContractBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("InsertTbt_RentalContractBasic", xml_RentalContractBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalContractBasic> InsertTbt_RentalContractBasic(string xml_RentalContractBasic, MergeOption mergeOption)
        {
            var xml_RentalContractBasicParameter = xml_RentalContractBasic != null ?
                new ObjectParameter("xml_RentalContractBasic", xml_RentalContractBasic) :
                new ObjectParameter("xml_RentalContractBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalContractBasic>("InsertTbt_RentalContractBasic", mergeOption, xml_RentalContractBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> InsertTbt_RentalSecurityBasic(string xml_RentalSecurityBasic)
        {
            var xml_RentalSecurityBasicParameter = xml_RentalSecurityBasic != null ?
                new ObjectParameter("xml_RentalSecurityBasic", xml_RentalSecurityBasic) :
                new ObjectParameter("xml_RentalSecurityBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("InsertTbt_RentalSecurityBasic", xml_RentalSecurityBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSecurityBasic> InsertTbt_RentalSecurityBasic(string xml_RentalSecurityBasic, MergeOption mergeOption)
        {
            var xml_RentalSecurityBasicParameter = xml_RentalSecurityBasic != null ?
                new ObjectParameter("xml_RentalSecurityBasic", xml_RentalSecurityBasic) :
                new ObjectParameter("xml_RentalSecurityBasic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSecurityBasic>("InsertTbt_RentalSecurityBasic", mergeOption, xml_RentalSecurityBasicParameter);
        }
    
        public virtual ObjectResult<tbt_RentalBEDetails> InsertTbt_RentalBEDetails(string xml_RentalBEDetails)
        {
            var xml_RentalBEDetailsParameter = xml_RentalBEDetails != null ?
                new ObjectParameter("xml_RentalBEDetails", xml_RentalBEDetails) :
                new ObjectParameter("xml_RentalBEDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalBEDetails>("InsertTbt_RentalBEDetails", xml_RentalBEDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_RentalBEDetails> InsertTbt_RentalBEDetails(string xml_RentalBEDetails, MergeOption mergeOption)
        {
            var xml_RentalBEDetailsParameter = xml_RentalBEDetails != null ?
                new ObjectParameter("xml_RentalBEDetails", xml_RentalBEDetails) :
                new ObjectParameter("xml_RentalBEDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalBEDetails>("InsertTbt_RentalBEDetails", mergeOption, xml_RentalBEDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstrumentDetails> InsertTbt_RentalInstrumentDetails(string xml_RentalInstrumentDetails)
        {
            var xml_RentalInstrumentDetailsParameter = xml_RentalInstrumentDetails != null ?
                new ObjectParameter("xml_RentalInstrumentDetails", xml_RentalInstrumentDetails) :
                new ObjectParameter("xml_RentalInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstrumentDetails>("InsertTbt_RentalInstrumentDetails", xml_RentalInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstrumentDetails> InsertTbt_RentalInstrumentDetails(string xml_RentalInstrumentDetails, MergeOption mergeOption)
        {
            var xml_RentalInstrumentDetailsParameter = xml_RentalInstrumentDetails != null ?
                new ObjectParameter("xml_RentalInstrumentDetails", xml_RentalInstrumentDetails) :
                new ObjectParameter("xml_RentalInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstrumentDetails>("InsertTbt_RentalInstrumentDetails", mergeOption, xml_RentalInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> InsertTbt_RentalSentryGuard(string xml_RentalSentryGuard)
        {
            var xml_RentalSentryGuardParameter = xml_RentalSentryGuard != null ?
                new ObjectParameter("xml_RentalSentryGuard", xml_RentalSentryGuard) :
                new ObjectParameter("xml_RentalSentryGuard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("InsertTbt_RentalSentryGuard", xml_RentalSentryGuardParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> InsertTbt_RentalSentryGuard(string xml_RentalSentryGuard, MergeOption mergeOption)
        {
            var xml_RentalSentryGuardParameter = xml_RentalSentryGuard != null ?
                new ObjectParameter("xml_RentalSentryGuard", xml_RentalSentryGuard) :
                new ObjectParameter("xml_RentalSentryGuard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("InsertTbt_RentalSentryGuard", mergeOption, xml_RentalSentryGuardParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuardDetails> InsertTbt_RentalSentryGuardDetails(string xml_RentalSentryGuardDetails)
        {
            var xml_RentalSentryGuardDetailsParameter = xml_RentalSentryGuardDetails != null ?
                new ObjectParameter("xml_RentalSentryGuardDetails", xml_RentalSentryGuardDetails) :
                new ObjectParameter("xml_RentalSentryGuardDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuardDetails>("InsertTbt_RentalSentryGuardDetails", xml_RentalSentryGuardDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuardDetails> InsertTbt_RentalSentryGuardDetails(string xml_RentalSentryGuardDetails, MergeOption mergeOption)
        {
            var xml_RentalSentryGuardDetailsParameter = xml_RentalSentryGuardDetails != null ?
                new ObjectParameter("xml_RentalSentryGuardDetails", xml_RentalSentryGuardDetails) :
                new ObjectParameter("xml_RentalSentryGuardDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuardDetails>("InsertTbt_RentalSentryGuardDetails", mergeOption, xml_RentalSentryGuardDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> InsertTbt_CancelContractMemoDetail(string xml_CancelContractMemoDetail)
        {
            var xml_CancelContractMemoDetailParameter = xml_CancelContractMemoDetail != null ?
                new ObjectParameter("xml_CancelContractMemoDetail", xml_CancelContractMemoDetail) :
                new ObjectParameter("xml_CancelContractMemoDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("InsertTbt_CancelContractMemoDetail", xml_CancelContractMemoDetailParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> InsertTbt_CancelContractMemoDetail(string xml_CancelContractMemoDetail, MergeOption mergeOption)
        {
            var xml_CancelContractMemoDetailParameter = xml_CancelContractMemoDetail != null ?
                new ObjectParameter("xml_CancelContractMemoDetail", xml_CancelContractMemoDetail) :
                new ObjectParameter("xml_CancelContractMemoDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("InsertTbt_CancelContractMemoDetail", mergeOption, xml_CancelContractMemoDetailParameter);
        }
    
        public virtual ObjectResult<tbt_RentalMaintenanceDetails> InsertTbt_RentalMaintenanceDetails(string xml_RentalMaintenanceDetails)
        {
            var xml_RentalMaintenanceDetailsParameter = xml_RentalMaintenanceDetails != null ?
                new ObjectParameter("xml_RentalMaintenanceDetails", xml_RentalMaintenanceDetails) :
                new ObjectParameter("xml_RentalMaintenanceDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalMaintenanceDetails>("InsertTbt_RentalMaintenanceDetails", xml_RentalMaintenanceDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_RentalMaintenanceDetails> InsertTbt_RentalMaintenanceDetails(string xml_RentalMaintenanceDetails, MergeOption mergeOption)
        {
            var xml_RentalMaintenanceDetailsParameter = xml_RentalMaintenanceDetails != null ?
                new ObjectParameter("xml_RentalMaintenanceDetails", xml_RentalMaintenanceDetails) :
                new ObjectParameter("xml_RentalMaintenanceDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalMaintenanceDetails>("InsertTbt_RentalMaintenanceDetails", mergeOption, xml_RentalMaintenanceDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_RentalOperationType> InsertTbt_RentalOperationType(string pContractCode, string pOCC, string pOperationTypeCode, Nullable<System.DateTime> pProcessDateTime, string pEmpNo)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pOperationTypeCodeParameter = pOperationTypeCode != null ?
                new ObjectParameter("pOperationTypeCode", pOperationTypeCode) :
                new ObjectParameter("pOperationTypeCode", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalOperationType>("InsertTbt_RentalOperationType", pContractCodeParameter, pOCCParameter, pOperationTypeCodeParameter, pProcessDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<tbt_RentalOperationType> InsertTbt_RentalOperationType(string pContractCode, string pOCC, string pOperationTypeCode, Nullable<System.DateTime> pProcessDateTime, string pEmpNo, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pOperationTypeCodeParameter = pOperationTypeCode != null ?
                new ObjectParameter("pOperationTypeCode", pOperationTypeCode) :
                new ObjectParameter("pOperationTypeCode", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalOperationType>("InsertTbt_RentalOperationType", mergeOption, pContractCodeParameter, pOCCParameter, pOperationTypeCodeParameter, pProcessDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstSubcontractor> InsertTbt_RentalInstSubContractor(string pContractCode, string pOCC, string pSubcontractorCode, Nullable<System.DateTime> pProcessDateTime, string pUser)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSubcontractorCodeParameter = pSubcontractorCode != null ?
                new ObjectParameter("pSubcontractorCode", pSubcontractorCode) :
                new ObjectParameter("pSubcontractorCode", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstSubcontractor>("InsertTbt_RentalInstSubContractor", pContractCodeParameter, pOCCParameter, pSubcontractorCodeParameter, pProcessDateTimeParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbt_RentalInstSubcontractor> InsertTbt_RentalInstSubContractor(string pContractCode, string pOCC, string pSubcontractorCode, Nullable<System.DateTime> pProcessDateTime, string pUser, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pSubcontractorCodeParameter = pSubcontractorCode != null ?
                new ObjectParameter("pSubcontractorCode", pSubcontractorCode) :
                new ObjectParameter("pSubcontractorCode", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pUserParameter = pUser != null ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalInstSubcontractor>("InsertTbt_RentalInstSubContractor", mergeOption, pContractCodeParameter, pOCCParameter, pSubcontractorCodeParameter, pProcessDateTimeParameter, pUserParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetUnsentNotifyEmail(string pEmailType, Nullable<bool> pSendFlag)
        {
            var pEmailTypeParameter = pEmailType != null ?
                new ObjectParameter("pEmailType", pEmailType) :
                new ObjectParameter("pEmailType", typeof(string));
    
            var pSendFlagParameter = pSendFlag.HasValue ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetUnsentNotifyEmail", pEmailTypeParameter, pSendFlagParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetUnsentNotifyEmail(string pEmailType, Nullable<bool> pSendFlag, MergeOption mergeOption)
        {
            var pEmailTypeParameter = pEmailType != null ?
                new ObjectParameter("pEmailType", pEmailType) :
                new ObjectParameter("pEmailType", typeof(string));
    
            var pSendFlagParameter = pSendFlag.HasValue ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetUnsentNotifyEmail", mergeOption, pEmailTypeParameter, pSendFlagParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> UpdateTbt_ContractEmail(string xml_doTbtContractEmail)
        {
            var xml_doTbtContractEmailParameter = xml_doTbtContractEmail != null ?
                new ObjectParameter("xml_doTbtContractEmail", xml_doTbtContractEmail) :
                new ObjectParameter("xml_doTbtContractEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("UpdateTbt_ContractEmail", xml_doTbtContractEmailParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> UpdateTbt_ContractEmail(string xml_doTbtContractEmail, MergeOption mergeOption)
        {
            var xml_doTbtContractEmailParameter = xml_doTbtContractEmail != null ?
                new ObjectParameter("xml_doTbtContractEmail", xml_doTbtContractEmail) :
                new ObjectParameter("xml_doTbtContractEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("UpdateTbt_ContractEmail", mergeOption, xml_doTbtContractEmailParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> DeleteTbt_ContractEmail(Nullable<int> pContractEmailID)
        {
            var pContractEmailIDParameter = pContractEmailID.HasValue ?
                new ObjectParameter("pContractEmailID", pContractEmailID) :
                new ObjectParameter("pContractEmailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("DeleteTbt_ContractEmail", pContractEmailIDParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> DeleteTbt_ContractEmail(Nullable<int> pContractEmailID, MergeOption mergeOption)
        {
            var pContractEmailIDParameter = pContractEmailID.HasValue ?
                new ObjectParameter("pContractEmailID", pContractEmailID) :
                new ObjectParameter("pContractEmailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("DeleteTbt_ContractEmail", mergeOption, pContractEmailIDParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetTbt_ContractEmail(Nullable<int> pContractEmailID)
        {
            var pContractEmailIDParameter = pContractEmailID.HasValue ?
                new ObjectParameter("pContractEmailID", pContractEmailID) :
                new ObjectParameter("pContractEmailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetTbt_ContractEmail", pContractEmailIDParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetTbt_ContractEmail(Nullable<int> pContractEmailID, MergeOption mergeOption)
        {
            var pContractEmailIDParameter = pContractEmailID.HasValue ?
                new ObjectParameter("pContractEmailID", pContractEmailID) :
                new ObjectParameter("pContractEmailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetTbt_ContractEmail", mergeOption, pContractEmailIDParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> DeleteMACheckup(string pContractCode, Nullable<System.DateTime> pMaintenanceDate, Nullable<bool> pDeleteFlag)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMaintenanceDateParameter = pMaintenanceDate.HasValue ?
                new ObjectParameter("pMaintenanceDate", pMaintenanceDate) :
                new ObjectParameter("pMaintenanceDate", typeof(System.DateTime));
    
            var pDeleteFlagParameter = pDeleteFlag.HasValue ?
                new ObjectParameter("pDeleteFlag", pDeleteFlag) :
                new ObjectParameter("pDeleteFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("DeleteMACheckup", pContractCodeParameter, pMaintenanceDateParameter, pDeleteFlagParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> DeleteMACheckup(string pContractCode, Nullable<System.DateTime> pMaintenanceDate, Nullable<bool> pDeleteFlag, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMaintenanceDateParameter = pMaintenanceDate.HasValue ?
                new ObjectParameter("pMaintenanceDate", pMaintenanceDate) :
                new ObjectParameter("pMaintenanceDate", typeof(System.DateTime));
    
            var pDeleteFlagParameter = pDeleteFlag.HasValue ?
                new ObjectParameter("pDeleteFlag", pDeleteFlag) :
                new ObjectParameter("pDeleteFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("DeleteMACheckup", mergeOption, pContractCodeParameter, pMaintenanceDateParameter, pDeleteFlagParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> DeleteMACheckupDetail(string pContractCode, Nullable<System.DateTime> pMaintenanceDate, Nullable<bool> pDeleteFlag)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMaintenanceDateParameter = pMaintenanceDate.HasValue ?
                new ObjectParameter("pMaintenanceDate", pMaintenanceDate) :
                new ObjectParameter("pMaintenanceDate", typeof(System.DateTime));
    
            var pDeleteFlagParameter = pDeleteFlag.HasValue ?
                new ObjectParameter("pDeleteFlag", pDeleteFlag) :
                new ObjectParameter("pDeleteFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("DeleteMACheckupDetail", pContractCodeParameter, pMaintenanceDateParameter, pDeleteFlagParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> DeleteMACheckupDetail(string pContractCode, Nullable<System.DateTime> pMaintenanceDate, Nullable<bool> pDeleteFlag, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMaintenanceDateParameter = pMaintenanceDate.HasValue ?
                new ObjectParameter("pMaintenanceDate", pMaintenanceDate) :
                new ObjectParameter("pMaintenanceDate", typeof(System.DateTime));
    
            var pDeleteFlagParameter = pDeleteFlag.HasValue ?
                new ObjectParameter("pDeleteFlag", pDeleteFlag) :
                new ObjectParameter("pDeleteFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("DeleteMACheckupDetail", mergeOption, pContractCodeParameter, pMaintenanceDateParameter, pDeleteFlagParameter);
        }
    
        public virtual ObjectResult<doCreateMASchedule> GetMAforCreateScheduleByMA(string pContractCode, string pC_RELATION_TYPE_MA, Nullable<bool> pLatestOCCFlag)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pC_RELATION_TYPE_MAParameter = pC_RELATION_TYPE_MA != null ?
                new ObjectParameter("pC_RELATION_TYPE_MA", pC_RELATION_TYPE_MA) :
                new ObjectParameter("pC_RELATION_TYPE_MA", typeof(string));
    
            var pLatestOCCFlagParameter = pLatestOCCFlag.HasValue ?
                new ObjectParameter("pLatestOCCFlag", pLatestOCCFlag) :
                new ObjectParameter("pLatestOCCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doCreateMASchedule>("GetMAforCreateScheduleByMA", pContractCodeParameter, pC_RELATION_TYPE_MAParameter, pLatestOCCFlagParameter);
        }
    
        public virtual ObjectResult<doCreateMAScheduleDetail> GetMAforCreateScheduleDetailByMA(string pContractCode, string pC_RELATION_TYPE_MA, Nullable<bool> pLatestOCCFlag)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pC_RELATION_TYPE_MAParameter = pC_RELATION_TYPE_MA != null ?
                new ObjectParameter("pC_RELATION_TYPE_MA", pC_RELATION_TYPE_MA) :
                new ObjectParameter("pC_RELATION_TYPE_MA", typeof(string));
    
            var pLatestOCCFlagParameter = pLatestOCCFlag.HasValue ?
                new ObjectParameter("pLatestOCCFlag", pLatestOCCFlag) :
                new ObjectParameter("pLatestOCCFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doCreateMAScheduleDetail>("GetMAforCreateScheduleDetailByMA", pContractCodeParameter, pC_RELATION_TYPE_MAParameter, pLatestOCCFlagParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> InsertTbt_MaintenanceCheckup(string xml_MaintenanceCheckup)
        {
            var xml_MaintenanceCheckupParameter = xml_MaintenanceCheckup != null ?
                new ObjectParameter("xml_MaintenanceCheckup", xml_MaintenanceCheckup) :
                new ObjectParameter("xml_MaintenanceCheckup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("InsertTbt_MaintenanceCheckup", xml_MaintenanceCheckupParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> InsertTbt_MaintenanceCheckup(string xml_MaintenanceCheckup, MergeOption mergeOption)
        {
            var xml_MaintenanceCheckupParameter = xml_MaintenanceCheckup != null ?
                new ObjectParameter("xml_MaintenanceCheckup", xml_MaintenanceCheckup) :
                new ObjectParameter("xml_MaintenanceCheckup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("InsertTbt_MaintenanceCheckup", mergeOption, xml_MaintenanceCheckupParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> InsertTbt_MaintenanceCheckupDetails(string xml_MaintenanceCheckupDetails)
        {
            var xml_MaintenanceCheckupDetailsParameter = xml_MaintenanceCheckupDetails != null ?
                new ObjectParameter("xml_MaintenanceCheckupDetails", xml_MaintenanceCheckupDetails) :
                new ObjectParameter("xml_MaintenanceCheckupDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("InsertTbt_MaintenanceCheckupDetails", xml_MaintenanceCheckupDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> InsertTbt_MaintenanceCheckupDetails(string xml_MaintenanceCheckupDetails, MergeOption mergeOption)
        {
            var xml_MaintenanceCheckupDetailsParameter = xml_MaintenanceCheckupDetails != null ?
                new ObjectParameter("xml_MaintenanceCheckupDetails", xml_MaintenanceCheckupDetails) :
                new ObjectParameter("xml_MaintenanceCheckupDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("InsertTbt_MaintenanceCheckupDetails", mergeOption, xml_MaintenanceCheckupDetailsParameter);
        }
    
        public virtual ObjectResult<doMaintenanceCheckupInformation> GetMaintenanceCheckupInformation(string pContractCode, string pProductCode, Nullable<System.DateTime> pInstructionDate)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProductCodeParameter = pProductCode != null ?
                new ObjectParameter("pProductCode", pProductCode) :
                new ObjectParameter("pProductCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doMaintenanceCheckupInformation>("GetMaintenanceCheckupInformation", pContractCodeParameter, pProductCodeParameter, pInstructionDateParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> GetTbt_MaintenanceCheckup(string pContractCode, string pProductCode, Nullable<System.DateTime> pInstructionDate)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProductCodeParameter = pProductCode != null ?
                new ObjectParameter("pProductCode", pProductCode) :
                new ObjectParameter("pProductCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("GetTbt_MaintenanceCheckup", pContractCodeParameter, pProductCodeParameter, pInstructionDateParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> GetTbt_MaintenanceCheckup(string pContractCode, string pProductCode, Nullable<System.DateTime> pInstructionDate, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProductCodeParameter = pProductCode != null ?
                new ObjectParameter("pProductCode", pProductCode) :
                new ObjectParameter("pProductCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("GetTbt_MaintenanceCheckup", mergeOption, pContractCodeParameter, pProductCodeParameter, pInstructionDateParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> GetTbt_MaintenanceCheckupDetails(string pContractCode, string pProductCode, Nullable<System.DateTime> pInstructionDate, string pMATargetContractCode, string pMATargetOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProductCodeParameter = pProductCode != null ?
                new ObjectParameter("pProductCode", pProductCode) :
                new ObjectParameter("pProductCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            var pMATargetContractCodeParameter = pMATargetContractCode != null ?
                new ObjectParameter("pMATargetContractCode", pMATargetContractCode) :
                new ObjectParameter("pMATargetContractCode", typeof(string));
    
            var pMATargetOCCParameter = pMATargetOCC != null ?
                new ObjectParameter("pMATargetOCC", pMATargetOCC) :
                new ObjectParameter("pMATargetOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("GetTbt_MaintenanceCheckupDetails", pContractCodeParameter, pProductCodeParameter, pInstructionDateParameter, pMATargetContractCodeParameter, pMATargetOCCParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> GetTbt_MaintenanceCheckupDetails(string pContractCode, string pProductCode, Nullable<System.DateTime> pInstructionDate, string pMATargetContractCode, string pMATargetOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProductCodeParameter = pProductCode != null ?
                new ObjectParameter("pProductCode", pProductCode) :
                new ObjectParameter("pProductCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            var pMATargetContractCodeParameter = pMATargetContractCode != null ?
                new ObjectParameter("pMATargetContractCode", pMATargetContractCode) :
                new ObjectParameter("pMATargetContractCode", typeof(string));
    
            var pMATargetOCCParameter = pMATargetOCC != null ?
                new ObjectParameter("pMATargetOCC", pMATargetOCC) :
                new ObjectParameter("pMATargetOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("GetTbt_MaintenanceCheckupDetails", mergeOption, pContractCodeParameter, pProductCodeParameter, pInstructionDateParameter, pMATargetContractCodeParameter, pMATargetOCCParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsLastResultToRegister(string pContractCode, string pProductCode, Nullable<System.DateTime> pInstructionDate)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProductCodeParameter = pProductCode != null ?
                new ObjectParameter("pProductCode", pProductCode) :
                new ObjectParameter("pProductCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsLastResultToRegister", pContractCodeParameter, pProductCodeParameter, pInstructionDateParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> UpdateTbt_MaintenanceCheckup(string xml_doTbtMaintenanceCheckup)
        {
            var xml_doTbtMaintenanceCheckupParameter = xml_doTbtMaintenanceCheckup != null ?
                new ObjectParameter("xml_doTbtMaintenanceCheckup", xml_doTbtMaintenanceCheckup) :
                new ObjectParameter("xml_doTbtMaintenanceCheckup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("UpdateTbt_MaintenanceCheckup", xml_doTbtMaintenanceCheckupParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckup> UpdateTbt_MaintenanceCheckup(string xml_doTbtMaintenanceCheckup, MergeOption mergeOption)
        {
            var xml_doTbtMaintenanceCheckupParameter = xml_doTbtMaintenanceCheckup != null ?
                new ObjectParameter("xml_doTbtMaintenanceCheckup", xml_doTbtMaintenanceCheckup) :
                new ObjectParameter("xml_doTbtMaintenanceCheckup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckup>("UpdateTbt_MaintenanceCheckup", mergeOption, xml_doTbtMaintenanceCheckupParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> UpdateTbt_MaintenanceCheckupDetails(string xml_doTbtMaintenanceCheckupDetails)
        {
            var xml_doTbtMaintenanceCheckupDetailsParameter = xml_doTbtMaintenanceCheckupDetails != null ?
                new ObjectParameter("xml_doTbtMaintenanceCheckupDetails", xml_doTbtMaintenanceCheckupDetails) :
                new ObjectParameter("xml_doTbtMaintenanceCheckupDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("UpdateTbt_MaintenanceCheckupDetails", xml_doTbtMaintenanceCheckupDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_MaintenanceCheckupDetails> UpdateTbt_MaintenanceCheckupDetails(string xml_doTbtMaintenanceCheckupDetails, MergeOption mergeOption)
        {
            var xml_doTbtMaintenanceCheckupDetailsParameter = xml_doTbtMaintenanceCheckupDetails != null ?
                new ObjectParameter("xml_doTbtMaintenanceCheckupDetails", xml_doTbtMaintenanceCheckupDetails) :
                new ObjectParameter("xml_doTbtMaintenanceCheckupDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_MaintenanceCheckupDetails>("UpdateTbt_MaintenanceCheckupDetails", mergeOption, xml_doTbtMaintenanceCheckupDetailsParameter);
        }
    
        public virtual ObjectResult<doSaleContractBasicInformation> GetSaleContractBasicInformation(string strContractCode, Nullable<bool> isLastOCCFlag, string strOCC)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var isLastOCCFlagParameter = isLastOCCFlag.HasValue ?
                new ObjectParameter("isLastOCCFlag", isLastOCCFlag) :
                new ObjectParameter("isLastOCCFlag", typeof(bool));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doSaleContractBasicInformation>("GetSaleContractBasicInformation", strContractCodeParameter, isLastOCCFlagParameter, strOCCParameter);
        }
    
        public virtual ObjectResult<tbm_SubContractor> GetTbm_SubContractor(string pSubContractorCode)
        {
            var pSubContractorCodeParameter = pSubContractorCode != null ?
                new ObjectParameter("pSubContractorCode", pSubContractorCode) :
                new ObjectParameter("pSubContractorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbm_SubContractor>("GetTbm_SubContractor", pSubContractorCodeParameter);
        }
    
        public virtual ObjectResult<tbm_SubContractor> GetTbm_SubContractor(string pSubContractorCode, MergeOption mergeOption)
        {
            var pSubContractorCodeParameter = pSubContractorCode != null ?
                new ObjectParameter("pSubContractorCode", pSubContractorCode) :
                new ObjectParameter("pSubContractorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbm_SubContractor>("GetTbm_SubContractor", mergeOption, pSubContractorCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsAllResultRegistered(string pContractCode, Nullable<System.DateTime> pInstructionDate)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsAllResultRegistered", pContractCodeParameter, pInstructionDateParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> UpdateTbt_RentalSentryGuard(string xml_doTbtRentalSentryGuard)
        {
            var xml_doTbtRentalSentryGuardParameter = xml_doTbtRentalSentryGuard != null ?
                new ObjectParameter("xml_doTbtRentalSentryGuard", xml_doTbtRentalSentryGuard) :
                new ObjectParameter("xml_doTbtRentalSentryGuard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("UpdateTbt_RentalSentryGuard", xml_doTbtRentalSentryGuardParameter);
        }
    
        public virtual ObjectResult<tbt_RentalSentryGuard> UpdateTbt_RentalSentryGuard(string xml_doTbtRentalSentryGuard, MergeOption mergeOption)
        {
            var xml_doTbtRentalSentryGuardParameter = xml_doTbtRentalSentryGuard != null ?
                new ObjectParameter("xml_doTbtRentalSentryGuard", xml_doTbtRentalSentryGuard) :
                new ObjectParameter("xml_doTbtRentalSentryGuard", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RentalSentryGuard>("UpdateTbt_RentalSentryGuard", mergeOption, xml_doTbtRentalSentryGuardParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> UpdateTbt_CancelContractMemoDetail(string xml_doTbtCancelContractMemoDetail)
        {
            var xml_doTbtCancelContractMemoDetailParameter = xml_doTbtCancelContractMemoDetail != null ?
                new ObjectParameter("xml_doTbtCancelContractMemoDetail", xml_doTbtCancelContractMemoDetail) :
                new ObjectParameter("xml_doTbtCancelContractMemoDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("UpdateTbt_CancelContractMemoDetail", xml_doTbtCancelContractMemoDetailParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemoDetail> UpdateTbt_CancelContractMemoDetail(string xml_doTbtCancelContractMemoDetail, MergeOption mergeOption)
        {
            var xml_doTbtCancelContractMemoDetailParameter = xml_doTbtCancelContractMemoDetail != null ?
                new ObjectParameter("xml_doTbtCancelContractMemoDetail", xml_doTbtCancelContractMemoDetail) :
                new ObjectParameter("xml_doTbtCancelContractMemoDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemoDetail>("UpdateTbt_CancelContractMemoDetail", mergeOption, xml_doTbtCancelContractMemoDetailParameter);
        }
    
        public virtual ObjectResult<dtSearchMACheckupResult> SearchAlarmPeriodMaintenance(string pProductName, string pSiteName, string pEmployeeName, string pC_PROD_TYPE_AL, string pC_PROD_TYPE_RENTAL_SALE, string pOperationOfficeCode, Nullable<System.DateTime> pInstructionDateFrom, Nullable<System.DateTime> pInstructionDateTo, string pUserCode, string pContractCode, string pMACheckupNo, Nullable<bool> pHasCheckupResult, Nullable<bool> pHaveInstrumentMalfunction, Nullable<bool> pNeedToContactSalesman)
        {
            var pProductNameParameter = pProductName != null ?
                new ObjectParameter("pProductName", pProductName) :
                new ObjectParameter("pProductName", typeof(string));
    
            var pSiteNameParameter = pSiteName != null ?
                new ObjectParameter("pSiteName", pSiteName) :
                new ObjectParameter("pSiteName", typeof(string));
    
            var pEmployeeNameParameter = pEmployeeName != null ?
                new ObjectParameter("pEmployeeName", pEmployeeName) :
                new ObjectParameter("pEmployeeName", typeof(string));
    
            var pC_PROD_TYPE_ALParameter = pC_PROD_TYPE_AL != null ?
                new ObjectParameter("pC_PROD_TYPE_AL", pC_PROD_TYPE_AL) :
                new ObjectParameter("pC_PROD_TYPE_AL", typeof(string));
    
            var pC_PROD_TYPE_RENTAL_SALEParameter = pC_PROD_TYPE_RENTAL_SALE != null ?
                new ObjectParameter("pC_PROD_TYPE_RENTAL_SALE", pC_PROD_TYPE_RENTAL_SALE) :
                new ObjectParameter("pC_PROD_TYPE_RENTAL_SALE", typeof(string));
    
            var pOperationOfficeCodeParameter = pOperationOfficeCode != null ?
                new ObjectParameter("pOperationOfficeCode", pOperationOfficeCode) :
                new ObjectParameter("pOperationOfficeCode", typeof(string));
    
            var pInstructionDateFromParameter = pInstructionDateFrom.HasValue ?
                new ObjectParameter("pInstructionDateFrom", pInstructionDateFrom) :
                new ObjectParameter("pInstructionDateFrom", typeof(System.DateTime));
    
            var pInstructionDateToParameter = pInstructionDateTo.HasValue ?
                new ObjectParameter("pInstructionDateTo", pInstructionDateTo) :
                new ObjectParameter("pInstructionDateTo", typeof(System.DateTime));
    
            var pUserCodeParameter = pUserCode != null ?
                new ObjectParameter("pUserCode", pUserCode) :
                new ObjectParameter("pUserCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMACheckupNoParameter = pMACheckupNo != null ?
                new ObjectParameter("pMACheckupNo", pMACheckupNo) :
                new ObjectParameter("pMACheckupNo", typeof(string));
    
            var pHasCheckupResultParameter = pHasCheckupResult.HasValue ?
                new ObjectParameter("pHasCheckupResult", pHasCheckupResult) :
                new ObjectParameter("pHasCheckupResult", typeof(bool));
    
            var pHaveInstrumentMalfunctionParameter = pHaveInstrumentMalfunction.HasValue ?
                new ObjectParameter("pHaveInstrumentMalfunction", pHaveInstrumentMalfunction) :
                new ObjectParameter("pHaveInstrumentMalfunction", typeof(bool));
    
            var pNeedToContactSalesmanParameter = pNeedToContactSalesman.HasValue ?
                new ObjectParameter("pNeedToContactSalesman", pNeedToContactSalesman) :
                new ObjectParameter("pNeedToContactSalesman", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSearchMACheckupResult>("SearchAlarmPeriodMaintenance", pProductNameParameter, pSiteNameParameter, pEmployeeNameParameter, pC_PROD_TYPE_ALParameter, pC_PROD_TYPE_RENTAL_SALEParameter, pOperationOfficeCodeParameter, pInstructionDateFromParameter, pInstructionDateToParameter, pUserCodeParameter, pContractCodeParameter, pMACheckupNoParameter, pHasCheckupResultParameter, pHaveInstrumentMalfunctionParameter, pNeedToContactSalesmanParameter);
        }
    
        public virtual ObjectResult<dtSearchMACheckupResult> SearchSaleMaintenance(string pProductName, string pSiteName, string pEmployeeName, string pOperationOfficeCode, Nullable<System.DateTime> pInstructionDateFrom, Nullable<System.DateTime> pInstructionDateTo, string pUserCode, string pContractCode, string pMACheckupNo, Nullable<bool> pHasCheckupResult, Nullable<bool> pHaveInstrumentMalfunction, Nullable<bool> pNeedToContactSalesman, Nullable<bool> pFLAG_ON, string pC_PROD_TYPE_MA)
        {
            var pProductNameParameter = pProductName != null ?
                new ObjectParameter("pProductName", pProductName) :
                new ObjectParameter("pProductName", typeof(string));
    
            var pSiteNameParameter = pSiteName != null ?
                new ObjectParameter("pSiteName", pSiteName) :
                new ObjectParameter("pSiteName", typeof(string));
    
            var pEmployeeNameParameter = pEmployeeName != null ?
                new ObjectParameter("pEmployeeName", pEmployeeName) :
                new ObjectParameter("pEmployeeName", typeof(string));
    
            var pOperationOfficeCodeParameter = pOperationOfficeCode != null ?
                new ObjectParameter("pOperationOfficeCode", pOperationOfficeCode) :
                new ObjectParameter("pOperationOfficeCode", typeof(string));
    
            var pInstructionDateFromParameter = pInstructionDateFrom.HasValue ?
                new ObjectParameter("pInstructionDateFrom", pInstructionDateFrom) :
                new ObjectParameter("pInstructionDateFrom", typeof(System.DateTime));
    
            var pInstructionDateToParameter = pInstructionDateTo.HasValue ?
                new ObjectParameter("pInstructionDateTo", pInstructionDateTo) :
                new ObjectParameter("pInstructionDateTo", typeof(System.DateTime));
    
            var pUserCodeParameter = pUserCode != null ?
                new ObjectParameter("pUserCode", pUserCode) :
                new ObjectParameter("pUserCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMACheckupNoParameter = pMACheckupNo != null ?
                new ObjectParameter("pMACheckupNo", pMACheckupNo) :
                new ObjectParameter("pMACheckupNo", typeof(string));
    
            var pHasCheckupResultParameter = pHasCheckupResult.HasValue ?
                new ObjectParameter("pHasCheckupResult", pHasCheckupResult) :
                new ObjectParameter("pHasCheckupResult", typeof(bool));
    
            var pHaveInstrumentMalfunctionParameter = pHaveInstrumentMalfunction.HasValue ?
                new ObjectParameter("pHaveInstrumentMalfunction", pHaveInstrumentMalfunction) :
                new ObjectParameter("pHaveInstrumentMalfunction", typeof(bool));
    
            var pNeedToContactSalesmanParameter = pNeedToContactSalesman.HasValue ?
                new ObjectParameter("pNeedToContactSalesman", pNeedToContactSalesman) :
                new ObjectParameter("pNeedToContactSalesman", typeof(bool));
    
            var pFLAG_ONParameter = pFLAG_ON.HasValue ?
                new ObjectParameter("pFLAG_ON", pFLAG_ON) :
                new ObjectParameter("pFLAG_ON", typeof(bool));
    
            var pC_PROD_TYPE_MAParameter = pC_PROD_TYPE_MA != null ?
                new ObjectParameter("pC_PROD_TYPE_MA", pC_PROD_TYPE_MA) :
                new ObjectParameter("pC_PROD_TYPE_MA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSearchMACheckupResult>("SearchSaleMaintenance", pProductNameParameter, pSiteNameParameter, pEmployeeNameParameter, pOperationOfficeCodeParameter, pInstructionDateFromParameter, pInstructionDateToParameter, pUserCodeParameter, pContractCodeParameter, pMACheckupNoParameter, pHasCheckupResultParameter, pHaveInstrumentMalfunctionParameter, pNeedToContactSalesmanParameter, pFLAG_ONParameter, pC_PROD_TYPE_MAParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByContractCodeOCCBillingClientCodeBillingOfficeCode(string contractCode, string oCC, string billingClientCode, string billingOfficeCode)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var billingClientCodeParameter = billingClientCode != null ?
                new ObjectParameter("BillingClientCode", billingClientCode) :
                new ObjectParameter("BillingClientCode", typeof(string));
    
            var billingOfficeCodeParameter = billingOfficeCode != null ?
                new ObjectParameter("BillingOfficeCode", billingOfficeCode) :
                new ObjectParameter("BillingOfficeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByContractCodeOCCBillingClientCodeBillingOfficeCode", contractCodeParameter, oCCParameter, billingClientCodeParameter, billingOfficeCodeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteTbt_BillingTemp_ByContractCodeOCCBillingClientCodeBillingOfficeCode(string contractCode, string oCC, string billingClientCode, string billingOfficeCode, MergeOption mergeOption)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var billingClientCodeParameter = billingClientCode != null ?
                new ObjectParameter("BillingClientCode", billingClientCode) :
                new ObjectParameter("BillingClientCode", typeof(string));
    
            var billingOfficeCodeParameter = billingOfficeCode != null ?
                new ObjectParameter("BillingOfficeCode", billingOfficeCode) :
                new ObjectParameter("BillingOfficeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteTbt_BillingTemp_ByContractCodeOCCBillingClientCodeBillingOfficeCode", mergeOption, contractCodeParameter, oCCParameter, billingClientCodeParameter, billingOfficeCodeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTempByKeyXML(string xml_doTbtUpdateTbtBillingTemp)
        {
            var xml_doTbtUpdateTbtBillingTempParameter = xml_doTbtUpdateTbtBillingTemp != null ?
                new ObjectParameter("xml_doTbtUpdateTbtBillingTemp", xml_doTbtUpdateTbtBillingTemp) :
                new ObjectParameter("xml_doTbtUpdateTbtBillingTemp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTempByKeyXML", xml_doTbtUpdateTbtBillingTempParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> UpdateTbt_BillingTempByKeyXML(string xml_doTbtUpdateTbtBillingTemp, MergeOption mergeOption)
        {
            var xml_doTbtUpdateTbtBillingTempParameter = xml_doTbtUpdateTbtBillingTemp != null ?
                new ObjectParameter("xml_doTbtUpdateTbtBillingTemp", xml_doTbtUpdateTbtBillingTemp) :
                new ObjectParameter("xml_doTbtUpdateTbtBillingTemp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("UpdateTbt_BillingTempByKeyXML", mergeOption, xml_doTbtUpdateTbtBillingTempParameter);
        }
    
        public virtual ObjectResult<string> GetLastMACheckupNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLastMACheckupNo");
        }
    
        public virtual ObjectResult<tbt_RelationType> InsertTbt_RelationType(string xml_RelationType)
        {
            var xml_RelationTypeParameter = xml_RelationType != null ?
                new ObjectParameter("xml_RelationType", xml_RelationType) :
                new ObjectParameter("xml_RelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("InsertTbt_RelationType", xml_RelationTypeParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> InsertTbt_RelationType(string xml_RelationType, MergeOption mergeOption)
        {
            var xml_RelationTypeParameter = xml_RelationType != null ?
                new ObjectParameter("xml_RelationType", xml_RelationType) :
                new ObjectParameter("xml_RelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("InsertTbt_RelationType", mergeOption, xml_RelationTypeParameter);
        }
    
        public virtual ObjectResult<doProjectContractDetail> GetContractDetailList(string pProjectCode, string pC_DOC_AUDIT_RESULT)
        {
            var pProjectCodeParameter = pProjectCode != null ?
                new ObjectParameter("pProjectCode", pProjectCode) :
                new ObjectParameter("pProjectCode", typeof(string));
    
            var pC_DOC_AUDIT_RESULTParameter = pC_DOC_AUDIT_RESULT != null ?
                new ObjectParameter("pC_DOC_AUDIT_RESULT", pC_DOC_AUDIT_RESULT) :
                new ObjectParameter("pC_DOC_AUDIT_RESULT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doProjectContractDetail>("GetContractDetailList", pProjectCodeParameter, pC_DOC_AUDIT_RESULTParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsSomeResultRegistered(string pContractCode, Nullable<System.DateTime> pInstructionDate)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pInstructionDateParameter = pInstructionDate.HasValue ?
                new ObjectParameter("pInstructionDate", pInstructionDate) :
                new ObjectParameter("pInstructionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsSomeResultRegistered", pContractCodeParameter, pInstructionDateParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBillingTarget> GetTbt_DraftRentalBillingTarget(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBillingTarget>("GetTbt_DraftRentalBillingTarget", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBillingTarget> GetTbt_DraftRentalBillingTarget(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBillingTarget>("GetTbt_DraftRentalBillingTarget", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalContract> GetTbt_DraftRentalContract(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalContract>("GetTbt_DraftRentalContract", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalContract> GetTbt_DraftRentalContract(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalContract>("GetTbt_DraftRentalContract", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalEmail> GetTbt_DraftRentalEmail(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalEmail>("GetTbt_DraftRentalEmail", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalEmail> GetTbt_DraftRentalEmail(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalEmail>("GetTbt_DraftRentalEmail", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalInstrument> GetTbt_DraftRentalInstrument(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalInstrument>("GetTbt_DraftRentalInstrument", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalInstrument> GetTbt_DraftRentalInstrument(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalInstrument>("GetTbt_DraftRentalInstrument", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalMaintenanceDetails> GetTbt_DraftRentalMaintenanceDetails(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalMaintenanceDetails>("GetTbt_DraftRentalMaintenanceDetails", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalMaintenanceDetails> GetTbt_DraftRentalMaintenanceDetails(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalMaintenanceDetails>("GetTbt_DraftRentalMaintenanceDetails", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalOperationType> GetTbt_DraftRentalOperationType(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalOperationType>("GetTbt_DraftRentalOperationType", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalOperationType> GetTbt_DraftRentalOperationType(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalOperationType>("GetTbt_DraftRentalOperationType", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleContract> GetTbt_DraftSaleContract(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleContract>("GetTbt_DraftSaleContract", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleContract> GetTbt_DraftSaleContract(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleContract>("GetTbt_DraftSaleContract", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> GetLastCancelContractMemo(string strContractCode, Nullable<bool> isQuotation)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var isQuotationParameter = isQuotation.HasValue ?
                new ObjectParameter("isQuotation", isQuotation) :
                new ObjectParameter("isQuotation", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("GetLastCancelContractMemo", strContractCodeParameter, isQuotationParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> GetLastCancelContractMemo(string strContractCode, Nullable<bool> isQuotation, MergeOption mergeOption)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var isQuotationParameter = isQuotation.HasValue ?
                new ObjectParameter("isQuotation", isQuotation) :
                new ObjectParameter("isQuotation", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("GetLastCancelContractMemo", mergeOption, strContractCodeParameter, isQuotationParameter);
        }
    
        public virtual ObjectResult<string> GetPreviousImplementedOCC(string paramContractCode, string paramOCC, Nullable<bool> paramFLAGON)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramOCCParameter = paramOCC != null ?
                new ObjectParameter("paramOCC", paramOCC) :
                new ObjectParameter("paramOCC", typeof(string));
    
            var paramFLAGONParameter = paramFLAGON.HasValue ?
                new ObjectParameter("paramFLAGON", paramFLAGON) :
                new ObjectParameter("paramFLAGON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPreviousImplementedOCC", paramContractCodeParameter, paramOCCParameter, paramFLAGONParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> GetTbt_IncidentRole(Nullable<int> incidentID, string empNo)
        {
            var incidentIDParameter = incidentID.HasValue ?
                new ObjectParameter("incidentID", incidentID) :
                new ObjectParameter("incidentID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("GetTbt_IncidentRole", incidentIDParameter, empNoParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> GetTbt_IncidentRole(Nullable<int> incidentID, string empNo, MergeOption mergeOption)
        {
            var incidentIDParameter = incidentID.HasValue ?
                new ObjectParameter("incidentID", incidentID) :
                new ObjectParameter("incidentID", typeof(int));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("GetTbt_IncidentRole", mergeOption, incidentIDParameter, empNoParameter);
        }
    
        public virtual ObjectResult<dtIncident> GetIncidentData(Nullable<int> incidentID, string c_INCIDENT_RELEVANT_TYPE_CONTRACT, string c_INCIDENT_RELEVANT_TYPE_CUSTOMER, string c_INCIDENT_RELEVANT_TYPE_SITE, string c_INCIDENT_RELEVANT_TYPE_PROJECT, string c_INCIDENT_TYPE, string c_REASON_TYPE)
        {
            var incidentIDParameter = incidentID.HasValue ?
                new ObjectParameter("incidentID", incidentID) :
                new ObjectParameter("incidentID", typeof(int));
    
            var c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter = c_INCIDENT_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", c_INCIDENT_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_CUSTOMERParameter = c_INCIDENT_RELEVANT_TYPE_CUSTOMER != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CUSTOMER", c_INCIDENT_RELEVANT_TYPE_CUSTOMER) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CUSTOMER", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_SITEParameter = c_INCIDENT_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", c_INCIDENT_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_PROJECTParameter = c_INCIDENT_RELEVANT_TYPE_PROJECT != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_PROJECT", c_INCIDENT_RELEVANT_TYPE_PROJECT) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_PROJECT", typeof(string));
    
            var c_INCIDENT_TYPEParameter = c_INCIDENT_TYPE != null ?
                new ObjectParameter("C_INCIDENT_TYPE", c_INCIDENT_TYPE) :
                new ObjectParameter("C_INCIDENT_TYPE", typeof(string));
    
            var c_REASON_TYPEParameter = c_REASON_TYPE != null ?
                new ObjectParameter("C_REASON_TYPE", c_REASON_TYPE) :
                new ObjectParameter("C_REASON_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncident>("GetIncidentData", incidentIDParameter, c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter, c_INCIDENT_RELEVANT_TYPE_CUSTOMERParameter, c_INCIDENT_RELEVANT_TYPE_SITEParameter, c_INCIDENT_RELEVANT_TYPE_PROJECTParameter, c_INCIDENT_TYPEParameter, c_REASON_TYPEParameter);
        }
    
        public virtual ObjectResult<string> GetIncidentOfficeChief(Nullable<int> incidentID, Nullable<bool> c_FLAG_ON)
        {
            var incidentIDParameter = incidentID.HasValue ?
                new ObjectParameter("incidentID", incidentID) :
                new ObjectParameter("incidentID", typeof(int));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetIncidentOfficeChief", incidentIDParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<string> GetIncidentDepartmentChief(Nullable<int> incidentID, Nullable<bool> c_FLAG_ON)
        {
            var incidentIDParameter = incidentID.HasValue ?
                new ObjectParameter("IncidentID", incidentID) :
                new ObjectParameter("IncidentID", typeof(int));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetIncidentDepartmentChief", incidentIDParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<tbs_ARPermissionConfiguration> GetTbs_ARPermissionConfiguration(string strPermissionType)
        {
            var strPermissionTypeParameter = strPermissionType != null ?
                new ObjectParameter("strPermissionType", strPermissionType) :
                new ObjectParameter("strPermissionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARPermissionConfiguration>("GetTbs_ARPermissionConfiguration", strPermissionTypeParameter);
        }
    
        public virtual ObjectResult<tbs_ARPermissionConfiguration> GetTbs_ARPermissionConfiguration(string strPermissionType, MergeOption mergeOption)
        {
            var strPermissionTypeParameter = strPermissionType != null ?
                new ObjectParameter("strPermissionType", strPermissionType) :
                new ObjectParameter("strPermissionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARPermissionConfiguration>("GetTbs_ARPermissionConfiguration", mergeOption, strPermissionTypeParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentPermissionConfiguration> GetTbs_IncidentPermissionConfiguration(string incidentRole)
        {
            var incidentRoleParameter = incidentRole != null ?
                new ObjectParameter("incidentRole", incidentRole) :
                new ObjectParameter("incidentRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentPermissionConfiguration>("GetTbs_IncidentPermissionConfiguration", incidentRoleParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentPermissionConfiguration> GetTbs_IncidentPermissionConfiguration(string incidentRole, MergeOption mergeOption)
        {
            var incidentRoleParameter = incidentRole != null ?
                new ObjectParameter("incidentRole", incidentRole) :
                new ObjectParameter("incidentRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentPermissionConfiguration>("GetTbs_IncidentPermissionConfiguration", mergeOption, incidentRoleParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteAllOneTimeFee(string contractCode, string oCC, string c_BILLING_TYPE_INSTALLATION_FEE, string c_BILLING_TYPE_DEPOSIT_FEE, string pContractCode, string pOCC, string pBillingOCC, string pBillingTargetRunningNo, string pBillingClientCode, string pBillingTargetCode, string pBillingOfficeCode, string pBillingType, string pBillingTiming, Nullable<decimal> pBillingAmt, string pPayMethod, Nullable<int> pBillingCycle, string pCalDailyFeeStatus, string pSendFlag, Nullable<System.DateTime> pProcessDateTime, string pEmpNo, Nullable<decimal> pBillingAmtUsd, string pBillingAmtCurrencyType)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var c_BILLING_TYPE_INSTALLATION_FEEParameter = c_BILLING_TYPE_INSTALLATION_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", c_BILLING_TYPE_INSTALLATION_FEE) :
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", typeof(string));
    
            var c_BILLING_TYPE_DEPOSIT_FEEParameter = c_BILLING_TYPE_DEPOSIT_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_DEPOSIT_FEE", c_BILLING_TYPE_DEPOSIT_FEE) :
                new ObjectParameter("C_BILLING_TYPE_DEPOSIT_FEE", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetRunningNoParameter = pBillingTargetRunningNo != null ?
                new ObjectParameter("pBillingTargetRunningNo", pBillingTargetRunningNo) :
                new ObjectParameter("pBillingTargetRunningNo", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pBillingAmtParameter = pBillingAmt.HasValue ?
                new ObjectParameter("pBillingAmt", pBillingAmt) :
                new ObjectParameter("pBillingAmt", typeof(decimal));
    
            var pPayMethodParameter = pPayMethod != null ?
                new ObjectParameter("pPayMethod", pPayMethod) :
                new ObjectParameter("pPayMethod", typeof(string));
    
            var pBillingCycleParameter = pBillingCycle.HasValue ?
                new ObjectParameter("pBillingCycle", pBillingCycle) :
                new ObjectParameter("pBillingCycle", typeof(int));
    
            var pCalDailyFeeStatusParameter = pCalDailyFeeStatus != null ?
                new ObjectParameter("pCalDailyFeeStatus", pCalDailyFeeStatus) :
                new ObjectParameter("pCalDailyFeeStatus", typeof(string));
    
            var pSendFlagParameter = pSendFlag != null ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pBillingAmtUsdParameter = pBillingAmtUsd.HasValue ?
                new ObjectParameter("pBillingAmtUsd", pBillingAmtUsd) :
                new ObjectParameter("pBillingAmtUsd", typeof(decimal));
    
            var pBillingAmtCurrencyTypeParameter = pBillingAmtCurrencyType != null ?
                new ObjectParameter("pBillingAmtCurrencyType", pBillingAmtCurrencyType) :
                new ObjectParameter("pBillingAmtCurrencyType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteAllOneTimeFee", contractCodeParameter, oCCParameter, c_BILLING_TYPE_INSTALLATION_FEEParameter, c_BILLING_TYPE_DEPOSIT_FEEParameter, pContractCodeParameter, pOCCParameter, pBillingOCCParameter, pBillingTargetRunningNoParameter, pBillingClientCodeParameter, pBillingTargetCodeParameter, pBillingOfficeCodeParameter, pBillingTypeParameter, pBillingTimingParameter, pBillingAmtParameter, pPayMethodParameter, pBillingCycleParameter, pCalDailyFeeStatusParameter, pSendFlagParameter, pProcessDateTimeParameter, pEmpNoParameter, pBillingAmtUsdParameter, pBillingAmtCurrencyTypeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteAllOneTimeFee(string contractCode, string oCC, string c_BILLING_TYPE_INSTALLATION_FEE, string c_BILLING_TYPE_DEPOSIT_FEE, string pContractCode, string pOCC, string pBillingOCC, string pBillingTargetRunningNo, string pBillingClientCode, string pBillingTargetCode, string pBillingOfficeCode, string pBillingType, string pBillingTiming, Nullable<decimal> pBillingAmt, string pPayMethod, Nullable<int> pBillingCycle, string pCalDailyFeeStatus, string pSendFlag, Nullable<System.DateTime> pProcessDateTime, string pEmpNo, Nullable<decimal> pBillingAmtUsd, string pBillingAmtCurrencyType, MergeOption mergeOption)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var c_BILLING_TYPE_INSTALLATION_FEEParameter = c_BILLING_TYPE_INSTALLATION_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", c_BILLING_TYPE_INSTALLATION_FEE) :
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", typeof(string));
    
            var c_BILLING_TYPE_DEPOSIT_FEEParameter = c_BILLING_TYPE_DEPOSIT_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_DEPOSIT_FEE", c_BILLING_TYPE_DEPOSIT_FEE) :
                new ObjectParameter("C_BILLING_TYPE_DEPOSIT_FEE", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pBillingOCCParameter = pBillingOCC != null ?
                new ObjectParameter("pBillingOCC", pBillingOCC) :
                new ObjectParameter("pBillingOCC", typeof(string));
    
            var pBillingTargetRunningNoParameter = pBillingTargetRunningNo != null ?
                new ObjectParameter("pBillingTargetRunningNo", pBillingTargetRunningNo) :
                new ObjectParameter("pBillingTargetRunningNo", typeof(string));
    
            var pBillingClientCodeParameter = pBillingClientCode != null ?
                new ObjectParameter("pBillingClientCode", pBillingClientCode) :
                new ObjectParameter("pBillingClientCode", typeof(string));
    
            var pBillingTargetCodeParameter = pBillingTargetCode != null ?
                new ObjectParameter("pBillingTargetCode", pBillingTargetCode) :
                new ObjectParameter("pBillingTargetCode", typeof(string));
    
            var pBillingOfficeCodeParameter = pBillingOfficeCode != null ?
                new ObjectParameter("pBillingOfficeCode", pBillingOfficeCode) :
                new ObjectParameter("pBillingOfficeCode", typeof(string));
    
            var pBillingTypeParameter = pBillingType != null ?
                new ObjectParameter("pBillingType", pBillingType) :
                new ObjectParameter("pBillingType", typeof(string));
    
            var pBillingTimingParameter = pBillingTiming != null ?
                new ObjectParameter("pBillingTiming", pBillingTiming) :
                new ObjectParameter("pBillingTiming", typeof(string));
    
            var pBillingAmtParameter = pBillingAmt.HasValue ?
                new ObjectParameter("pBillingAmt", pBillingAmt) :
                new ObjectParameter("pBillingAmt", typeof(decimal));
    
            var pPayMethodParameter = pPayMethod != null ?
                new ObjectParameter("pPayMethod", pPayMethod) :
                new ObjectParameter("pPayMethod", typeof(string));
    
            var pBillingCycleParameter = pBillingCycle.HasValue ?
                new ObjectParameter("pBillingCycle", pBillingCycle) :
                new ObjectParameter("pBillingCycle", typeof(int));
    
            var pCalDailyFeeStatusParameter = pCalDailyFeeStatus != null ?
                new ObjectParameter("pCalDailyFeeStatus", pCalDailyFeeStatus) :
                new ObjectParameter("pCalDailyFeeStatus", typeof(string));
    
            var pSendFlagParameter = pSendFlag != null ?
                new ObjectParameter("pSendFlag", pSendFlag) :
                new ObjectParameter("pSendFlag", typeof(string));
    
            var pProcessDateTimeParameter = pProcessDateTime.HasValue ?
                new ObjectParameter("pProcessDateTime", pProcessDateTime) :
                new ObjectParameter("pProcessDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            var pBillingAmtUsdParameter = pBillingAmtUsd.HasValue ?
                new ObjectParameter("pBillingAmtUsd", pBillingAmtUsd) :
                new ObjectParameter("pBillingAmtUsd", typeof(decimal));
    
            var pBillingAmtCurrencyTypeParameter = pBillingAmtCurrencyType != null ?
                new ObjectParameter("pBillingAmtCurrencyType", pBillingAmtCurrencyType) :
                new ObjectParameter("pBillingAmtCurrencyType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteAllOneTimeFee", mergeOption, contractCodeParameter, oCCParameter, c_BILLING_TYPE_INSTALLATION_FEEParameter, c_BILLING_TYPE_DEPOSIT_FEEParameter, pContractCodeParameter, pOCCParameter, pBillingOCCParameter, pBillingTargetRunningNoParameter, pBillingClientCodeParameter, pBillingTargetCodeParameter, pBillingOfficeCodeParameter, pBillingTypeParameter, pBillingTimingParameter, pBillingAmtParameter, pPayMethodParameter, pBillingCycleParameter, pCalDailyFeeStatusParameter, pSendFlagParameter, pProcessDateTimeParameter, pEmpNoParameter, pBillingAmtUsdParameter, pBillingAmtCurrencyTypeParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> DeleteTbt_ContractEmail_UnsentContractEmail(string paramContractCode, string paramEmailType, Nullable<bool> paramFlag)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramEmailTypeParameter = paramEmailType != null ?
                new ObjectParameter("paramEmailType", paramEmailType) :
                new ObjectParameter("paramEmailType", typeof(string));
    
            var paramFlagParameter = paramFlag.HasValue ?
                new ObjectParameter("paramFlag", paramFlag) :
                new ObjectParameter("paramFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("DeleteTbt_ContractEmail_UnsentContractEmail", paramContractCodeParameter, paramEmailTypeParameter, paramFlagParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> DeleteTbt_ContractEmail_UnsentContractEmail(string paramContractCode, string paramEmailType, Nullable<bool> paramFlag, MergeOption mergeOption)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramEmailTypeParameter = paramEmailType != null ?
                new ObjectParameter("paramEmailType", paramEmailType) :
                new ObjectParameter("paramEmailType", typeof(string));
    
            var paramFlagParameter = paramFlag.HasValue ?
                new ObjectParameter("paramFlag", paramFlag) :
                new ObjectParameter("paramFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("DeleteTbt_ContractEmail_UnsentContractEmail", mergeOption, paramContractCodeParameter, paramEmailTypeParameter, paramFlagParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> GetBillingTargetForEditing(string strContractCode, string strOCC, string c_BILLING_TYPE_CONTRACT_FEE, string c_BILLING_TYPE_INSTALLATION_FEE, string c_BILLING_TYPE_MAINTENANCE_FEE, string c_BILLING_TYPE_STOP_FEE, string c_BILLING_TYPE_SALE_PRICE)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            var c_BILLING_TYPE_CONTRACT_FEEParameter = c_BILLING_TYPE_CONTRACT_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_CONTRACT_FEE", c_BILLING_TYPE_CONTRACT_FEE) :
                new ObjectParameter("C_BILLING_TYPE_CONTRACT_FEE", typeof(string));
    
            var c_BILLING_TYPE_INSTALLATION_FEEParameter = c_BILLING_TYPE_INSTALLATION_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", c_BILLING_TYPE_INSTALLATION_FEE) :
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", typeof(string));
    
            var c_BILLING_TYPE_MAINTENANCE_FEEParameter = c_BILLING_TYPE_MAINTENANCE_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_MAINTENANCE_FEE", c_BILLING_TYPE_MAINTENANCE_FEE) :
                new ObjectParameter("C_BILLING_TYPE_MAINTENANCE_FEE", typeof(string));
    
            var c_BILLING_TYPE_STOP_FEEParameter = c_BILLING_TYPE_STOP_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_STOP_FEE", c_BILLING_TYPE_STOP_FEE) :
                new ObjectParameter("C_BILLING_TYPE_STOP_FEE", typeof(string));
    
            var c_BILLING_TYPE_SALE_PRICEParameter = c_BILLING_TYPE_SALE_PRICE != null ?
                new ObjectParameter("C_BILLING_TYPE_SALE_PRICE", c_BILLING_TYPE_SALE_PRICE) :
                new ObjectParameter("C_BILLING_TYPE_SALE_PRICE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("GetBillingTargetForEditing", strContractCodeParameter, strOCCParameter, c_BILLING_TYPE_CONTRACT_FEEParameter, c_BILLING_TYPE_INSTALLATION_FEEParameter, c_BILLING_TYPE_MAINTENANCE_FEEParameter, c_BILLING_TYPE_STOP_FEEParameter, c_BILLING_TYPE_SALE_PRICEParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> GetBillingTargetForEditing(string strContractCode, string strOCC, string c_BILLING_TYPE_CONTRACT_FEE, string c_BILLING_TYPE_INSTALLATION_FEE, string c_BILLING_TYPE_MAINTENANCE_FEE, string c_BILLING_TYPE_STOP_FEE, string c_BILLING_TYPE_SALE_PRICE, MergeOption mergeOption)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            var c_BILLING_TYPE_CONTRACT_FEEParameter = c_BILLING_TYPE_CONTRACT_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_CONTRACT_FEE", c_BILLING_TYPE_CONTRACT_FEE) :
                new ObjectParameter("C_BILLING_TYPE_CONTRACT_FEE", typeof(string));
    
            var c_BILLING_TYPE_INSTALLATION_FEEParameter = c_BILLING_TYPE_INSTALLATION_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", c_BILLING_TYPE_INSTALLATION_FEE) :
                new ObjectParameter("C_BILLING_TYPE_INSTALLATION_FEE", typeof(string));
    
            var c_BILLING_TYPE_MAINTENANCE_FEEParameter = c_BILLING_TYPE_MAINTENANCE_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_MAINTENANCE_FEE", c_BILLING_TYPE_MAINTENANCE_FEE) :
                new ObjectParameter("C_BILLING_TYPE_MAINTENANCE_FEE", typeof(string));
    
            var c_BILLING_TYPE_STOP_FEEParameter = c_BILLING_TYPE_STOP_FEE != null ?
                new ObjectParameter("C_BILLING_TYPE_STOP_FEE", c_BILLING_TYPE_STOP_FEE) :
                new ObjectParameter("C_BILLING_TYPE_STOP_FEE", typeof(string));
    
            var c_BILLING_TYPE_SALE_PRICEParameter = c_BILLING_TYPE_SALE_PRICE != null ?
                new ObjectParameter("C_BILLING_TYPE_SALE_PRICE", c_BILLING_TYPE_SALE_PRICE) :
                new ObjectParameter("C_BILLING_TYPE_SALE_PRICE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("GetBillingTargetForEditing", mergeOption, strContractCodeParameter, strOCCParameter, c_BILLING_TYPE_CONTRACT_FEEParameter, c_BILLING_TYPE_INSTALLATION_FEEParameter, c_BILLING_TYPE_MAINTENANCE_FEEParameter, c_BILLING_TYPE_STOP_FEEParameter, c_BILLING_TYPE_SALE_PRICEParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> UpdateTbt_SaleInstrumentDetails(string xml_doTbt_SaleInstrumentDetails)
        {
            var xml_doTbt_SaleInstrumentDetailsParameter = xml_doTbt_SaleInstrumentDetails != null ?
                new ObjectParameter("xml_doTbt_SaleInstrumentDetails", xml_doTbt_SaleInstrumentDetails) :
                new ObjectParameter("xml_doTbt_SaleInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("UpdateTbt_SaleInstrumentDetails", xml_doTbt_SaleInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> UpdateTbt_SaleInstrumentDetails(string xml_doTbt_SaleInstrumentDetails, MergeOption mergeOption)
        {
            var xml_doTbt_SaleInstrumentDetailsParameter = xml_doTbt_SaleInstrumentDetails != null ?
                new ObjectParameter("xml_doTbt_SaleInstrumentDetails", xml_doTbt_SaleInstrumentDetails) :
                new ObjectParameter("xml_doTbt_SaleInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("UpdateTbt_SaleInstrumentDetails", mergeOption, xml_doTbt_SaleInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<dtSummaryIncident> SummaryIncident(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<System.DateTime> currentdate, string c_INCIDENT_STATUS_WAIT_FOR_INSTRUCTION, string c_INCIDENT_STATUS_COMPLETE, string c_INCIDENT_TYPE_CANCEL, string c_INCIDENT_TYPE_COMPLAIN)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var currentdateParameter = currentdate.HasValue ?
                new ObjectParameter("currentdate", currentdate) :
                new ObjectParameter("currentdate", typeof(System.DateTime));
    
            var c_INCIDENT_STATUS_WAIT_FOR_INSTRUCTIONParameter = c_INCIDENT_STATUS_WAIT_FOR_INSTRUCTION != null ?
                new ObjectParameter("C_INCIDENT_STATUS_WAIT_FOR_INSTRUCTION", c_INCIDENT_STATUS_WAIT_FOR_INSTRUCTION) :
                new ObjectParameter("C_INCIDENT_STATUS_WAIT_FOR_INSTRUCTION", typeof(string));
    
            var c_INCIDENT_STATUS_COMPLETEParameter = c_INCIDENT_STATUS_COMPLETE != null ?
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", c_INCIDENT_STATUS_COMPLETE) :
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", typeof(string));
    
            var c_INCIDENT_TYPE_CANCELParameter = c_INCIDENT_TYPE_CANCEL != null ?
                new ObjectParameter("C_INCIDENT_TYPE_CANCEL", c_INCIDENT_TYPE_CANCEL) :
                new ObjectParameter("C_INCIDENT_TYPE_CANCEL", typeof(string));
    
            var c_INCIDENT_TYPE_COMPLAINParameter = c_INCIDENT_TYPE_COMPLAIN != null ?
                new ObjectParameter("C_INCIDENT_TYPE_COMPLAIN", c_INCIDENT_TYPE_COMPLAIN) :
                new ObjectParameter("C_INCIDENT_TYPE_COMPLAIN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSummaryIncident>("SummaryIncident", dateFromParameter, dateToParameter, currentdateParameter, c_INCIDENT_STATUS_WAIT_FOR_INSTRUCTIONParameter, c_INCIDENT_STATUS_COMPLETEParameter, c_INCIDENT_TYPE_CANCELParameter, c_INCIDENT_TYPE_COMPLAINParameter);
        }
    
        public virtual ObjectResult<doMaintenanceRelationType> GenerateMaintenanceRelationType(string xml0, Nullable<bool> pBeforeStartFlag)
        {
            var xml0Parameter = xml0 != null ?
                new ObjectParameter("xml0", xml0) :
                new ObjectParameter("xml0", typeof(string));
    
            var pBeforeStartFlagParameter = pBeforeStartFlag.HasValue ?
                new ObjectParameter("pBeforeStartFlag", pBeforeStartFlag) :
                new ObjectParameter("pBeforeStartFlag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doMaintenanceRelationType>("GenerateMaintenanceRelationType", xml0Parameter, pBeforeStartFlagParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBEDetails> InsertTbt_DraftRentalBEDetails(string xml_DraftRentalBEDetails)
        {
            var xml_DraftRentalBEDetailsParameter = xml_DraftRentalBEDetails != null ?
                new ObjectParameter("xml_DraftRentalBEDetails", xml_DraftRentalBEDetails) :
                new ObjectParameter("xml_DraftRentalBEDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBEDetails>("InsertTbt_DraftRentalBEDetails", xml_DraftRentalBEDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBEDetails> InsertTbt_DraftRentalBEDetails(string xml_DraftRentalBEDetails, MergeOption mergeOption)
        {
            var xml_DraftRentalBEDetailsParameter = xml_DraftRentalBEDetails != null ?
                new ObjectParameter("xml_DraftRentalBEDetails", xml_DraftRentalBEDetails) :
                new ObjectParameter("xml_DraftRentalBEDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBEDetails>("InsertTbt_DraftRentalBEDetails", mergeOption, xml_DraftRentalBEDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBillingTarget> InsertTbt_DraftRentalBillingTarget(string xml_DraftRentalBillingTarget)
        {
            var xml_DraftRentalBillingTargetParameter = xml_DraftRentalBillingTarget != null ?
                new ObjectParameter("xml_DraftRentalBillingTarget", xml_DraftRentalBillingTarget) :
                new ObjectParameter("xml_DraftRentalBillingTarget", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBillingTarget>("InsertTbt_DraftRentalBillingTarget", xml_DraftRentalBillingTargetParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBillingTarget> InsertTbt_DraftRentalBillingTarget(string xml_DraftRentalBillingTarget, MergeOption mergeOption)
        {
            var xml_DraftRentalBillingTargetParameter = xml_DraftRentalBillingTarget != null ?
                new ObjectParameter("xml_DraftRentalBillingTarget", xml_DraftRentalBillingTarget) :
                new ObjectParameter("xml_DraftRentalBillingTarget", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBillingTarget>("InsertTbt_DraftRentalBillingTarget", mergeOption, xml_DraftRentalBillingTargetParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalContract> InsertTbt_DraftRentalContract(string xml_DraftRentalContract)
        {
            var xml_DraftRentalContractParameter = xml_DraftRentalContract != null ?
                new ObjectParameter("xml_DraftRentalContract", xml_DraftRentalContract) :
                new ObjectParameter("xml_DraftRentalContract", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalContract>("InsertTbt_DraftRentalContract", xml_DraftRentalContractParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalContract> InsertTbt_DraftRentalContract(string xml_DraftRentalContract, MergeOption mergeOption)
        {
            var xml_DraftRentalContractParameter = xml_DraftRentalContract != null ?
                new ObjectParameter("xml_DraftRentalContract", xml_DraftRentalContract) :
                new ObjectParameter("xml_DraftRentalContract", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalContract>("InsertTbt_DraftRentalContract", mergeOption, xml_DraftRentalContractParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalEmail> InsertTbt_DraftRentalEmail(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalEmail>("InsertTbt_DraftRentalEmail", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalEmail> InsertTbt_DraftRentalEmail(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalEmail>("InsertTbt_DraftRentalEmail", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalInstrument> InsertTbt_DraftRentalInstrument(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalInstrument>("InsertTbt_DraftRentalInstrument", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalInstrument> InsertTbt_DraftRentalInstrument(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalInstrument>("InsertTbt_DraftRentalInstrument", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalMaintenanceDetails> InsertTbt_DraftRentalMaintenanceDetails(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalMaintenanceDetails>("InsertTbt_DraftRentalMaintenanceDetails", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalMaintenanceDetails> InsertTbt_DraftRentalMaintenanceDetails(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalMaintenanceDetails>("InsertTbt_DraftRentalMaintenanceDetails", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalOperationType> InsertTbt_DraftRentalOperationType(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalOperationType>("InsertTbt_DraftRentalOperationType", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalOperationType> InsertTbt_DraftRentalOperationType(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalOperationType>("InsertTbt_DraftRentalOperationType", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuard> InsertTbt_DraftRentalSentryGuard(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuard>("InsertTbt_DraftRentalSentryGuard", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuard> InsertTbt_DraftRentalSentryGuard(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuard>("InsertTbt_DraftRentalSentryGuard", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuardDetails> InsertTbt_DraftRentalSentryGuardDetails(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuardDetails>("InsertTbt_DraftRentalSentryGuardDetails", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuardDetails> InsertTbt_DraftRentalSentryGuardDetails(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuardDetails>("InsertTbt_DraftRentalSentryGuardDetails", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> InsertTbt_ContractEmail(string xml_ContractEmail)
        {
            var xml_ContractEmailParameter = xml_ContractEmail != null ?
                new ObjectParameter("xml_ContractEmail", xml_ContractEmail) :
                new ObjectParameter("xml_ContractEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("InsertTbt_ContractEmail", xml_ContractEmailParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> InsertTbt_ContractEmail(string xml_ContractEmail, MergeOption mergeOption)
        {
            var xml_ContractEmailParameter = xml_ContractEmail != null ?
                new ObjectParameter("xml_ContractEmail", xml_ContractEmail) :
                new ObjectParameter("xml_ContractEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("InsertTbt_ContractEmail", mergeOption, xml_ContractEmailParameter);
        }
    
        public virtual ObjectResult<dtContractSignerType> GetContractSignerType(string c_CONTRACT_SIGNER_TYPE, string contractCode, string oCC)
        {
            var c_CONTRACT_SIGNER_TYPEParameter = c_CONTRACT_SIGNER_TYPE != null ?
                new ObjectParameter("C_CONTRACT_SIGNER_TYPE", c_CONTRACT_SIGNER_TYPE) :
                new ObjectParameter("C_CONTRACT_SIGNER_TYPE", typeof(string));
    
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractSignerType>("GetContractSignerType", c_CONTRACT_SIGNER_TYPEParameter, contractCodeParameter, oCCParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBillingTarget> DeleteTbt_DraftRentalBillingTarget(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBillingTarget>("DeleteTbt_DraftRentalBillingTarget", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBillingTarget> DeleteTbt_DraftRentalBillingTarget(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBillingTarget>("DeleteTbt_DraftRentalBillingTarget", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalEmail> DeleteTbt_DraftRentalEmail(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalEmail>("DeleteTbt_DraftRentalEmail", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalEmail> DeleteTbt_DraftRentalEmail(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalEmail>("DeleteTbt_DraftRentalEmail", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalInstrument> DeleteTbt_DraftRentalInstrument(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalInstrument>("DeleteTbt_DraftRentalInstrument", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalInstrument> DeleteTbt_DraftRentalInstrument(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalInstrument>("DeleteTbt_DraftRentalInstrument", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalOperationType> DeleteTbt_DraftRentalOperationType(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalOperationType>("DeleteTbt_DraftRentalOperationType", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalOperationType> DeleteTbt_DraftRentalOperationType(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalOperationType>("DeleteTbt_DraftRentalOperationType", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuardDetails> DeleteTbt_DraftRentalSentryGuardDetails(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuardDetails>("DeleteTbt_DraftRentalSentryGuardDetails", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuardDetails> DeleteTbt_DraftRentalSentryGuardDetails(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuardDetails>("DeleteTbt_DraftRentalSentryGuardDetails", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBEDetails> UpdateTbt_DraftRentalBEDetails(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBEDetails>("UpdateTbt_DraftRentalBEDetails", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBEDetails> UpdateTbt_DraftRentalBEDetails(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBEDetails>("UpdateTbt_DraftRentalBEDetails", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalContract> UpdateTbt_DraftRentalContract(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalContract>("UpdateTbt_DraftRentalContract", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalContract> UpdateTbt_DraftRentalContract(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalContract>("UpdateTbt_DraftRentalContract", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalMaintenanceDetails> UpdateTbt_DraftRentalMaintenanceDetails(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalMaintenanceDetails>("UpdateTbt_DraftRentalMaintenanceDetails", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalMaintenanceDetails> UpdateTbt_DraftRentalMaintenanceDetails(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalMaintenanceDetails>("UpdateTbt_DraftRentalMaintenanceDetails", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuard> UpdateTbt_DraftRentalSentryGuard(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuard>("UpdateTbt_DraftRentalSentryGuard", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuard> UpdateTbt_DraftRentalSentryGuard(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuard>("UpdateTbt_DraftRentalSentryGuard", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> DeleteTbt_RelationType(string pchrContractCode)
        {
            var pchrContractCodeParameter = pchrContractCode != null ?
                new ObjectParameter("pchrContractCode", pchrContractCode) :
                new ObjectParameter("pchrContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("DeleteTbt_RelationType", pchrContractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> DeleteTbt_RelationType(string pchrContractCode, MergeOption mergeOption)
        {
            var pchrContractCodeParameter = pchrContractCode != null ?
                new ObjectParameter("pchrContractCode", pchrContractCode) :
                new ObjectParameter("pchrContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("DeleteTbt_RelationType", mergeOption, pchrContractCodeParameter);
        }
    
        public virtual ObjectResult<dtContractList> GetContractListForSearchInfo(string pchrRoleTypeContractTarget, string pchrRoleTypePurchaser, string pchrRoleTypeRealCustomer, string pchrServiceTypeCode, string pchrCustomerCode, string pchrGroupCode, string pchrSiteCode, string pchvContractCode, string pchvUserCode, string pchvPlanCode, string pchvProjectCode, string pchrnCustomerName, string pchrnBranchName, string pchrnGroupName, string pchrCustomerStatus, string pchrCustomerTypeCode, string pchrCompanyTypeCode, string pchrnIDNo, string pchrRegionCode, string pchrBusinessTypeCode, string pchrnCust_Address, string pchrnCust_Alley, string pchrnCust_Road, string pchrnCust_SubDistrict, string pchrCust_ProvinceCode, string pchrCust_DistrictCode, string pchrCust_ZipCode, string pchrnCust_PhoneNo, string pchrnCust_FaxNo, string pchrnSiteName, string pchrnSite_Address, string pchrnSite_Alley, string pchrnSite_Road, string pchrnSite_SubDistrict, string pchrSite_ProvinceCode, string pchrSite_DistrictCode, string pchrSite_ZipCode, string pchrnSite_PhoneNo, Nullable<System.DateTime> pdtmOperationDate_From, Nullable<System.DateTime> pdtmOperationDate_To, Nullable<System.DateTime> pdtmCustAcceptDate_From, Nullable<System.DateTime> pdtmCustAcceptDate_To, Nullable<System.DateTime> pdtmInstallationCompleteDate_From, Nullable<System.DateTime> pdtmInstallationCompleteDate_To, string pchvContractOfficeCode, string pchvdsTransDataOfficeCode, string pchvOperationOfficeCode, string pchvSalesmanEmpNo1, string pchvSalesmanEmpName1, string pchrProductCode, string pchrChangeTypeCode, string pchrProcessManageStatusCode, string pchrStartTypeCode, string pchvC_RENTAL_CHANGE_TYPE, string pchvC_SALE_CHANGE_TYPE, string pchvC_SALE_PROC_MANAGE_STATUS, string pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET, string pchrC_CUST_ROLE_TYPE_REAL_CUST, string pchrC_CUST_ROLE_TYPE_PURCHASER, Nullable<bool> pbitC_FLAG_ON, string pchrC_SERVICE_TYPE_RENTAL, string pchrC_SERVICE_TYPE_SALE, string pchrC_CONTRACT_STATUS_BEF_START, string pchrC_CONTRACT_STATUS_CANCEL, string pchrC_CONTRACT_STATUS_END, string c_SALE_CHANGE_TYPE_NEW_SALE, string c_CUST_TYPE_JURISTIC, Nullable<System.DateTime> stopDateFrom, Nullable<System.DateTime> stopDateTo, Nullable<System.DateTime> cancelDateFrom, Nullable<System.DateTime> cancelDateTo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var pchrRoleTypeContractTargetParameter = pchrRoleTypeContractTarget != null ?
                new ObjectParameter("pchrRoleTypeContractTarget", pchrRoleTypeContractTarget) :
                new ObjectParameter("pchrRoleTypeContractTarget", typeof(string));
    
            var pchrRoleTypePurchaserParameter = pchrRoleTypePurchaser != null ?
                new ObjectParameter("pchrRoleTypePurchaser", pchrRoleTypePurchaser) :
                new ObjectParameter("pchrRoleTypePurchaser", typeof(string));
    
            var pchrRoleTypeRealCustomerParameter = pchrRoleTypeRealCustomer != null ?
                new ObjectParameter("pchrRoleTypeRealCustomer", pchrRoleTypeRealCustomer) :
                new ObjectParameter("pchrRoleTypeRealCustomer", typeof(string));
    
            var pchrServiceTypeCodeParameter = pchrServiceTypeCode != null ?
                new ObjectParameter("pchrServiceTypeCode", pchrServiceTypeCode) :
                new ObjectParameter("pchrServiceTypeCode", typeof(string));
    
            var pchrCustomerCodeParameter = pchrCustomerCode != null ?
                new ObjectParameter("pchrCustomerCode", pchrCustomerCode) :
                new ObjectParameter("pchrCustomerCode", typeof(string));
    
            var pchrGroupCodeParameter = pchrGroupCode != null ?
                new ObjectParameter("pchrGroupCode", pchrGroupCode) :
                new ObjectParameter("pchrGroupCode", typeof(string));
    
            var pchrSiteCodeParameter = pchrSiteCode != null ?
                new ObjectParameter("pchrSiteCode", pchrSiteCode) :
                new ObjectParameter("pchrSiteCode", typeof(string));
    
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchvUserCodeParameter = pchvUserCode != null ?
                new ObjectParameter("pchvUserCode", pchvUserCode) :
                new ObjectParameter("pchvUserCode", typeof(string));
    
            var pchvPlanCodeParameter = pchvPlanCode != null ?
                new ObjectParameter("pchvPlanCode", pchvPlanCode) :
                new ObjectParameter("pchvPlanCode", typeof(string));
    
            var pchvProjectCodeParameter = pchvProjectCode != null ?
                new ObjectParameter("pchvProjectCode", pchvProjectCode) :
                new ObjectParameter("pchvProjectCode", typeof(string));
    
            var pchrnCustomerNameParameter = pchrnCustomerName != null ?
                new ObjectParameter("pchrnCustomerName", pchrnCustomerName) :
                new ObjectParameter("pchrnCustomerName", typeof(string));
    
            var pchrnBranchNameParameter = pchrnBranchName != null ?
                new ObjectParameter("pchrnBranchName", pchrnBranchName) :
                new ObjectParameter("pchrnBranchName", typeof(string));
    
            var pchrnGroupNameParameter = pchrnGroupName != null ?
                new ObjectParameter("pchrnGroupName", pchrnGroupName) :
                new ObjectParameter("pchrnGroupName", typeof(string));
    
            var pchrCustomerStatusParameter = pchrCustomerStatus != null ?
                new ObjectParameter("pchrCustomerStatus", pchrCustomerStatus) :
                new ObjectParameter("pchrCustomerStatus", typeof(string));
    
            var pchrCustomerTypeCodeParameter = pchrCustomerTypeCode != null ?
                new ObjectParameter("pchrCustomerTypeCode", pchrCustomerTypeCode) :
                new ObjectParameter("pchrCustomerTypeCode", typeof(string));
    
            var pchrCompanyTypeCodeParameter = pchrCompanyTypeCode != null ?
                new ObjectParameter("pchrCompanyTypeCode", pchrCompanyTypeCode) :
                new ObjectParameter("pchrCompanyTypeCode", typeof(string));
    
            var pchrnIDNoParameter = pchrnIDNo != null ?
                new ObjectParameter("pchrnIDNo", pchrnIDNo) :
                new ObjectParameter("pchrnIDNo", typeof(string));
    
            var pchrRegionCodeParameter = pchrRegionCode != null ?
                new ObjectParameter("pchrRegionCode", pchrRegionCode) :
                new ObjectParameter("pchrRegionCode", typeof(string));
    
            var pchrBusinessTypeCodeParameter = pchrBusinessTypeCode != null ?
                new ObjectParameter("pchrBusinessTypeCode", pchrBusinessTypeCode) :
                new ObjectParameter("pchrBusinessTypeCode", typeof(string));
    
            var pchrnCust_AddressParameter = pchrnCust_Address != null ?
                new ObjectParameter("pchrnCust_Address", pchrnCust_Address) :
                new ObjectParameter("pchrnCust_Address", typeof(string));
    
            var pchrnCust_AlleyParameter = pchrnCust_Alley != null ?
                new ObjectParameter("pchrnCust_Alley", pchrnCust_Alley) :
                new ObjectParameter("pchrnCust_Alley", typeof(string));
    
            var pchrnCust_RoadParameter = pchrnCust_Road != null ?
                new ObjectParameter("pchrnCust_Road", pchrnCust_Road) :
                new ObjectParameter("pchrnCust_Road", typeof(string));
    
            var pchrnCust_SubDistrictParameter = pchrnCust_SubDistrict != null ?
                new ObjectParameter("pchrnCust_SubDistrict", pchrnCust_SubDistrict) :
                new ObjectParameter("pchrnCust_SubDistrict", typeof(string));
    
            var pchrCust_ProvinceCodeParameter = pchrCust_ProvinceCode != null ?
                new ObjectParameter("pchrCust_ProvinceCode", pchrCust_ProvinceCode) :
                new ObjectParameter("pchrCust_ProvinceCode", typeof(string));
    
            var pchrCust_DistrictCodeParameter = pchrCust_DistrictCode != null ?
                new ObjectParameter("pchrCust_DistrictCode", pchrCust_DistrictCode) :
                new ObjectParameter("pchrCust_DistrictCode", typeof(string));
    
            var pchrCust_ZipCodeParameter = pchrCust_ZipCode != null ?
                new ObjectParameter("pchrCust_ZipCode", pchrCust_ZipCode) :
                new ObjectParameter("pchrCust_ZipCode", typeof(string));
    
            var pchrnCust_PhoneNoParameter = pchrnCust_PhoneNo != null ?
                new ObjectParameter("pchrnCust_PhoneNo", pchrnCust_PhoneNo) :
                new ObjectParameter("pchrnCust_PhoneNo", typeof(string));
    
            var pchrnCust_FaxNoParameter = pchrnCust_FaxNo != null ?
                new ObjectParameter("pchrnCust_FaxNo", pchrnCust_FaxNo) :
                new ObjectParameter("pchrnCust_FaxNo", typeof(string));
    
            var pchrnSiteNameParameter = pchrnSiteName != null ?
                new ObjectParameter("pchrnSiteName", pchrnSiteName) :
                new ObjectParameter("pchrnSiteName", typeof(string));
    
            var pchrnSite_AddressParameter = pchrnSite_Address != null ?
                new ObjectParameter("pchrnSite_Address", pchrnSite_Address) :
                new ObjectParameter("pchrnSite_Address", typeof(string));
    
            var pchrnSite_AlleyParameter = pchrnSite_Alley != null ?
                new ObjectParameter("pchrnSite_Alley", pchrnSite_Alley) :
                new ObjectParameter("pchrnSite_Alley", typeof(string));
    
            var pchrnSite_RoadParameter = pchrnSite_Road != null ?
                new ObjectParameter("pchrnSite_Road", pchrnSite_Road) :
                new ObjectParameter("pchrnSite_Road", typeof(string));
    
            var pchrnSite_SubDistrictParameter = pchrnSite_SubDistrict != null ?
                new ObjectParameter("pchrnSite_SubDistrict", pchrnSite_SubDistrict) :
                new ObjectParameter("pchrnSite_SubDistrict", typeof(string));
    
            var pchrSite_ProvinceCodeParameter = pchrSite_ProvinceCode != null ?
                new ObjectParameter("pchrSite_ProvinceCode", pchrSite_ProvinceCode) :
                new ObjectParameter("pchrSite_ProvinceCode", typeof(string));
    
            var pchrSite_DistrictCodeParameter = pchrSite_DistrictCode != null ?
                new ObjectParameter("pchrSite_DistrictCode", pchrSite_DistrictCode) :
                new ObjectParameter("pchrSite_DistrictCode", typeof(string));
    
            var pchrSite_ZipCodeParameter = pchrSite_ZipCode != null ?
                new ObjectParameter("pchrSite_ZipCode", pchrSite_ZipCode) :
                new ObjectParameter("pchrSite_ZipCode", typeof(string));
    
            var pchrnSite_PhoneNoParameter = pchrnSite_PhoneNo != null ?
                new ObjectParameter("pchrnSite_PhoneNo", pchrnSite_PhoneNo) :
                new ObjectParameter("pchrnSite_PhoneNo", typeof(string));
    
            var pdtmOperationDate_FromParameter = pdtmOperationDate_From.HasValue ?
                new ObjectParameter("pdtmOperationDate_From", pdtmOperationDate_From) :
                new ObjectParameter("pdtmOperationDate_From", typeof(System.DateTime));
    
            var pdtmOperationDate_ToParameter = pdtmOperationDate_To.HasValue ?
                new ObjectParameter("pdtmOperationDate_To", pdtmOperationDate_To) :
                new ObjectParameter("pdtmOperationDate_To", typeof(System.DateTime));
    
            var pdtmCustAcceptDate_FromParameter = pdtmCustAcceptDate_From.HasValue ?
                new ObjectParameter("pdtmCustAcceptDate_From", pdtmCustAcceptDate_From) :
                new ObjectParameter("pdtmCustAcceptDate_From", typeof(System.DateTime));
    
            var pdtmCustAcceptDate_ToParameter = pdtmCustAcceptDate_To.HasValue ?
                new ObjectParameter("pdtmCustAcceptDate_To", pdtmCustAcceptDate_To) :
                new ObjectParameter("pdtmCustAcceptDate_To", typeof(System.DateTime));
    
            var pdtmInstallationCompleteDate_FromParameter = pdtmInstallationCompleteDate_From.HasValue ?
                new ObjectParameter("pdtmInstallationCompleteDate_From", pdtmInstallationCompleteDate_From) :
                new ObjectParameter("pdtmInstallationCompleteDate_From", typeof(System.DateTime));
    
            var pdtmInstallationCompleteDate_ToParameter = pdtmInstallationCompleteDate_To.HasValue ?
                new ObjectParameter("pdtmInstallationCompleteDate_To", pdtmInstallationCompleteDate_To) :
                new ObjectParameter("pdtmInstallationCompleteDate_To", typeof(System.DateTime));
    
            var pchvContractOfficeCodeParameter = pchvContractOfficeCode != null ?
                new ObjectParameter("pchvContractOfficeCode", pchvContractOfficeCode) :
                new ObjectParameter("pchvContractOfficeCode", typeof(string));
    
            var pchvdsTransDataOfficeCodeParameter = pchvdsTransDataOfficeCode != null ?
                new ObjectParameter("pchvdsTransDataOfficeCode", pchvdsTransDataOfficeCode) :
                new ObjectParameter("pchvdsTransDataOfficeCode", typeof(string));
    
            var pchvOperationOfficeCodeParameter = pchvOperationOfficeCode != null ?
                new ObjectParameter("pchvOperationOfficeCode", pchvOperationOfficeCode) :
                new ObjectParameter("pchvOperationOfficeCode", typeof(string));
    
            var pchvSalesmanEmpNo1Parameter = pchvSalesmanEmpNo1 != null ?
                new ObjectParameter("pchvSalesmanEmpNo1", pchvSalesmanEmpNo1) :
                new ObjectParameter("pchvSalesmanEmpNo1", typeof(string));
    
            var pchvSalesmanEmpName1Parameter = pchvSalesmanEmpName1 != null ?
                new ObjectParameter("pchvSalesmanEmpName1", pchvSalesmanEmpName1) :
                new ObjectParameter("pchvSalesmanEmpName1", typeof(string));
    
            var pchrProductCodeParameter = pchrProductCode != null ?
                new ObjectParameter("pchrProductCode", pchrProductCode) :
                new ObjectParameter("pchrProductCode", typeof(string));
    
            var pchrChangeTypeCodeParameter = pchrChangeTypeCode != null ?
                new ObjectParameter("pchrChangeTypeCode", pchrChangeTypeCode) :
                new ObjectParameter("pchrChangeTypeCode", typeof(string));
    
            var pchrProcessManageStatusCodeParameter = pchrProcessManageStatusCode != null ?
                new ObjectParameter("pchrProcessManageStatusCode", pchrProcessManageStatusCode) :
                new ObjectParameter("pchrProcessManageStatusCode", typeof(string));
    
            var pchrStartTypeCodeParameter = pchrStartTypeCode != null ?
                new ObjectParameter("pchrStartTypeCode", pchrStartTypeCode) :
                new ObjectParameter("pchrStartTypeCode", typeof(string));
    
            var pchvC_RENTAL_CHANGE_TYPEParameter = pchvC_RENTAL_CHANGE_TYPE != null ?
                new ObjectParameter("pchvC_RENTAL_CHANGE_TYPE", pchvC_RENTAL_CHANGE_TYPE) :
                new ObjectParameter("pchvC_RENTAL_CHANGE_TYPE", typeof(string));
    
            var pchvC_SALE_CHANGE_TYPEParameter = pchvC_SALE_CHANGE_TYPE != null ?
                new ObjectParameter("pchvC_SALE_CHANGE_TYPE", pchvC_SALE_CHANGE_TYPE) :
                new ObjectParameter("pchvC_SALE_CHANGE_TYPE", typeof(string));
    
            var pchvC_SALE_PROC_MANAGE_STATUSParameter = pchvC_SALE_PROC_MANAGE_STATUS != null ?
                new ObjectParameter("pchvC_SALE_PROC_MANAGE_STATUS", pchvC_SALE_PROC_MANAGE_STATUS) :
                new ObjectParameter("pchvC_SALE_PROC_MANAGE_STATUS", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_CONTRACT_TARGETParameter = pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET", pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_CONTRACT_TARGET", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_REAL_CUSTParameter = pchrC_CUST_ROLE_TYPE_REAL_CUST != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_REAL_CUST", pchrC_CUST_ROLE_TYPE_REAL_CUST) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_REAL_CUST", typeof(string));
    
            var pchrC_CUST_ROLE_TYPE_PURCHASERParameter = pchrC_CUST_ROLE_TYPE_PURCHASER != null ?
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_PURCHASER", pchrC_CUST_ROLE_TYPE_PURCHASER) :
                new ObjectParameter("pchrC_CUST_ROLE_TYPE_PURCHASER", typeof(string));
    
            var pbitC_FLAG_ONParameter = pbitC_FLAG_ON.HasValue ?
                new ObjectParameter("pbitC_FLAG_ON", pbitC_FLAG_ON) :
                new ObjectParameter("pbitC_FLAG_ON", typeof(bool));
    
            var pchrC_SERVICE_TYPE_RENTALParameter = pchrC_SERVICE_TYPE_RENTAL != null ?
                new ObjectParameter("pchrC_SERVICE_TYPE_RENTAL", pchrC_SERVICE_TYPE_RENTAL) :
                new ObjectParameter("pchrC_SERVICE_TYPE_RENTAL", typeof(string));
    
            var pchrC_SERVICE_TYPE_SALEParameter = pchrC_SERVICE_TYPE_SALE != null ?
                new ObjectParameter("pchrC_SERVICE_TYPE_SALE", pchrC_SERVICE_TYPE_SALE) :
                new ObjectParameter("pchrC_SERVICE_TYPE_SALE", typeof(string));
    
            var pchrC_CONTRACT_STATUS_BEF_STARTParameter = pchrC_CONTRACT_STATUS_BEF_START != null ?
                new ObjectParameter("pchrC_CONTRACT_STATUS_BEF_START", pchrC_CONTRACT_STATUS_BEF_START) :
                new ObjectParameter("pchrC_CONTRACT_STATUS_BEF_START", typeof(string));
    
            var pchrC_CONTRACT_STATUS_CANCELParameter = pchrC_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("pchrC_CONTRACT_STATUS_CANCEL", pchrC_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("pchrC_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var pchrC_CONTRACT_STATUS_ENDParameter = pchrC_CONTRACT_STATUS_END != null ?
                new ObjectParameter("pchrC_CONTRACT_STATUS_END", pchrC_CONTRACT_STATUS_END) :
                new ObjectParameter("pchrC_CONTRACT_STATUS_END", typeof(string));
    
            var c_SALE_CHANGE_TYPE_NEW_SALEParameter = c_SALE_CHANGE_TYPE_NEW_SALE != null ?
                new ObjectParameter("C_SALE_CHANGE_TYPE_NEW_SALE", c_SALE_CHANGE_TYPE_NEW_SALE) :
                new ObjectParameter("C_SALE_CHANGE_TYPE_NEW_SALE", typeof(string));
    
            var c_CUST_TYPE_JURISTICParameter = c_CUST_TYPE_JURISTIC != null ?
                new ObjectParameter("C_CUST_TYPE_JURISTIC", c_CUST_TYPE_JURISTIC) :
                new ObjectParameter("C_CUST_TYPE_JURISTIC", typeof(string));
    
            var stopDateFromParameter = stopDateFrom.HasValue ?
                new ObjectParameter("StopDateFrom", stopDateFrom) :
                new ObjectParameter("StopDateFrom", typeof(System.DateTime));
    
            var stopDateToParameter = stopDateTo.HasValue ?
                new ObjectParameter("StopDateTo", stopDateTo) :
                new ObjectParameter("StopDateTo", typeof(System.DateTime));
    
            var cancelDateFromParameter = cancelDateFrom.HasValue ?
                new ObjectParameter("CancelDateFrom", cancelDateFrom) :
                new ObjectParameter("CancelDateFrom", typeof(System.DateTime));
    
            var cancelDateToParameter = cancelDateTo.HasValue ?
                new ObjectParameter("CancelDateTo", cancelDateTo) :
                new ObjectParameter("CancelDateTo", typeof(System.DateTime));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractList>("GetContractListForSearchInfo", pchrRoleTypeContractTargetParameter, pchrRoleTypePurchaserParameter, pchrRoleTypeRealCustomerParameter, pchrServiceTypeCodeParameter, pchrCustomerCodeParameter, pchrGroupCodeParameter, pchrSiteCodeParameter, pchvContractCodeParameter, pchvUserCodeParameter, pchvPlanCodeParameter, pchvProjectCodeParameter, pchrnCustomerNameParameter, pchrnBranchNameParameter, pchrnGroupNameParameter, pchrCustomerStatusParameter, pchrCustomerTypeCodeParameter, pchrCompanyTypeCodeParameter, pchrnIDNoParameter, pchrRegionCodeParameter, pchrBusinessTypeCodeParameter, pchrnCust_AddressParameter, pchrnCust_AlleyParameter, pchrnCust_RoadParameter, pchrnCust_SubDistrictParameter, pchrCust_ProvinceCodeParameter, pchrCust_DistrictCodeParameter, pchrCust_ZipCodeParameter, pchrnCust_PhoneNoParameter, pchrnCust_FaxNoParameter, pchrnSiteNameParameter, pchrnSite_AddressParameter, pchrnSite_AlleyParameter, pchrnSite_RoadParameter, pchrnSite_SubDistrictParameter, pchrSite_ProvinceCodeParameter, pchrSite_DistrictCodeParameter, pchrSite_ZipCodeParameter, pchrnSite_PhoneNoParameter, pdtmOperationDate_FromParameter, pdtmOperationDate_ToParameter, pdtmCustAcceptDate_FromParameter, pdtmCustAcceptDate_ToParameter, pdtmInstallationCompleteDate_FromParameter, pdtmInstallationCompleteDate_ToParameter, pchvContractOfficeCodeParameter, pchvdsTransDataOfficeCodeParameter, pchvOperationOfficeCodeParameter, pchvSalesmanEmpNo1Parameter, pchvSalesmanEmpName1Parameter, pchrProductCodeParameter, pchrChangeTypeCodeParameter, pchrProcessManageStatusCodeParameter, pchrStartTypeCodeParameter, pchvC_RENTAL_CHANGE_TYPEParameter, pchvC_SALE_CHANGE_TYPEParameter, pchvC_SALE_PROC_MANAGE_STATUSParameter, pchrC_CUST_ROLE_TYPE_CONTRACT_TARGETParameter, pchrC_CUST_ROLE_TYPE_REAL_CUSTParameter, pchrC_CUST_ROLE_TYPE_PURCHASERParameter, pbitC_FLAG_ONParameter, pchrC_SERVICE_TYPE_RENTALParameter, pchrC_SERVICE_TYPE_SALEParameter, pchrC_CONTRACT_STATUS_BEF_STARTParameter, pchrC_CONTRACT_STATUS_CANCELParameter, pchrC_CONTRACT_STATUS_ENDParameter, c_SALE_CHANGE_TYPE_NEW_SALEParameter, c_CUST_TYPE_JURISTICParameter, stopDateFromParameter, stopDateToParameter, cancelDateFromParameter, cancelDateToParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<tbs_ContractDocTemplate> GetTbs_ContractDocTemplate(string pDocumentCode)
        {
            var pDocumentCodeParameter = pDocumentCode != null ?
                new ObjectParameter("pDocumentCode", pDocumentCode) :
                new ObjectParameter("pDocumentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ContractDocTemplate>("GetTbs_ContractDocTemplate", pDocumentCodeParameter);
        }
    
        public virtual ObjectResult<tbs_ContractDocTemplate> GetTbs_ContractDocTemplate(string pDocumentCode, MergeOption mergeOption)
        {
            var pDocumentCodeParameter = pDocumentCode != null ?
                new ObjectParameter("pDocumentCode", pDocumentCode) :
                new ObjectParameter("pDocumentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ContractDocTemplate>("GetTbs_ContractDocTemplate", mergeOption, pDocumentCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemo> GetTbt_DocCancelContractMemo(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemo>("GetTbt_DocCancelContractMemo", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemo> GetTbt_DocCancelContractMemo(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemo>("GetTbt_DocCancelContractMemo", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemoDetail> GetTbt_DocCancelContractMemoDetail(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemoDetail>("GetTbt_DocCancelContractMemoDetail", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemoDetail> GetTbt_DocCancelContractMemoDetail(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemoDetail>("GetTbt_DocCancelContractMemoDetail", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> InsertTbt_CancelContractMemo(string xml_CancelContractMemo)
        {
            var xml_CancelContractMemoParameter = xml_CancelContractMemo != null ?
                new ObjectParameter("xml_CancelContractMemo", xml_CancelContractMemo) :
                new ObjectParameter("xml_CancelContractMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("InsertTbt_CancelContractMemo", xml_CancelContractMemoParameter);
        }
    
        public virtual ObjectResult<tbt_CancelContractMemo> InsertTbt_CancelContractMemo(string xml_CancelContractMemo, MergeOption mergeOption)
        {
            var xml_CancelContractMemoParameter = xml_CancelContractMemo != null ?
                new ObjectParameter("xml_CancelContractMemo", xml_CancelContractMemo) :
                new ObjectParameter("xml_CancelContractMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_CancelContractMemo>("InsertTbt_CancelContractMemo", mergeOption, xml_CancelContractMemoParameter);
        }
    
        public virtual ObjectResult<tbs_ContractDocTemplate> InsertTbs_ContractDocTemplate(string xml_ContractDocTemplate)
        {
            var xml_ContractDocTemplateParameter = xml_ContractDocTemplate != null ?
                new ObjectParameter("xml_ContractDocTemplate", xml_ContractDocTemplate) :
                new ObjectParameter("xml_ContractDocTemplate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ContractDocTemplate>("InsertTbs_ContractDocTemplate", xml_ContractDocTemplateParameter);
        }
    
        public virtual ObjectResult<tbs_ContractDocTemplate> InsertTbs_ContractDocTemplate(string xml_ContractDocTemplate, MergeOption mergeOption)
        {
            var xml_ContractDocTemplateParameter = xml_ContractDocTemplate != null ?
                new ObjectParameter("xml_ContractDocTemplate", xml_ContractDocTemplate) :
                new ObjectParameter("xml_ContractDocTemplate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ContractDocTemplate>("InsertTbs_ContractDocTemplate", mergeOption, xml_ContractDocTemplateParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemo> InsertTbt_DocCancelContractMemo(string xml_DocCancelContractMemo)
        {
            var xml_DocCancelContractMemoParameter = xml_DocCancelContractMemo != null ?
                new ObjectParameter("xml_DocCancelContractMemo", xml_DocCancelContractMemo) :
                new ObjectParameter("xml_DocCancelContractMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemo>("InsertTbt_DocCancelContractMemo", xml_DocCancelContractMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemo> InsertTbt_DocCancelContractMemo(string xml_DocCancelContractMemo, MergeOption mergeOption)
        {
            var xml_DocCancelContractMemoParameter = xml_DocCancelContractMemo != null ?
                new ObjectParameter("xml_DocCancelContractMemo", xml_DocCancelContractMemo) :
                new ObjectParameter("xml_DocCancelContractMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemo>("InsertTbt_DocCancelContractMemo", mergeOption, xml_DocCancelContractMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemoDetail> InsertTbt_DocCancelContractMemoDetail(string xml_DocCancelContractMemoDetail)
        {
            var xml_DocCancelContractMemoDetailParameter = xml_DocCancelContractMemoDetail != null ?
                new ObjectParameter("xml_DocCancelContractMemoDetail", xml_DocCancelContractMemoDetail) :
                new ObjectParameter("xml_DocCancelContractMemoDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemoDetail>("InsertTbt_DocCancelContractMemoDetail", xml_DocCancelContractMemoDetailParameter);
        }
    
        public virtual ObjectResult<tbt_DocCancelContractMemoDetail> InsertTbt_DocCancelContractMemoDetail(string xml_DocCancelContractMemoDetail, MergeOption mergeOption)
        {
            var xml_DocCancelContractMemoDetailParameter = xml_DocCancelContractMemoDetail != null ?
                new ObjectParameter("xml_DocCancelContractMemoDetail", xml_DocCancelContractMemoDetail) :
                new ObjectParameter("xml_DocCancelContractMemoDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocCancelContractMemoDetail>("InsertTbt_DocCancelContractMemoDetail", mergeOption, xml_DocCancelContractMemoDetailParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> GetTbt_ContractDocument(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("GetTbt_ContractDocument", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> GetTbt_ContractDocument(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("GetTbt_ContractDocument", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> InsertTbt_ContractDocument(string xml_ContractDocument)
        {
            var xml_ContractDocumentParameter = xml_ContractDocument != null ?
                new ObjectParameter("xml_ContractDocument", xml_ContractDocument) :
                new ObjectParameter("xml_ContractDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("InsertTbt_ContractDocument", xml_ContractDocumentParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> InsertTbt_ContractDocument(string xml_ContractDocument, MergeOption mergeOption)
        {
            var xml_ContractDocumentParameter = xml_ContractDocument != null ?
                new ObjectParameter("xml_ContractDocument", xml_ContractDocument) :
                new ObjectParameter("xml_ContractDocument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("InsertTbt_ContractDocument", mergeOption, xml_ContractDocumentParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeMemo> InsertTbt_DocChangeMemo(string xml_DocChangeMemo)
        {
            var xml_DocChangeMemoParameter = xml_DocChangeMemo != null ?
                new ObjectParameter("xml_DocChangeMemo", xml_DocChangeMemo) :
                new ObjectParameter("xml_DocChangeMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeMemo>("InsertTbt_DocChangeMemo", xml_DocChangeMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeMemo> InsertTbt_DocChangeMemo(string xml_DocChangeMemo, MergeOption mergeOption)
        {
            var xml_DocChangeMemoParameter = xml_DocChangeMemo != null ?
                new ObjectParameter("xml_DocChangeMemo", xml_DocChangeMemo) :
                new ObjectParameter("xml_DocChangeMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeMemo>("InsertTbt_DocChangeMemo", mergeOption, xml_DocChangeMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeNotice> InsertTbt_DocChangeNotice(string xml_DocChangeNotice)
        {
            var xml_DocChangeNoticeParameter = xml_DocChangeNotice != null ?
                new ObjectParameter("xml_DocChangeNotice", xml_DocChangeNotice) :
                new ObjectParameter("xml_DocChangeNotice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeNotice>("InsertTbt_DocChangeNotice", xml_DocChangeNoticeParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeNotice> InsertTbt_DocChangeNotice(string xml_DocChangeNotice, MergeOption mergeOption)
        {
            var xml_DocChangeNoticeParameter = xml_DocChangeNotice != null ?
                new ObjectParameter("xml_DocChangeNotice", xml_DocChangeNotice) :
                new ObjectParameter("xml_DocChangeNotice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeNotice>("InsertTbt_DocChangeNotice", mergeOption, xml_DocChangeNoticeParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeFeeMemo> InsertTbt_DocChangeFeeMemo(string xml_DocChangeFeeMemo)
        {
            var xml_DocChangeFeeMemoParameter = xml_DocChangeFeeMemo != null ?
                new ObjectParameter("xml_DocChangeFeeMemo", xml_DocChangeFeeMemo) :
                new ObjectParameter("xml_DocChangeFeeMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeFeeMemo>("InsertTbt_DocChangeFeeMemo", xml_DocChangeFeeMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeFeeMemo> InsertTbt_DocChangeFeeMemo(string xml_DocChangeFeeMemo, MergeOption mergeOption)
        {
            var xml_DocChangeFeeMemoParameter = xml_DocChangeFeeMemo != null ?
                new ObjectParameter("xml_DocChangeFeeMemo", xml_DocChangeFeeMemo) :
                new ObjectParameter("xml_DocChangeFeeMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeFeeMemo>("InsertTbt_DocChangeFeeMemo", mergeOption, xml_DocChangeFeeMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocContractReport> InsertTbt_DocContractReport(string xml_DocContractReport)
        {
            var xml_DocContractReportParameter = xml_DocContractReport != null ?
                new ObjectParameter("xml_DocContractReport", xml_DocContractReport) :
                new ObjectParameter("xml_DocContractReport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocContractReport>("InsertTbt_DocContractReport", xml_DocContractReportParameter);
        }
    
        public virtual ObjectResult<tbt_DocContractReport> InsertTbt_DocContractReport(string xml_DocContractReport, MergeOption mergeOption)
        {
            var xml_DocContractReportParameter = xml_DocContractReport != null ?
                new ObjectParameter("xml_DocContractReport", xml_DocContractReport) :
                new ObjectParameter("xml_DocContractReport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocContractReport>("InsertTbt_DocContractReport", mergeOption, xml_DocContractReportParameter);
        }
    
        public virtual ObjectResult<tbt_DocConfirmCurrentInstrumentMemo> InsertTbt_DocConfirmCurrentInstrumentMemo(string xml_DocConfirmCurrentInstrumentMemo)
        {
            var xml_DocConfirmCurrentInstrumentMemoParameter = xml_DocConfirmCurrentInstrumentMemo != null ?
                new ObjectParameter("xml_DocConfirmCurrentInstrumentMemo", xml_DocConfirmCurrentInstrumentMemo) :
                new ObjectParameter("xml_DocConfirmCurrentInstrumentMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocConfirmCurrentInstrumentMemo>("InsertTbt_DocConfirmCurrentInstrumentMemo", xml_DocConfirmCurrentInstrumentMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocConfirmCurrentInstrumentMemo> InsertTbt_DocConfirmCurrentInstrumentMemo(string xml_DocConfirmCurrentInstrumentMemo, MergeOption mergeOption)
        {
            var xml_DocConfirmCurrentInstrumentMemoParameter = xml_DocConfirmCurrentInstrumentMemo != null ?
                new ObjectParameter("xml_DocConfirmCurrentInstrumentMemo", xml_DocConfirmCurrentInstrumentMemo) :
                new ObjectParameter("xml_DocConfirmCurrentInstrumentMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocConfirmCurrentInstrumentMemo>("InsertTbt_DocConfirmCurrentInstrumentMemo", mergeOption, xml_DocConfirmCurrentInstrumentMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocInstrumentDetails> InsertTbt_DocInstrumentDetails(string xml_DocInstrumentDetails)
        {
            var xml_DocInstrumentDetailsParameter = xml_DocInstrumentDetails != null ?
                new ObjectParameter("xml_DocInstrumentDetails", xml_DocInstrumentDetails) :
                new ObjectParameter("xml_DocInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocInstrumentDetails>("InsertTbt_DocInstrumentDetails", xml_DocInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_DocInstrumentDetails> InsertTbt_DocInstrumentDetails(string xml_DocInstrumentDetails, MergeOption mergeOption)
        {
            var xml_DocInstrumentDetailsParameter = xml_DocInstrumentDetails != null ?
                new ObjectParameter("xml_DocInstrumentDetails", xml_DocInstrumentDetails) :
                new ObjectParameter("xml_DocInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocInstrumentDetails>("InsertTbt_DocInstrumentDetails", mergeOption, xml_DocInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> GetContractDocHeaderByQuotationCode(string pchrQuotationTargetCode, string pchrAlphabet, string pchrContractDocOCC)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrContractDocOCCParameter = pchrContractDocOCC != null ?
                new ObjectParameter("pchrContractDocOCC", pchrContractDocOCC) :
                new ObjectParameter("pchrContractDocOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("GetContractDocHeaderByQuotationCode", pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pchrContractDocOCCParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> GetContractDocHeaderByQuotationCode(string pchrQuotationTargetCode, string pchrAlphabet, string pchrContractDocOCC, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            var pchrAlphabetParameter = pchrAlphabet != null ?
                new ObjectParameter("pchrAlphabet", pchrAlphabet) :
                new ObjectParameter("pchrAlphabet", typeof(string));
    
            var pchrContractDocOCCParameter = pchrContractDocOCC != null ?
                new ObjectParameter("pchrContractDocOCC", pchrContractDocOCC) :
                new ObjectParameter("pchrContractDocOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("GetContractDocHeaderByQuotationCode", mergeOption, pchrQuotationTargetCodeParameter, pchrAlphabetParameter, pchrContractDocOCCParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> UpdateTbt_ContractDocument(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("UpdateTbt_ContractDocument", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> UpdateTbt_ContractDocument(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("UpdateTbt_ContractDocument", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsUsedCustomer(string pchrCustCode)
        {
            var pchrCustCodeParameter = pchrCustCode != null ?
                new ObjectParameter("pchrCustCode", pchrCustCode) :
                new ObjectParameter("pchrCustCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsUsedCustomer", pchrCustCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IsUsedSite(string pchrSiteCode)
        {
            var pchrSiteCodeParameter = pchrSiteCode != null ?
                new ObjectParameter("pchrSiteCode", pchrSiteCode) :
                new ObjectParameter("pchrSiteCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IsUsedSite", pchrSiteCodeParameter);
        }
    
        public virtual ObjectResult<dtARList> GetARListByRole(string aRStatus, string specfyPeriod, Nullable<System.DateTime> specifyPeriodFrom, Nullable<System.DateTime> specifyPeriodTo, string empNo, string aRRole, Nullable<System.DateTime> currentdate, string c_AR_RELEVANT_TYPE_CONTRACT, string c_AR_RELEVANT_TYPE_QUOTATION, string c_AR_RELEVANT_TYPE_SITE, string c_CUST_ROLE_TYPE_REAL_CUST, string c_AR_ROLE_APPROVER, string c_AR_ROLE_AUDITOR, string c_AR_ROLE_REQUESTER, string c_AR_TYPE, string c_AR_STATUS, string c_DEADLINE_TIME_TYPE, string c_AR_SEARCH_STATUS_COMPLETE, string c_AR_SEARCH_STATUS_HANDLING, string c_AR_SEARCH_PERIOD_REQUEST_DATE, string c_AR_SEARCH_PERIOD_APPROVE_DATE, string c_AR_SEARCH_PERIOD_DUEDATE, string c_AR_SEARCH_PERIOD_LASTACTION_DATE, string c_AR_STATUS_INSTRUCTED, string c_AR_STATUS_REJECTED, string c_AR_STATUS_APPROVED)
        {
            var aRStatusParameter = aRStatus != null ?
                new ObjectParameter("ARStatus", aRStatus) :
                new ObjectParameter("ARStatus", typeof(string));
    
            var specfyPeriodParameter = specfyPeriod != null ?
                new ObjectParameter("SpecfyPeriod", specfyPeriod) :
                new ObjectParameter("SpecfyPeriod", typeof(string));
    
            var specifyPeriodFromParameter = specifyPeriodFrom.HasValue ?
                new ObjectParameter("SpecifyPeriodFrom", specifyPeriodFrom) :
                new ObjectParameter("SpecifyPeriodFrom", typeof(System.DateTime));
    
            var specifyPeriodToParameter = specifyPeriodTo.HasValue ?
                new ObjectParameter("SpecifyPeriodTo", specifyPeriodTo) :
                new ObjectParameter("SpecifyPeriodTo", typeof(System.DateTime));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(string));
    
            var aRRoleParameter = aRRole != null ?
                new ObjectParameter("ARRole", aRRole) :
                new ObjectParameter("ARRole", typeof(string));
    
            var currentdateParameter = currentdate.HasValue ?
                new ObjectParameter("currentdate", currentdate) :
                new ObjectParameter("currentdate", typeof(System.DateTime));
    
            var c_AR_RELEVANT_TYPE_CONTRACTParameter = c_AR_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", c_AR_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_AR_RELEVANT_TYPE_QUOTATIONParameter = c_AR_RELEVANT_TYPE_QUOTATION != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", c_AR_RELEVANT_TYPE_QUOTATION) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", typeof(string));
    
            var c_AR_RELEVANT_TYPE_SITEParameter = c_AR_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", c_AR_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_CUST_ROLE_TYPE_REAL_CUSTParameter = c_CUST_ROLE_TYPE_REAL_CUST != null ?
                new ObjectParameter("C_CUST_ROLE_TYPE_REAL_CUST", c_CUST_ROLE_TYPE_REAL_CUST) :
                new ObjectParameter("C_CUST_ROLE_TYPE_REAL_CUST", typeof(string));
    
            var c_AR_ROLE_APPROVERParameter = c_AR_ROLE_APPROVER != null ?
                new ObjectParameter("C_AR_ROLE_APPROVER", c_AR_ROLE_APPROVER) :
                new ObjectParameter("C_AR_ROLE_APPROVER", typeof(string));
    
            var c_AR_ROLE_AUDITORParameter = c_AR_ROLE_AUDITOR != null ?
                new ObjectParameter("C_AR_ROLE_AUDITOR", c_AR_ROLE_AUDITOR) :
                new ObjectParameter("C_AR_ROLE_AUDITOR", typeof(string));
    
            var c_AR_ROLE_REQUESTERParameter = c_AR_ROLE_REQUESTER != null ?
                new ObjectParameter("C_AR_ROLE_REQUESTER", c_AR_ROLE_REQUESTER) :
                new ObjectParameter("C_AR_ROLE_REQUESTER", typeof(string));
    
            var c_AR_TYPEParameter = c_AR_TYPE != null ?
                new ObjectParameter("C_AR_TYPE", c_AR_TYPE) :
                new ObjectParameter("C_AR_TYPE", typeof(string));
    
            var c_AR_STATUSParameter = c_AR_STATUS != null ?
                new ObjectParameter("C_AR_STATUS", c_AR_STATUS) :
                new ObjectParameter("C_AR_STATUS", typeof(string));
    
            var c_DEADLINE_TIME_TYPEParameter = c_DEADLINE_TIME_TYPE != null ?
                new ObjectParameter("C_DEADLINE_TIME_TYPE", c_DEADLINE_TIME_TYPE) :
                new ObjectParameter("C_DEADLINE_TIME_TYPE", typeof(string));
    
            var c_AR_SEARCH_STATUS_COMPLETEParameter = c_AR_SEARCH_STATUS_COMPLETE != null ?
                new ObjectParameter("C_AR_SEARCH_STATUS_COMPLETE", c_AR_SEARCH_STATUS_COMPLETE) :
                new ObjectParameter("C_AR_SEARCH_STATUS_COMPLETE", typeof(string));
    
            var c_AR_SEARCH_STATUS_HANDLINGParameter = c_AR_SEARCH_STATUS_HANDLING != null ?
                new ObjectParameter("C_AR_SEARCH_STATUS_HANDLING", c_AR_SEARCH_STATUS_HANDLING) :
                new ObjectParameter("C_AR_SEARCH_STATUS_HANDLING", typeof(string));
    
            var c_AR_SEARCH_PERIOD_REQUEST_DATEParameter = c_AR_SEARCH_PERIOD_REQUEST_DATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_REQUEST_DATE", c_AR_SEARCH_PERIOD_REQUEST_DATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_REQUEST_DATE", typeof(string));
    
            var c_AR_SEARCH_PERIOD_APPROVE_DATEParameter = c_AR_SEARCH_PERIOD_APPROVE_DATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_APPROVE_DATE", c_AR_SEARCH_PERIOD_APPROVE_DATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_APPROVE_DATE", typeof(string));
    
            var c_AR_SEARCH_PERIOD_DUEDATEParameter = c_AR_SEARCH_PERIOD_DUEDATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_DUEDATE", c_AR_SEARCH_PERIOD_DUEDATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_DUEDATE", typeof(string));
    
            var c_AR_SEARCH_PERIOD_LASTACTION_DATEParameter = c_AR_SEARCH_PERIOD_LASTACTION_DATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_LASTACTION_DATE", c_AR_SEARCH_PERIOD_LASTACTION_DATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_LASTACTION_DATE", typeof(string));
    
            var c_AR_STATUS_INSTRUCTEDParameter = c_AR_STATUS_INSTRUCTED != null ?
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", c_AR_STATUS_INSTRUCTED) :
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", typeof(string));
    
            var c_AR_STATUS_REJECTEDParameter = c_AR_STATUS_REJECTED != null ?
                new ObjectParameter("C_AR_STATUS_REJECTED", c_AR_STATUS_REJECTED) :
                new ObjectParameter("C_AR_STATUS_REJECTED", typeof(string));
    
            var c_AR_STATUS_APPROVEDParameter = c_AR_STATUS_APPROVED != null ?
                new ObjectParameter("C_AR_STATUS_APPROVED", c_AR_STATUS_APPROVED) :
                new ObjectParameter("C_AR_STATUS_APPROVED", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtARList>("GetARListByRole", aRStatusParameter, specfyPeriodParameter, specifyPeriodFromParameter, specifyPeriodToParameter, empNoParameter, aRRoleParameter, currentdateParameter, c_AR_RELEVANT_TYPE_CONTRACTParameter, c_AR_RELEVANT_TYPE_QUOTATIONParameter, c_AR_RELEVANT_TYPE_SITEParameter, c_CUST_ROLE_TYPE_REAL_CUSTParameter, c_AR_ROLE_APPROVERParameter, c_AR_ROLE_AUDITORParameter, c_AR_ROLE_REQUESTERParameter, c_AR_TYPEParameter, c_AR_STATUSParameter, c_DEADLINE_TIME_TYPEParameter, c_AR_SEARCH_STATUS_COMPLETEParameter, c_AR_SEARCH_STATUS_HANDLINGParameter, c_AR_SEARCH_PERIOD_REQUEST_DATEParameter, c_AR_SEARCH_PERIOD_APPROVE_DATEParameter, c_AR_SEARCH_PERIOD_DUEDATEParameter, c_AR_SEARCH_PERIOD_LASTACTION_DATEParameter, c_AR_STATUS_INSTRUCTEDParameter, c_AR_STATUS_REJECTEDParameter, c_AR_STATUS_APPROVEDParameter);
        }
    
        public virtual ObjectResult<dtARList> SearchARList(string customerName, string projectName, string requestNo, string approveNo, string aRTitleType, string aRType, string aRStatusHandling, string aRStatusComplete, string aROfficeCode, string specfyPeriod, Nullable<System.DateTime> specifyPeriodFrom, Nullable<System.DateTime> specifyPeriodTo, string requester, string approver, string auditor, string contractTargetPurchaserName, string siteName, string customerGroupName, string contractCode, string userCode, string quotationTargetCode, string contractOfficeCode, string operationOfficeCode, string contractStatus, string contractType, string c_AR_ROLE_APPROVER, string c_AR_ROLE_REQUESTER, string c_AR_ROLE_AUDITOR, string c_AR_TYPE, string c_AR_STATUS, string c_DEADLINE_TIME_TYPE, string c_AR_SEARCH_PERIOD_REQUEST_DATE, string c_AR_SEARCH_PERIOD_APPROVE_DATE, string c_AR_SEARCH_PERIOD_DUEDATE, string c_AR_SEARCH_PERIOD_LASTACTION_DATE, string c_AR_RELEVANT_TYPE_CUSTOMER, string c_AR_RELEVANT_TYPE_SITE, string c_AR_RELEVANT_TYPE_PROJECT, string c_AR_RELEVANT_TYPE_CONTRACT, string c_AR_RELEVANT_TYPE_QUOTATION, string c_CUST_ROLE_TYPE_CONTRACT_TARGET, string c_CUST_ROLE_TYPE_REAL_CUST, string c_AR_STATUS_INSTRUCTED, string c_AR_STATUS_REJECTED, string c_AR_STATUS_APPROVED)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var requestNoParameter = requestNo != null ?
                new ObjectParameter("RequestNo", requestNo) :
                new ObjectParameter("RequestNo", typeof(string));
    
            var approveNoParameter = approveNo != null ?
                new ObjectParameter("ApproveNo", approveNo) :
                new ObjectParameter("ApproveNo", typeof(string));
    
            var aRTitleTypeParameter = aRTitleType != null ?
                new ObjectParameter("ARTitleType", aRTitleType) :
                new ObjectParameter("ARTitleType", typeof(string));
    
            var aRTypeParameter = aRType != null ?
                new ObjectParameter("ARType", aRType) :
                new ObjectParameter("ARType", typeof(string));
    
            var aRStatusHandlingParameter = aRStatusHandling != null ?
                new ObjectParameter("ARStatusHandling", aRStatusHandling) :
                new ObjectParameter("ARStatusHandling", typeof(string));
    
            var aRStatusCompleteParameter = aRStatusComplete != null ?
                new ObjectParameter("ARStatusComplete", aRStatusComplete) :
                new ObjectParameter("ARStatusComplete", typeof(string));
    
            var aROfficeCodeParameter = aROfficeCode != null ?
                new ObjectParameter("AROfficeCode", aROfficeCode) :
                new ObjectParameter("AROfficeCode", typeof(string));
    
            var specfyPeriodParameter = specfyPeriod != null ?
                new ObjectParameter("SpecfyPeriod", specfyPeriod) :
                new ObjectParameter("SpecfyPeriod", typeof(string));
    
            var specifyPeriodFromParameter = specifyPeriodFrom.HasValue ?
                new ObjectParameter("SpecifyPeriodFrom", specifyPeriodFrom) :
                new ObjectParameter("SpecifyPeriodFrom", typeof(System.DateTime));
    
            var specifyPeriodToParameter = specifyPeriodTo.HasValue ?
                new ObjectParameter("SpecifyPeriodTo", specifyPeriodTo) :
                new ObjectParameter("SpecifyPeriodTo", typeof(System.DateTime));
    
            var requesterParameter = requester != null ?
                new ObjectParameter("Requester", requester) :
                new ObjectParameter("Requester", typeof(string));
    
            var approverParameter = approver != null ?
                new ObjectParameter("Approver", approver) :
                new ObjectParameter("Approver", typeof(string));
    
            var auditorParameter = auditor != null ?
                new ObjectParameter("Auditor", auditor) :
                new ObjectParameter("Auditor", typeof(string));
    
            var contractTargetPurchaserNameParameter = contractTargetPurchaserName != null ?
                new ObjectParameter("ContractTargetPurchaserName", contractTargetPurchaserName) :
                new ObjectParameter("ContractTargetPurchaserName", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var customerGroupNameParameter = customerGroupName != null ?
                new ObjectParameter("CustomerGroupName", customerGroupName) :
                new ObjectParameter("CustomerGroupName", typeof(string));
    
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var contractOfficeCodeParameter = contractOfficeCode != null ?
                new ObjectParameter("ContractOfficeCode", contractOfficeCode) :
                new ObjectParameter("ContractOfficeCode", typeof(string));
    
            var operationOfficeCodeParameter = operationOfficeCode != null ?
                new ObjectParameter("OperationOfficeCode", operationOfficeCode) :
                new ObjectParameter("OperationOfficeCode", typeof(string));
    
            var contractStatusParameter = contractStatus != null ?
                new ObjectParameter("ContractStatus", contractStatus) :
                new ObjectParameter("ContractStatus", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var c_AR_ROLE_APPROVERParameter = c_AR_ROLE_APPROVER != null ?
                new ObjectParameter("C_AR_ROLE_APPROVER", c_AR_ROLE_APPROVER) :
                new ObjectParameter("C_AR_ROLE_APPROVER", typeof(string));
    
            var c_AR_ROLE_REQUESTERParameter = c_AR_ROLE_REQUESTER != null ?
                new ObjectParameter("C_AR_ROLE_REQUESTER", c_AR_ROLE_REQUESTER) :
                new ObjectParameter("C_AR_ROLE_REQUESTER", typeof(string));
    
            var c_AR_ROLE_AUDITORParameter = c_AR_ROLE_AUDITOR != null ?
                new ObjectParameter("C_AR_ROLE_AUDITOR", c_AR_ROLE_AUDITOR) :
                new ObjectParameter("C_AR_ROLE_AUDITOR", typeof(string));
    
            var c_AR_TYPEParameter = c_AR_TYPE != null ?
                new ObjectParameter("C_AR_TYPE", c_AR_TYPE) :
                new ObjectParameter("C_AR_TYPE", typeof(string));
    
            var c_AR_STATUSParameter = c_AR_STATUS != null ?
                new ObjectParameter("C_AR_STATUS", c_AR_STATUS) :
                new ObjectParameter("C_AR_STATUS", typeof(string));
    
            var c_DEADLINE_TIME_TYPEParameter = c_DEADLINE_TIME_TYPE != null ?
                new ObjectParameter("C_DEADLINE_TIME_TYPE", c_DEADLINE_TIME_TYPE) :
                new ObjectParameter("C_DEADLINE_TIME_TYPE", typeof(string));
    
            var c_AR_SEARCH_PERIOD_REQUEST_DATEParameter = c_AR_SEARCH_PERIOD_REQUEST_DATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_REQUEST_DATE", c_AR_SEARCH_PERIOD_REQUEST_DATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_REQUEST_DATE", typeof(string));
    
            var c_AR_SEARCH_PERIOD_APPROVE_DATEParameter = c_AR_SEARCH_PERIOD_APPROVE_DATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_APPROVE_DATE", c_AR_SEARCH_PERIOD_APPROVE_DATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_APPROVE_DATE", typeof(string));
    
            var c_AR_SEARCH_PERIOD_DUEDATEParameter = c_AR_SEARCH_PERIOD_DUEDATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_DUEDATE", c_AR_SEARCH_PERIOD_DUEDATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_DUEDATE", typeof(string));
    
            var c_AR_SEARCH_PERIOD_LASTACTION_DATEParameter = c_AR_SEARCH_PERIOD_LASTACTION_DATE != null ?
                new ObjectParameter("C_AR_SEARCH_PERIOD_LASTACTION_DATE", c_AR_SEARCH_PERIOD_LASTACTION_DATE) :
                new ObjectParameter("C_AR_SEARCH_PERIOD_LASTACTION_DATE", typeof(string));
    
            var c_AR_RELEVANT_TYPE_CUSTOMERParameter = c_AR_RELEVANT_TYPE_CUSTOMER != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CUSTOMER", c_AR_RELEVANT_TYPE_CUSTOMER) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CUSTOMER", typeof(string));
    
            var c_AR_RELEVANT_TYPE_SITEParameter = c_AR_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", c_AR_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_AR_RELEVANT_TYPE_PROJECTParameter = c_AR_RELEVANT_TYPE_PROJECT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_PROJECT", c_AR_RELEVANT_TYPE_PROJECT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_PROJECT", typeof(string));
    
            var c_AR_RELEVANT_TYPE_CONTRACTParameter = c_AR_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", c_AR_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_AR_RELEVANT_TYPE_QUOTATIONParameter = c_AR_RELEVANT_TYPE_QUOTATION != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", c_AR_RELEVANT_TYPE_QUOTATION) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", typeof(string));
    
            var c_CUST_ROLE_TYPE_CONTRACT_TARGETParameter = c_CUST_ROLE_TYPE_CONTRACT_TARGET != null ?
                new ObjectParameter("C_CUST_ROLE_TYPE_CONTRACT_TARGET", c_CUST_ROLE_TYPE_CONTRACT_TARGET) :
                new ObjectParameter("C_CUST_ROLE_TYPE_CONTRACT_TARGET", typeof(string));
    
            var c_CUST_ROLE_TYPE_REAL_CUSTParameter = c_CUST_ROLE_TYPE_REAL_CUST != null ?
                new ObjectParameter("C_CUST_ROLE_TYPE_REAL_CUST", c_CUST_ROLE_TYPE_REAL_CUST) :
                new ObjectParameter("C_CUST_ROLE_TYPE_REAL_CUST", typeof(string));
    
            var c_AR_STATUS_INSTRUCTEDParameter = c_AR_STATUS_INSTRUCTED != null ?
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", c_AR_STATUS_INSTRUCTED) :
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", typeof(string));
    
            var c_AR_STATUS_REJECTEDParameter = c_AR_STATUS_REJECTED != null ?
                new ObjectParameter("C_AR_STATUS_REJECTED", c_AR_STATUS_REJECTED) :
                new ObjectParameter("C_AR_STATUS_REJECTED", typeof(string));
    
            var c_AR_STATUS_APPROVEDParameter = c_AR_STATUS_APPROVED != null ?
                new ObjectParameter("C_AR_STATUS_APPROVED", c_AR_STATUS_APPROVED) :
                new ObjectParameter("C_AR_STATUS_APPROVED", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtARList>("SearchARList", customerNameParameter, projectNameParameter, requestNoParameter, approveNoParameter, aRTitleTypeParameter, aRTypeParameter, aRStatusHandlingParameter, aRStatusCompleteParameter, aROfficeCodeParameter, specfyPeriodParameter, specifyPeriodFromParameter, specifyPeriodToParameter, requesterParameter, approverParameter, auditorParameter, contractTargetPurchaserNameParameter, siteNameParameter, customerGroupNameParameter, contractCodeParameter, userCodeParameter, quotationTargetCodeParameter, contractOfficeCodeParameter, operationOfficeCodeParameter, contractStatusParameter, contractTypeParameter, c_AR_ROLE_APPROVERParameter, c_AR_ROLE_REQUESTERParameter, c_AR_ROLE_AUDITORParameter, c_AR_TYPEParameter, c_AR_STATUSParameter, c_DEADLINE_TIME_TYPEParameter, c_AR_SEARCH_PERIOD_REQUEST_DATEParameter, c_AR_SEARCH_PERIOD_APPROVE_DATEParameter, c_AR_SEARCH_PERIOD_DUEDATEParameter, c_AR_SEARCH_PERIOD_LASTACTION_DATEParameter, c_AR_RELEVANT_TYPE_CUSTOMERParameter, c_AR_RELEVANT_TYPE_SITEParameter, c_AR_RELEVANT_TYPE_PROJECTParameter, c_AR_RELEVANT_TYPE_CONTRACTParameter, c_AR_RELEVANT_TYPE_QUOTATIONParameter, c_CUST_ROLE_TYPE_CONTRACT_TARGETParameter, c_CUST_ROLE_TYPE_REAL_CUSTParameter, c_AR_STATUS_INSTRUCTEDParameter, c_AR_STATUS_REJECTEDParameter, c_AR_STATUS_APPROVEDParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectPurchaserCustomer> InsertTbt_ProjectPurchaserCustomer(string xml_Tbt_ProjectPurchaserCustomer)
        {
            var xml_Tbt_ProjectPurchaserCustomerParameter = xml_Tbt_ProjectPurchaserCustomer != null ?
                new ObjectParameter("xml_Tbt_ProjectPurchaserCustomer", xml_Tbt_ProjectPurchaserCustomer) :
                new ObjectParameter("xml_Tbt_ProjectPurchaserCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectPurchaserCustomer>("InsertTbt_ProjectPurchaserCustomer", xml_Tbt_ProjectPurchaserCustomerParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectPurchaserCustomer> InsertTbt_ProjectPurchaserCustomer(string xml_Tbt_ProjectPurchaserCustomer, MergeOption mergeOption)
        {
            var xml_Tbt_ProjectPurchaserCustomerParameter = xml_Tbt_ProjectPurchaserCustomer != null ?
                new ObjectParameter("xml_Tbt_ProjectPurchaserCustomer", xml_Tbt_ProjectPurchaserCustomer) :
                new ObjectParameter("xml_Tbt_ProjectPurchaserCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectPurchaserCustomer>("InsertTbt_ProjectPurchaserCustomer", mergeOption, xml_Tbt_ProjectPurchaserCustomerParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectExpectedInstrumentDetails> InsertTbt_ProjectExpectedInstrumentDetail(string xml_dotbt_ProjectExpectedInstrumentDetails)
        {
            var xml_dotbt_ProjectExpectedInstrumentDetailsParameter = xml_dotbt_ProjectExpectedInstrumentDetails != null ?
                new ObjectParameter("xml_dotbt_ProjectExpectedInstrumentDetails", xml_dotbt_ProjectExpectedInstrumentDetails) :
                new ObjectParameter("xml_dotbt_ProjectExpectedInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectExpectedInstrumentDetails>("InsertTbt_ProjectExpectedInstrumentDetail", xml_dotbt_ProjectExpectedInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectExpectedInstrumentDetails> InsertTbt_ProjectExpectedInstrumentDetail(string xml_dotbt_ProjectExpectedInstrumentDetails, MergeOption mergeOption)
        {
            var xml_dotbt_ProjectExpectedInstrumentDetailsParameter = xml_dotbt_ProjectExpectedInstrumentDetails != null ?
                new ObjectParameter("xml_dotbt_ProjectExpectedInstrumentDetails", xml_dotbt_ProjectExpectedInstrumentDetails) :
                new ObjectParameter("xml_dotbt_ProjectExpectedInstrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectExpectedInstrumentDetails>("InsertTbt_ProjectExpectedInstrumentDetail", mergeOption, xml_dotbt_ProjectExpectedInstrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> InsertTbt_ProjectOtherRalatedCompany(string xml_dotbt_ProjectOtherRalatedCompany)
        {
            var xml_dotbt_ProjectOtherRalatedCompanyParameter = xml_dotbt_ProjectOtherRalatedCompany != null ?
                new ObjectParameter("xml_dotbt_ProjectOtherRalatedCompany", xml_dotbt_ProjectOtherRalatedCompany) :
                new ObjectParameter("xml_dotbt_ProjectOtherRalatedCompany", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("InsertTbt_ProjectOtherRalatedCompany", xml_dotbt_ProjectOtherRalatedCompanyParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> InsertTbt_ProjectOtherRalatedCompany(string xml_dotbt_ProjectOtherRalatedCompany, MergeOption mergeOption)
        {
            var xml_dotbt_ProjectOtherRalatedCompanyParameter = xml_dotbt_ProjectOtherRalatedCompany != null ?
                new ObjectParameter("xml_dotbt_ProjectOtherRalatedCompany", xml_dotbt_ProjectOtherRalatedCompany) :
                new ObjectParameter("xml_dotbt_ProjectOtherRalatedCompany", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("InsertTbt_ProjectOtherRalatedCompany", mergeOption, xml_dotbt_ProjectOtherRalatedCompanyParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSupportStaffDetails> InsertTbt_ProjectSupportStaffDetail(string xml_Tbt_ProjectSupportStaffDetail)
        {
            var xml_Tbt_ProjectSupportStaffDetailParameter = xml_Tbt_ProjectSupportStaffDetail != null ?
                new ObjectParameter("xml_Tbt_ProjectSupportStaffDetail", xml_Tbt_ProjectSupportStaffDetail) :
                new ObjectParameter("xml_Tbt_ProjectSupportStaffDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSupportStaffDetails>("InsertTbt_ProjectSupportStaffDetail", xml_Tbt_ProjectSupportStaffDetailParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSupportStaffDetails> InsertTbt_ProjectSupportStaffDetail(string xml_Tbt_ProjectSupportStaffDetail, MergeOption mergeOption)
        {
            var xml_Tbt_ProjectSupportStaffDetailParameter = xml_Tbt_ProjectSupportStaffDetail != null ?
                new ObjectParameter("xml_Tbt_ProjectSupportStaffDetail", xml_Tbt_ProjectSupportStaffDetail) :
                new ObjectParameter("xml_Tbt_ProjectSupportStaffDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSupportStaffDetails>("InsertTbt_ProjectSupportStaffDetail", mergeOption, xml_Tbt_ProjectSupportStaffDetailParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSystemDetails> InsertTbt_ProjectSystemDetail(string xml_Tbt_ProjectSystemDetail)
        {
            var xml_Tbt_ProjectSystemDetailParameter = xml_Tbt_ProjectSystemDetail != null ?
                new ObjectParameter("xml_Tbt_ProjectSystemDetail", xml_Tbt_ProjectSystemDetail) :
                new ObjectParameter("xml_Tbt_ProjectSystemDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSystemDetails>("InsertTbt_ProjectSystemDetail", xml_Tbt_ProjectSystemDetailParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSystemDetails> InsertTbt_ProjectSystemDetail(string xml_Tbt_ProjectSystemDetail, MergeOption mergeOption)
        {
            var xml_Tbt_ProjectSystemDetailParameter = xml_Tbt_ProjectSystemDetail != null ?
                new ObjectParameter("xml_Tbt_ProjectSystemDetail", xml_Tbt_ProjectSystemDetail) :
                new ObjectParameter("xml_Tbt_ProjectSystemDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSystemDetails>("InsertTbt_ProjectSystemDetail", mergeOption, xml_Tbt_ProjectSystemDetailParameter);
        }
    
        public virtual ObjectResult<tbt_Project> InsertTbt_Project(string xml_doTbt_Project)
        {
            var xml_doTbt_ProjectParameter = xml_doTbt_Project != null ?
                new ObjectParameter("xml_doTbt_Project", xml_doTbt_Project) :
                new ObjectParameter("xml_doTbt_Project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("InsertTbt_Project", xml_doTbt_ProjectParameter);
        }
    
        public virtual ObjectResult<tbt_Project> InsertTbt_Project(string xml_doTbt_Project, MergeOption mergeOption)
        {
            var xml_doTbt_ProjectParameter = xml_doTbt_Project != null ?
                new ObjectParameter("xml_doTbt_Project", xml_doTbt_Project) :
                new ObjectParameter("xml_doTbt_Project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("InsertTbt_Project", mergeOption, xml_doTbt_ProjectParameter);
        }
    
        public virtual ObjectResult<dtSearchSaleWarrantyExpireResult> SearchSaleWarrantyExpireList(Nullable<bool> isMaintenanceContractFlag, Nullable<System.DateTime> dtExpireWarrantyFrom, Nullable<System.DateTime> dtExpireWarrantyTo, string strOperationOfficeCode, string strSaleContractOfficeCode, string pC_CONTRACT_STATUS_BEF_START, string pC_CONTRACT_STATUS_AFTER_START, string pC_RELATION_TYPE_MA, string pC_SALE_CHANGE_TYPE_NEW_SALE, string pC_SALE_CHANGE_TYPE_ADD_SALE)
        {
            var isMaintenanceContractFlagParameter = isMaintenanceContractFlag.HasValue ?
                new ObjectParameter("isMaintenanceContractFlag", isMaintenanceContractFlag) :
                new ObjectParameter("isMaintenanceContractFlag", typeof(bool));
    
            var dtExpireWarrantyFromParameter = dtExpireWarrantyFrom.HasValue ?
                new ObjectParameter("dtExpireWarrantyFrom", dtExpireWarrantyFrom) :
                new ObjectParameter("dtExpireWarrantyFrom", typeof(System.DateTime));
    
            var dtExpireWarrantyToParameter = dtExpireWarrantyTo.HasValue ?
                new ObjectParameter("dtExpireWarrantyTo", dtExpireWarrantyTo) :
                new ObjectParameter("dtExpireWarrantyTo", typeof(System.DateTime));
    
            var strOperationOfficeCodeParameter = strOperationOfficeCode != null ?
                new ObjectParameter("strOperationOfficeCode", strOperationOfficeCode) :
                new ObjectParameter("strOperationOfficeCode", typeof(string));
    
            var strSaleContractOfficeCodeParameter = strSaleContractOfficeCode != null ?
                new ObjectParameter("strSaleContractOfficeCode", strSaleContractOfficeCode) :
                new ObjectParameter("strSaleContractOfficeCode", typeof(string));
    
            var pC_CONTRACT_STATUS_BEF_STARTParameter = pC_CONTRACT_STATUS_BEF_START != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_BEF_START", pC_CONTRACT_STATUS_BEF_START) :
                new ObjectParameter("pC_CONTRACT_STATUS_BEF_START", typeof(string));
    
            var pC_CONTRACT_STATUS_AFTER_STARTParameter = pC_CONTRACT_STATUS_AFTER_START != null ?
                new ObjectParameter("pC_CONTRACT_STATUS_AFTER_START", pC_CONTRACT_STATUS_AFTER_START) :
                new ObjectParameter("pC_CONTRACT_STATUS_AFTER_START", typeof(string));
    
            var pC_RELATION_TYPE_MAParameter = pC_RELATION_TYPE_MA != null ?
                new ObjectParameter("pC_RELATION_TYPE_MA", pC_RELATION_TYPE_MA) :
                new ObjectParameter("pC_RELATION_TYPE_MA", typeof(string));
    
            var pC_SALE_CHANGE_TYPE_NEW_SALEParameter = pC_SALE_CHANGE_TYPE_NEW_SALE != null ?
                new ObjectParameter("pC_SALE_CHANGE_TYPE_NEW_SALE", pC_SALE_CHANGE_TYPE_NEW_SALE) :
                new ObjectParameter("pC_SALE_CHANGE_TYPE_NEW_SALE", typeof(string));
    
            var pC_SALE_CHANGE_TYPE_ADD_SALEParameter = pC_SALE_CHANGE_TYPE_ADD_SALE != null ?
                new ObjectParameter("pC_SALE_CHANGE_TYPE_ADD_SALE", pC_SALE_CHANGE_TYPE_ADD_SALE) :
                new ObjectParameter("pC_SALE_CHANGE_TYPE_ADD_SALE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSearchSaleWarrantyExpireResult>("SearchSaleWarrantyExpireList", isMaintenanceContractFlagParameter, dtExpireWarrantyFromParameter, dtExpireWarrantyToParameter, strOperationOfficeCodeParameter, strSaleContractOfficeCodeParameter, pC_CONTRACT_STATUS_BEF_STARTParameter, pC_CONTRACT_STATUS_AFTER_STARTParameter, pC_RELATION_TYPE_MAParameter, pC_SALE_CHANGE_TYPE_NEW_SALEParameter, pC_SALE_CHANGE_TYPE_ADD_SALEParameter);
        }
    
        public virtual ObjectResult<dtIncidentListCTS320> GetIncidentList(string incidentRelevantType, string customerCode, string siteCode, string contractCode, string projectCode, string incidentType, Nullable<System.DateTime> duedateDeadline, string incidentStatus, string c_INCIDENT_ROLE_CONTROL_CHIEF, string c_INCIDENT_ROLE_CHIEF, string c_INCIDENT_ROLE_CORRESPONDENT, string c_INCIDENT_ROLE_ASSISTANT, string c_INCIDENT_TYPE, string c_INCIDENT_RELEVANT_TYPE_CUSTOMER, string c_INCIDENT_RELEVANT_TYPE_SITE, string c_INCIDENT_STATUS, string c_INCIDENT_STATUS_COMPLETE, string c_INCIDENT_SEARCH_STATUS_COMPLETE, string c_INCIDENT_SEARCH_STATUS_HANDLING, string c_INCIDENT_RELEVANT_TYPE_CONTRACT, string c_DEADLINE_TIME_TYPE, string c_FLAG_ON, Nullable<bool> isSearchByCustomer, Nullable<bool> isSearchBySite, Nullable<bool> isSearchByContract, Nullable<bool> isSearchByProject)
        {
            var incidentRelevantTypeParameter = incidentRelevantType != null ?
                new ObjectParameter("IncidentRelevantType", incidentRelevantType) :
                new ObjectParameter("IncidentRelevantType", typeof(string));
    
            var customerCodeParameter = customerCode != null ?
                new ObjectParameter("CustomerCode", customerCode) :
                new ObjectParameter("CustomerCode", typeof(string));
    
            var siteCodeParameter = siteCode != null ?
                new ObjectParameter("SiteCode", siteCode) :
                new ObjectParameter("SiteCode", typeof(string));
    
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var incidentTypeParameter = incidentType != null ?
                new ObjectParameter("IncidentType", incidentType) :
                new ObjectParameter("IncidentType", typeof(string));
    
            var duedateDeadlineParameter = duedateDeadline.HasValue ?
                new ObjectParameter("DuedateDeadline", duedateDeadline) :
                new ObjectParameter("DuedateDeadline", typeof(System.DateTime));
    
            var incidentStatusParameter = incidentStatus != null ?
                new ObjectParameter("IncidentStatus", incidentStatus) :
                new ObjectParameter("IncidentStatus", typeof(string));
    
            var c_INCIDENT_ROLE_CONTROL_CHIEFParameter = c_INCIDENT_ROLE_CONTROL_CHIEF != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CONTROL_CHIEF", c_INCIDENT_ROLE_CONTROL_CHIEF) :
                new ObjectParameter("C_INCIDENT_ROLE_CONTROL_CHIEF", typeof(string));
    
            var c_INCIDENT_ROLE_CHIEFParameter = c_INCIDENT_ROLE_CHIEF != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF", c_INCIDENT_ROLE_CHIEF) :
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF", typeof(string));
    
            var c_INCIDENT_ROLE_CORRESPONDENTParameter = c_INCIDENT_ROLE_CORRESPONDENT != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CORRESPONDENT", c_INCIDENT_ROLE_CORRESPONDENT) :
                new ObjectParameter("C_INCIDENT_ROLE_CORRESPONDENT", typeof(string));
    
            var c_INCIDENT_ROLE_ASSISTANTParameter = c_INCIDENT_ROLE_ASSISTANT != null ?
                new ObjectParameter("C_INCIDENT_ROLE_ASSISTANT", c_INCIDENT_ROLE_ASSISTANT) :
                new ObjectParameter("C_INCIDENT_ROLE_ASSISTANT", typeof(string));
    
            var c_INCIDENT_TYPEParameter = c_INCIDENT_TYPE != null ?
                new ObjectParameter("C_INCIDENT_TYPE", c_INCIDENT_TYPE) :
                new ObjectParameter("C_INCIDENT_TYPE", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_CUSTOMERParameter = c_INCIDENT_RELEVANT_TYPE_CUSTOMER != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CUSTOMER", c_INCIDENT_RELEVANT_TYPE_CUSTOMER) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CUSTOMER", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_SITEParameter = c_INCIDENT_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", c_INCIDENT_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_INCIDENT_STATUSParameter = c_INCIDENT_STATUS != null ?
                new ObjectParameter("C_INCIDENT_STATUS", c_INCIDENT_STATUS) :
                new ObjectParameter("C_INCIDENT_STATUS", typeof(string));
    
            var c_INCIDENT_STATUS_COMPLETEParameter = c_INCIDENT_STATUS_COMPLETE != null ?
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", c_INCIDENT_STATUS_COMPLETE) :
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", typeof(string));
    
            var c_INCIDENT_SEARCH_STATUS_COMPLETEParameter = c_INCIDENT_SEARCH_STATUS_COMPLETE != null ?
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_COMPLETE", c_INCIDENT_SEARCH_STATUS_COMPLETE) :
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_COMPLETE", typeof(string));
    
            var c_INCIDENT_SEARCH_STATUS_HANDLINGParameter = c_INCIDENT_SEARCH_STATUS_HANDLING != null ?
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_HANDLING", c_INCIDENT_SEARCH_STATUS_HANDLING) :
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_HANDLING", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter = c_INCIDENT_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", c_INCIDENT_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_DEADLINE_TIME_TYPEParameter = c_DEADLINE_TIME_TYPE != null ?
                new ObjectParameter("C_DEADLINE_TIME_TYPE", c_DEADLINE_TIME_TYPE) :
                new ObjectParameter("C_DEADLINE_TIME_TYPE", typeof(string));
    
            var c_FLAG_ONParameter = c_FLAG_ON != null ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(string));
    
            var isSearchByCustomerParameter = isSearchByCustomer.HasValue ?
                new ObjectParameter("IsSearchByCustomer", isSearchByCustomer) :
                new ObjectParameter("IsSearchByCustomer", typeof(bool));
    
            var isSearchBySiteParameter = isSearchBySite.HasValue ?
                new ObjectParameter("IsSearchBySite", isSearchBySite) :
                new ObjectParameter("IsSearchBySite", typeof(bool));
    
            var isSearchByContractParameter = isSearchByContract.HasValue ?
                new ObjectParameter("IsSearchByContract", isSearchByContract) :
                new ObjectParameter("IsSearchByContract", typeof(bool));
    
            var isSearchByProjectParameter = isSearchByProject.HasValue ?
                new ObjectParameter("IsSearchByProject", isSearchByProject) :
                new ObjectParameter("IsSearchByProject", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncidentListCTS320>("GetIncidentList", incidentRelevantTypeParameter, customerCodeParameter, siteCodeParameter, contractCodeParameter, projectCodeParameter, incidentTypeParameter, duedateDeadlineParameter, incidentStatusParameter, c_INCIDENT_ROLE_CONTROL_CHIEFParameter, c_INCIDENT_ROLE_CHIEFParameter, c_INCIDENT_ROLE_CORRESPONDENTParameter, c_INCIDENT_ROLE_ASSISTANTParameter, c_INCIDENT_TYPEParameter, c_INCIDENT_RELEVANT_TYPE_CUSTOMERParameter, c_INCIDENT_RELEVANT_TYPE_SITEParameter, c_INCIDENT_STATUSParameter, c_INCIDENT_STATUS_COMPLETEParameter, c_INCIDENT_SEARCH_STATUS_COMPLETEParameter, c_INCIDENT_SEARCH_STATUS_HANDLINGParameter, c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter, c_DEADLINE_TIME_TYPEParameter, c_FLAG_ONParameter, isSearchByCustomerParameter, isSearchBySiteParameter, isSearchByContractParameter, isSearchByProjectParameter);
        }
    
        public virtual ObjectResult<dtContractDocHeader> GetContractDocHeader(string pContractCode, string pQuotationTargetCode, string pOCC_Alphabet, string pContractDocOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pOCC_AlphabetParameter = pOCC_Alphabet != null ?
                new ObjectParameter("pOCC_Alphabet", pOCC_Alphabet) :
                new ObjectParameter("pOCC_Alphabet", typeof(string));
    
            var pContractDocOCCParameter = pContractDocOCC != null ?
                new ObjectParameter("pContractDocOCC", pContractDocOCC) :
                new ObjectParameter("pContractDocOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractDocHeader>("GetContractDocHeader", pContractCodeParameter, pQuotationTargetCodeParameter, pOCC_AlphabetParameter, pContractDocOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> GetTbt_GetContractLinkageRelation(string paramContractCode, string paramOCC, string paramRelationType)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramOCCParameter = paramOCC != null ?
                new ObjectParameter("paramOCC", paramOCC) :
                new ObjectParameter("paramOCC", typeof(string));
    
            var paramRelationTypeParameter = paramRelationType != null ?
                new ObjectParameter("paramRelationType", paramRelationType) :
                new ObjectParameter("paramRelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("GetTbt_GetContractLinkageRelation", paramContractCodeParameter, paramOCCParameter, paramRelationTypeParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> GetTbt_GetContractLinkageRelation(string paramContractCode, string paramOCC, string paramRelationType, MergeOption mergeOption)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramOCCParameter = paramOCC != null ?
                new ObjectParameter("paramOCC", paramOCC) :
                new ObjectParameter("paramOCC", typeof(string));
    
            var paramRelationTypeParameter = paramRelationType != null ?
                new ObjectParameter("paramRelationType", paramRelationType) :
                new ObjectParameter("paramRelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("GetTbt_GetContractLinkageRelation", mergeOption, paramContractCodeParameter, paramOCCParameter, paramRelationTypeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleBillingTarget> GetTbt_DraftSaleBillingTarget(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleBillingTarget>("GetTbt_DraftSaleBillingTarget", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleBillingTarget> GetTbt_DraftSaleBillingTarget(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleBillingTarget>("GetTbt_DraftSaleBillingTarget", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleEmail> GetTbt_DraftSaleEmail(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleEmail>("GetTbt_DraftSaleEmail", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleEmail> GetTbt_DraftSaleEmail(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleEmail>("GetTbt_DraftSaleEmail", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleInstrument> GetTbt_DraftSaleInstrument(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleInstrument>("GetTbt_DraftSaleInstrument", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleInstrument> GetTbt_DraftSaleInstrument(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleInstrument>("GetTbt_DraftSaleInstrument", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<dtIncidentOccSite> GetIncidentOccurringSite(string strCustCode, string c_INCIDENT_RELEVANT_TYPE_SITE)
        {
            var strCustCodeParameter = strCustCode != null ?
                new ObjectParameter("strCustCode", strCustCode) :
                new ObjectParameter("strCustCode", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_SITEParameter = c_INCIDENT_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", c_INCIDENT_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncidentOccSite>("GetIncidentOccurringSite", strCustCodeParameter, c_INCIDENT_RELEVANT_TYPE_SITEParameter);
        }
    
        public virtual ObjectResult<dtIncidentOccContract> GetIncidentOccurringContract(string strSiteCode, string c_INCIDENT_RELEVANT_TYPE_CONTRACT)
        {
            var strSiteCodeParameter = strSiteCode != null ?
                new ObjectParameter("strSiteCode", strSiteCode) :
                new ObjectParameter("strSiteCode", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter = c_INCIDENT_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", c_INCIDENT_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncidentOccContract>("GetIncidentOccurringContract", strSiteCodeParameter, c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter);
        }
    
        public virtual ObjectResult<dtSummaryAR> SummaryAR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<System.DateTime> currentDate, string c_AR_STATUS_INSTRUCTED, string c_AR_STATUS_REJECTED, string c_AR_STATUS_APPROVED)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("currentDate", currentDate) :
                new ObjectParameter("currentDate", typeof(System.DateTime));
    
            var c_AR_STATUS_INSTRUCTEDParameter = c_AR_STATUS_INSTRUCTED != null ?
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", c_AR_STATUS_INSTRUCTED) :
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", typeof(string));
    
            var c_AR_STATUS_REJECTEDParameter = c_AR_STATUS_REJECTED != null ?
                new ObjectParameter("C_AR_STATUS_REJECTED", c_AR_STATUS_REJECTED) :
                new ObjectParameter("C_AR_STATUS_REJECTED", typeof(string));
    
            var c_AR_STATUS_APPROVEDParameter = c_AR_STATUS_APPROVED != null ?
                new ObjectParameter("C_AR_STATUS_APPROVED", c_AR_STATUS_APPROVED) :
                new ObjectParameter("C_AR_STATUS_APPROVED", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSummaryAR>("SummaryAR", dateFromParameter, dateToParameter, currentDateParameter, c_AR_STATUS_INSTRUCTEDParameter, c_AR_STATUS_REJECTEDParameter, c_AR_STATUS_APPROVEDParameter);
        }
    
        public virtual ObjectResult<RPTChangeNoticeDo> GetRptChangeNoticeData(Nullable<int> iDocID, Nullable<bool> bFlagOn)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTChangeNoticeDo>("GetRptChangeNoticeData", iDocIDParameter, bFlagOnParameter);
        }
    
        public virtual ObjectResult<doSummaryFee> SumFeeUnimplementData(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doSummaryFee>("SumFeeUnimplementData", strContractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_Project> GetTbt_ProjectForViewSQL(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("GetTbt_ProjectForViewSQL", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_Project> GetTbt_ProjectForViewSQL(string strProjectCode, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("GetTbt_ProjectForViewSQL", mergeOption, strProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleContract> InsertTbt_DraftSaleContract(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleContract>("InsertTbt_DraftSaleContract", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleContract> InsertTbt_DraftSaleContract(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleContract>("InsertTbt_DraftSaleContract", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleBillingTarget> InsertTbt_DraftSaleBillingTarget(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleBillingTarget>("InsertTbt_DraftSaleBillingTarget", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleBillingTarget> InsertTbt_DraftSaleBillingTarget(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleBillingTarget>("InsertTbt_DraftSaleBillingTarget", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleEmail> InsertTbt_DraftSaleEmail(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleEmail>("InsertTbt_DraftSaleEmail", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleEmail> InsertTbt_DraftSaleEmail(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleEmail>("InsertTbt_DraftSaleEmail", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleInstrument> InsertTbt_DraftSaleInstrument(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleInstrument>("InsertTbt_DraftSaleInstrument", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleInstrument> InsertTbt_DraftSaleInstrument(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleInstrument>("InsertTbt_DraftSaleInstrument", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleContract> UpdateTbt_DraftSaleContract(string xml)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleContract>("UpdateTbt_DraftSaleContract", xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleContract> UpdateTbt_DraftSaleContract(string xml, MergeOption mergeOption)
        {
            var xmlParameter = xml != null ?
                new ObjectParameter("xml", xml) :
                new ObjectParameter("xml", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleContract>("UpdateTbt_DraftSaleContract", mergeOption, xmlParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleBillingTarget> DeleteTbt_DraftSaleBillingTarget(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleBillingTarget>("DeleteTbt_DraftSaleBillingTarget", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleBillingTarget> DeleteTbt_DraftSaleBillingTarget(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleBillingTarget>("DeleteTbt_DraftSaleBillingTarget", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleEmail> DeleteTbt_DraftSaleEmail(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleEmail>("DeleteTbt_DraftSaleEmail", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleEmail> DeleteTbt_DraftSaleEmail(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleEmail>("DeleteTbt_DraftSaleEmail", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleInstrument> DeleteTbt_DraftSaleInstrument(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleInstrument>("DeleteTbt_DraftSaleInstrument", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftSaleInstrument> DeleteTbt_DraftSaleInstrument(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftSaleInstrument>("DeleteTbt_DraftSaleInstrument", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_ProjectSupportStaffDetailForView> GetTbt_ProjectSupportStaffDetailForView(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_ProjectSupportStaffDetailForView>("GetTbt_ProjectSupportStaffDetailForView", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_ProjectExpectedInstrumentDetailsForView> GetTbt_ProjectExpectedInstrumentDetailsForView(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_ProjectExpectedInstrumentDetailsForView>("GetTbt_ProjectExpectedInstrumentDetailsForView", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_ProjectSystemDetailForView> GetTbt_ProjectSystemDetailForView(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_ProjectSystemDetailForView>("GetTbt_ProjectSystemDetailForView", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_ProjectStockoutIntrumentForView> GetTbt_ProjectStockoutIntrumentForView(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_ProjectStockoutIntrumentForView>("GetTbt_ProjectStockoutIntrumentForView", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> GetTbt_ProjectOtherRalatedCompanyForView(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("GetTbt_ProjectOtherRalatedCompanyForView", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> GetTbt_ProjectOtherRalatedCompanyForView(string strProjectCode, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("GetTbt_ProjectOtherRalatedCompanyForView", mergeOption, strProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> GetContractDocHeaderByContractCode(string pContractCode, string pOCC, string pchrContractDocOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pchrContractDocOCCParameter = pchrContractDocOCC != null ?
                new ObjectParameter("pchrContractDocOCC", pchrContractDocOCC) :
                new ObjectParameter("pchrContractDocOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("GetContractDocHeaderByContractCode", pContractCodeParameter, pOCCParameter, pchrContractDocOCCParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> GetContractDocHeaderByContractCode(string pContractCode, string pOCC, string pchrContractDocOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pchrContractDocOCCParameter = pchrContractDocOCC != null ?
                new ObjectParameter("pchrContractDocOCC", pchrContractDocOCC) :
                new ObjectParameter("pchrContractDocOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("GetContractDocHeaderByContractCode", mergeOption, pContractCodeParameter, pOCCParameter, pchrContractDocOCCParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutBranchIntrumentDetails> GetTbt_ProjectStockoutBranchIntrumentDetails(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutBranchIntrumentDetails>("GetTbt_ProjectStockoutBranchIntrumentDetails", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutBranchIntrumentDetails> GetTbt_ProjectStockoutBranchIntrumentDetails(string strProjectCode, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutBranchIntrumentDetails>("GetTbt_ProjectStockoutBranchIntrumentDetails", mergeOption, strProjectCodeParameter);
        }
    
        public virtual ObjectResult<dtTbt_ProjectStockoutBranchIntrumentDetailForView> GetTbt_ProjectStockoutBranchIntrumentDetailForView(string strProjectCode, Nullable<int> iBranchNo)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var iBranchNoParameter = iBranchNo.HasValue ?
                new ObjectParameter("iBranchNo", iBranchNo) :
                new ObjectParameter("iBranchNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_ProjectStockoutBranchIntrumentDetailForView>("GetTbt_ProjectStockoutBranchIntrumentDetailForView", strProjectCodeParameter, iBranchNoParameter);
        }
    
        public virtual ObjectResult<dtTbt_ProjectPurchaserCustomerForView> GetTbt_ProjectPurchaserCustomerForView(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_ProjectPurchaserCustomerForView>("GetTbt_ProjectPurchaserCustomerForView", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<RPTChangeMemoDo> GetRptChangeMemoData(Nullable<int> iDocID, Nullable<bool> bFlagOn)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTChangeMemoDo>("GetRptChangeMemoData", iDocIDParameter, bFlagOnParameter);
        }
    
        public virtual int SetNotUsedStatus(string pContractDoc, string pOCC, string pC_CONTRACT_DOC_STATUS_NOT_USED, string pC_CONTRACT_DOC_STATUS_COLLECTED, Nullable<bool> pIsRecursive, string pRef)
        {
            var pContractDocParameter = pContractDoc != null ?
                new ObjectParameter("pContractDoc", pContractDoc) :
                new ObjectParameter("pContractDoc", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            var pC_CONTRACT_DOC_STATUS_NOT_USEDParameter = pC_CONTRACT_DOC_STATUS_NOT_USED != null ?
                new ObjectParameter("pC_CONTRACT_DOC_STATUS_NOT_USED", pC_CONTRACT_DOC_STATUS_NOT_USED) :
                new ObjectParameter("pC_CONTRACT_DOC_STATUS_NOT_USED", typeof(string));
    
            var pC_CONTRACT_DOC_STATUS_COLLECTEDParameter = pC_CONTRACT_DOC_STATUS_COLLECTED != null ?
                new ObjectParameter("pC_CONTRACT_DOC_STATUS_COLLECTED", pC_CONTRACT_DOC_STATUS_COLLECTED) :
                new ObjectParameter("pC_CONTRACT_DOC_STATUS_COLLECTED", typeof(string));
    
            var pIsRecursiveParameter = pIsRecursive.HasValue ?
                new ObjectParameter("pIsRecursive", pIsRecursive) :
                new ObjectParameter("pIsRecursive", typeof(bool));
    
            var pRefParameter = pRef != null ?
                new ObjectParameter("pRef", pRef) :
                new ObjectParameter("pRef", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetNotUsedStatus", pContractDocParameter, pOCCParameter, pC_CONTRACT_DOC_STATUS_NOT_USEDParameter, pC_CONTRACT_DOC_STATUS_COLLECTEDParameter, pIsRecursiveParameter, pRefParameter);
        }
    
        public virtual ObjectResult<dtARListCTS370> GetARList(string aRRelavantType, string custCode, string siteCode, string contractCode, string quotationTargetCode, string projectCode, string aRType, Nullable<System.DateTime> duedateDeadline, string aRStatus, string c_AR_ROLE_APPROVER, string c_AR_ROLE_REQUESTER, string c_AR_ROLE_AUDITOR, string c_AR_TYPE, string c_AR_STATUS, string c_AR_RELEVANT_TYPE_CUSTOMER, string c_AR_RELEVANT_TYPE_SITE, string c_AR_RELEVANT_TYPE_CONTRACT, string c_AR_RELEVANT_TYPE_PROJECT, string c_AR_RELEVANT_TYPE_QUOTATION, string c_AR_SEARCH_STATUS_COMPLETE, string c_AR_SEARCH_STATUS_HANDLING, string c_AR_STATUS_INSTRUCTED, string c_AR_STATUS_REJECTED, string c_AR_STATUS_APPROVED, string c_DEADLINE_TIME_TYPE, string c_CUST_ROLE_TYPE_CONTRACT_TARGET, Nullable<bool> c_FLAG_ON)
        {
            var aRRelavantTypeParameter = aRRelavantType != null ?
                new ObjectParameter("ARRelavantType", aRRelavantType) :
                new ObjectParameter("ARRelavantType", typeof(string));
    
            var custCodeParameter = custCode != null ?
                new ObjectParameter("CustCode", custCode) :
                new ObjectParameter("CustCode", typeof(string));
    
            var siteCodeParameter = siteCode != null ?
                new ObjectParameter("SiteCode", siteCode) :
                new ObjectParameter("SiteCode", typeof(string));
    
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            var aRTypeParameter = aRType != null ?
                new ObjectParameter("ARType", aRType) :
                new ObjectParameter("ARType", typeof(string));
    
            var duedateDeadlineParameter = duedateDeadline.HasValue ?
                new ObjectParameter("DuedateDeadline", duedateDeadline) :
                new ObjectParameter("DuedateDeadline", typeof(System.DateTime));
    
            var aRStatusParameter = aRStatus != null ?
                new ObjectParameter("ARStatus", aRStatus) :
                new ObjectParameter("ARStatus", typeof(string));
    
            var c_AR_ROLE_APPROVERParameter = c_AR_ROLE_APPROVER != null ?
                new ObjectParameter("C_AR_ROLE_APPROVER", c_AR_ROLE_APPROVER) :
                new ObjectParameter("C_AR_ROLE_APPROVER", typeof(string));
    
            var c_AR_ROLE_REQUESTERParameter = c_AR_ROLE_REQUESTER != null ?
                new ObjectParameter("C_AR_ROLE_REQUESTER", c_AR_ROLE_REQUESTER) :
                new ObjectParameter("C_AR_ROLE_REQUESTER", typeof(string));
    
            var c_AR_ROLE_AUDITORParameter = c_AR_ROLE_AUDITOR != null ?
                new ObjectParameter("C_AR_ROLE_AUDITOR", c_AR_ROLE_AUDITOR) :
                new ObjectParameter("C_AR_ROLE_AUDITOR", typeof(string));
    
            var c_AR_TYPEParameter = c_AR_TYPE != null ?
                new ObjectParameter("C_AR_TYPE", c_AR_TYPE) :
                new ObjectParameter("C_AR_TYPE", typeof(string));
    
            var c_AR_STATUSParameter = c_AR_STATUS != null ?
                new ObjectParameter("C_AR_STATUS", c_AR_STATUS) :
                new ObjectParameter("C_AR_STATUS", typeof(string));
    
            var c_AR_RELEVANT_TYPE_CUSTOMERParameter = c_AR_RELEVANT_TYPE_CUSTOMER != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CUSTOMER", c_AR_RELEVANT_TYPE_CUSTOMER) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CUSTOMER", typeof(string));
    
            var c_AR_RELEVANT_TYPE_SITEParameter = c_AR_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", c_AR_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_AR_RELEVANT_TYPE_CONTRACTParameter = c_AR_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", c_AR_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_AR_RELEVANT_TYPE_PROJECTParameter = c_AR_RELEVANT_TYPE_PROJECT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_PROJECT", c_AR_RELEVANT_TYPE_PROJECT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_PROJECT", typeof(string));
    
            var c_AR_RELEVANT_TYPE_QUOTATIONParameter = c_AR_RELEVANT_TYPE_QUOTATION != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", c_AR_RELEVANT_TYPE_QUOTATION) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", typeof(string));
    
            var c_AR_SEARCH_STATUS_COMPLETEParameter = c_AR_SEARCH_STATUS_COMPLETE != null ?
                new ObjectParameter("C_AR_SEARCH_STATUS_COMPLETE", c_AR_SEARCH_STATUS_COMPLETE) :
                new ObjectParameter("C_AR_SEARCH_STATUS_COMPLETE", typeof(string));
    
            var c_AR_SEARCH_STATUS_HANDLINGParameter = c_AR_SEARCH_STATUS_HANDLING != null ?
                new ObjectParameter("C_AR_SEARCH_STATUS_HANDLING", c_AR_SEARCH_STATUS_HANDLING) :
                new ObjectParameter("C_AR_SEARCH_STATUS_HANDLING", typeof(string));
    
            var c_AR_STATUS_INSTRUCTEDParameter = c_AR_STATUS_INSTRUCTED != null ?
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", c_AR_STATUS_INSTRUCTED) :
                new ObjectParameter("C_AR_STATUS_INSTRUCTED", typeof(string));
    
            var c_AR_STATUS_REJECTEDParameter = c_AR_STATUS_REJECTED != null ?
                new ObjectParameter("C_AR_STATUS_REJECTED", c_AR_STATUS_REJECTED) :
                new ObjectParameter("C_AR_STATUS_REJECTED", typeof(string));
    
            var c_AR_STATUS_APPROVEDParameter = c_AR_STATUS_APPROVED != null ?
                new ObjectParameter("C_AR_STATUS_APPROVED", c_AR_STATUS_APPROVED) :
                new ObjectParameter("C_AR_STATUS_APPROVED", typeof(string));
    
            var c_DEADLINE_TIME_TYPEParameter = c_DEADLINE_TIME_TYPE != null ?
                new ObjectParameter("C_DEADLINE_TIME_TYPE", c_DEADLINE_TIME_TYPE) :
                new ObjectParameter("C_DEADLINE_TIME_TYPE", typeof(string));
    
            var c_CUST_ROLE_TYPE_CONTRACT_TARGETParameter = c_CUST_ROLE_TYPE_CONTRACT_TARGET != null ?
                new ObjectParameter("C_CUST_ROLE_TYPE_CONTRACT_TARGET", c_CUST_ROLE_TYPE_CONTRACT_TARGET) :
                new ObjectParameter("C_CUST_ROLE_TYPE_CONTRACT_TARGET", typeof(string));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtARListCTS370>("GetARList", aRRelavantTypeParameter, custCodeParameter, siteCodeParameter, contractCodeParameter, quotationTargetCodeParameter, projectCodeParameter, aRTypeParameter, duedateDeadlineParameter, aRStatusParameter, c_AR_ROLE_APPROVERParameter, c_AR_ROLE_REQUESTERParameter, c_AR_ROLE_AUDITORParameter, c_AR_TYPEParameter, c_AR_STATUSParameter, c_AR_RELEVANT_TYPE_CUSTOMERParameter, c_AR_RELEVANT_TYPE_SITEParameter, c_AR_RELEVANT_TYPE_CONTRACTParameter, c_AR_RELEVANT_TYPE_PROJECTParameter, c_AR_RELEVANT_TYPE_QUOTATIONParameter, c_AR_SEARCH_STATUS_COMPLETEParameter, c_AR_SEARCH_STATUS_HANDLINGParameter, c_AR_STATUS_INSTRUCTEDParameter, c_AR_STATUS_REJECTEDParameter, c_AR_STATUS_APPROVEDParameter, c_DEADLINE_TIME_TYPEParameter, c_CUST_ROLE_TYPE_CONTRACT_TARGETParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<dtAROccSite> GetAROccurringSite(string strCustCode, string c_AR_RELEVANT_TYPE_SITE)
        {
            var strCustCodeParameter = strCustCode != null ?
                new ObjectParameter("strCustCode", strCustCode) :
                new ObjectParameter("strCustCode", typeof(string));
    
            var c_AR_RELEVANT_TYPE_SITEParameter = c_AR_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", c_AR_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtAROccSite>("GetAROccurringSite", strCustCodeParameter, c_AR_RELEVANT_TYPE_SITEParameter);
        }
    
        public virtual ObjectResult<dtIncidentList> GetIncidentListByRole(string incidentRole, string empNo, Nullable<System.DateTime> dueDate, string incidentStatus, string c_INCIDENT_SEARCH_STATUS_COMPLETE, string c_INCIDENT_SEARCH_STATUS_HANDLING, string c_INCIDENT_ROLE_CONTROL_CHIEF, string c_INCIDENT_ROLE_CHIEF, string c_INCIDENT_ROLE_CORRESPONDENT, string c_INCIDENT_ROLE_ASSISTANT, string c_INCIDENT_RELEVANT_TYPE_CONTRACT, string c_INCIDENT_RELEVANT_TYPE_SITE, string c_INCIDENT_STATUS, string c_INCIDENT_STATUS_COMPLETE, string c_INCIDENT_TYPE, string c_DEADLINE_TIME_TYPE)
        {
            var incidentRoleParameter = incidentRole != null ?
                new ObjectParameter("IncidentRole", incidentRole) :
                new ObjectParameter("IncidentRole", typeof(string));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(string));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var incidentStatusParameter = incidentStatus != null ?
                new ObjectParameter("IncidentStatus", incidentStatus) :
                new ObjectParameter("IncidentStatus", typeof(string));
    
            var c_INCIDENT_SEARCH_STATUS_COMPLETEParameter = c_INCIDENT_SEARCH_STATUS_COMPLETE != null ?
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_COMPLETE", c_INCIDENT_SEARCH_STATUS_COMPLETE) :
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_COMPLETE", typeof(string));
    
            var c_INCIDENT_SEARCH_STATUS_HANDLINGParameter = c_INCIDENT_SEARCH_STATUS_HANDLING != null ?
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_HANDLING", c_INCIDENT_SEARCH_STATUS_HANDLING) :
                new ObjectParameter("C_INCIDENT_SEARCH_STATUS_HANDLING", typeof(string));
    
            var c_INCIDENT_ROLE_CONTROL_CHIEFParameter = c_INCIDENT_ROLE_CONTROL_CHIEF != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CONTROL_CHIEF", c_INCIDENT_ROLE_CONTROL_CHIEF) :
                new ObjectParameter("C_INCIDENT_ROLE_CONTROL_CHIEF", typeof(string));
    
            var c_INCIDENT_ROLE_CHIEFParameter = c_INCIDENT_ROLE_CHIEF != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF", c_INCIDENT_ROLE_CHIEF) :
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF", typeof(string));
    
            var c_INCIDENT_ROLE_CORRESPONDENTParameter = c_INCIDENT_ROLE_CORRESPONDENT != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CORRESPONDENT", c_INCIDENT_ROLE_CORRESPONDENT) :
                new ObjectParameter("C_INCIDENT_ROLE_CORRESPONDENT", typeof(string));
    
            var c_INCIDENT_ROLE_ASSISTANTParameter = c_INCIDENT_ROLE_ASSISTANT != null ?
                new ObjectParameter("C_INCIDENT_ROLE_ASSISTANT", c_INCIDENT_ROLE_ASSISTANT) :
                new ObjectParameter("C_INCIDENT_ROLE_ASSISTANT", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter = c_INCIDENT_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", c_INCIDENT_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_SITEParameter = c_INCIDENT_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", c_INCIDENT_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_INCIDENT_STATUSParameter = c_INCIDENT_STATUS != null ?
                new ObjectParameter("C_INCIDENT_STATUS", c_INCIDENT_STATUS) :
                new ObjectParameter("C_INCIDENT_STATUS", typeof(string));
    
            var c_INCIDENT_STATUS_COMPLETEParameter = c_INCIDENT_STATUS_COMPLETE != null ?
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", c_INCIDENT_STATUS_COMPLETE) :
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", typeof(string));
    
            var c_INCIDENT_TYPEParameter = c_INCIDENT_TYPE != null ?
                new ObjectParameter("C_INCIDENT_TYPE", c_INCIDENT_TYPE) :
                new ObjectParameter("C_INCIDENT_TYPE", typeof(string));
    
            var c_DEADLINE_TIME_TYPEParameter = c_DEADLINE_TIME_TYPE != null ?
                new ObjectParameter("C_DEADLINE_TIME_TYPE", c_DEADLINE_TIME_TYPE) :
                new ObjectParameter("C_DEADLINE_TIME_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncidentList>("GetIncidentListByRole", incidentRoleParameter, empNoParameter, dueDateParameter, incidentStatusParameter, c_INCIDENT_SEARCH_STATUS_COMPLETEParameter, c_INCIDENT_SEARCH_STATUS_HANDLINGParameter, c_INCIDENT_ROLE_CONTROL_CHIEFParameter, c_INCIDENT_ROLE_CHIEFParameter, c_INCIDENT_ROLE_CORRESPONDENTParameter, c_INCIDENT_ROLE_ASSISTANTParameter, c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter, c_INCIDENT_RELEVANT_TYPE_SITEParameter, c_INCIDENT_STATUSParameter, c_INCIDENT_STATUS_COMPLETEParameter, c_INCIDENT_TYPEParameter, c_DEADLINE_TIME_TYPEParameter);
        }
    
        public virtual ObjectResult<dtIncidentList> SearchIncidentList(string incidentNo, string incidentTitle, string incidentType, string incidentStatusHandling, string incidentStatusComplete, string incidentOfficeCode, string specfyPeriod, Nullable<System.DateTime> specifyPeriodFrom, Nullable<System.DateTime> specifyPeriodTo, string registrant, string controlChief, string correspondent, string chief, string assistant, string contractTargetPurchaserName, string siteName, string customerGroupName, string contractCode, string userCode, string contractOfficeCode, string operationOfficeCode, string contractStatus, string contractType, string customerName, string projectName, string c_INCIDENT_ROLE_CONTROL_CHIEF, string c_INCIDENT_ROLE_CHIEF, string c_INCIDENT_ROLE_CORRESPONDENT, string c_INCIDENT_ROLE_ASSISTANT, string c_INCIDENT_TYPE, string c_INCIDENT_STATUS, string c_DEADLINE_TIME_TYPE, string c_INCIDENT_SEARCH_PERIOD_OCCURRING, string c_INCIDENT_SEARCH_PERIOD_DUEDATE, string c_INCIDENT_SEARCH_PERIOD_COMPLETE, string c_INCIDENT_RELEVANT_TYPE_CONTRACT, string c_INCIDENT_RELEVANT_TYPE_CUSTOMER, string c_INCIDENT_RELEVANT_TYPE_PROJECT, string c_INCIDENT_RELEVANT_TYPE_SITE, string c_INCIDENT_STATUS_COMPLETE)
        {
            var incidentNoParameter = incidentNo != null ?
                new ObjectParameter("IncidentNo", incidentNo) :
                new ObjectParameter("IncidentNo", typeof(string));
    
            var incidentTitleParameter = incidentTitle != null ?
                new ObjectParameter("IncidentTitle", incidentTitle) :
                new ObjectParameter("IncidentTitle", typeof(string));
    
            var incidentTypeParameter = incidentType != null ?
                new ObjectParameter("IncidentType", incidentType) :
                new ObjectParameter("IncidentType", typeof(string));
    
            var incidentStatusHandlingParameter = incidentStatusHandling != null ?
                new ObjectParameter("IncidentStatusHandling", incidentStatusHandling) :
                new ObjectParameter("IncidentStatusHandling", typeof(string));
    
            var incidentStatusCompleteParameter = incidentStatusComplete != null ?
                new ObjectParameter("IncidentStatusComplete", incidentStatusComplete) :
                new ObjectParameter("IncidentStatusComplete", typeof(string));
    
            var incidentOfficeCodeParameter = incidentOfficeCode != null ?
                new ObjectParameter("IncidentOfficeCode", incidentOfficeCode) :
                new ObjectParameter("IncidentOfficeCode", typeof(string));
    
            var specfyPeriodParameter = specfyPeriod != null ?
                new ObjectParameter("SpecfyPeriod", specfyPeriod) :
                new ObjectParameter("SpecfyPeriod", typeof(string));
    
            var specifyPeriodFromParameter = specifyPeriodFrom.HasValue ?
                new ObjectParameter("SpecifyPeriodFrom", specifyPeriodFrom) :
                new ObjectParameter("SpecifyPeriodFrom", typeof(System.DateTime));
    
            var specifyPeriodToParameter = specifyPeriodTo.HasValue ?
                new ObjectParameter("SpecifyPeriodTo", specifyPeriodTo) :
                new ObjectParameter("SpecifyPeriodTo", typeof(System.DateTime));
    
            var registrantParameter = registrant != null ?
                new ObjectParameter("Registrant", registrant) :
                new ObjectParameter("Registrant", typeof(string));
    
            var controlChiefParameter = controlChief != null ?
                new ObjectParameter("ControlChief", controlChief) :
                new ObjectParameter("ControlChief", typeof(string));
    
            var correspondentParameter = correspondent != null ?
                new ObjectParameter("Correspondent", correspondent) :
                new ObjectParameter("Correspondent", typeof(string));
    
            var chiefParameter = chief != null ?
                new ObjectParameter("Chief", chief) :
                new ObjectParameter("Chief", typeof(string));
    
            var assistantParameter = assistant != null ?
                new ObjectParameter("Assistant", assistant) :
                new ObjectParameter("Assistant", typeof(string));
    
            var contractTargetPurchaserNameParameter = contractTargetPurchaserName != null ?
                new ObjectParameter("ContractTargetPurchaserName", contractTargetPurchaserName) :
                new ObjectParameter("ContractTargetPurchaserName", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            var customerGroupNameParameter = customerGroupName != null ?
                new ObjectParameter("CustomerGroupName", customerGroupName) :
                new ObjectParameter("CustomerGroupName", typeof(string));
    
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var contractOfficeCodeParameter = contractOfficeCode != null ?
                new ObjectParameter("ContractOfficeCode", contractOfficeCode) :
                new ObjectParameter("ContractOfficeCode", typeof(string));
    
            var operationOfficeCodeParameter = operationOfficeCode != null ?
                new ObjectParameter("OperationOfficeCode", operationOfficeCode) :
                new ObjectParameter("OperationOfficeCode", typeof(string));
    
            var contractStatusParameter = contractStatus != null ?
                new ObjectParameter("ContractStatus", contractStatus) :
                new ObjectParameter("ContractStatus", typeof(string));
    
            var contractTypeParameter = contractType != null ?
                new ObjectParameter("ContractType", contractType) :
                new ObjectParameter("ContractType", typeof(string));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var c_INCIDENT_ROLE_CONTROL_CHIEFParameter = c_INCIDENT_ROLE_CONTROL_CHIEF != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CONTROL_CHIEF", c_INCIDENT_ROLE_CONTROL_CHIEF) :
                new ObjectParameter("C_INCIDENT_ROLE_CONTROL_CHIEF", typeof(string));
    
            var c_INCIDENT_ROLE_CHIEFParameter = c_INCIDENT_ROLE_CHIEF != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF", c_INCIDENT_ROLE_CHIEF) :
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF", typeof(string));
    
            var c_INCIDENT_ROLE_CORRESPONDENTParameter = c_INCIDENT_ROLE_CORRESPONDENT != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CORRESPONDENT", c_INCIDENT_ROLE_CORRESPONDENT) :
                new ObjectParameter("C_INCIDENT_ROLE_CORRESPONDENT", typeof(string));
    
            var c_INCIDENT_ROLE_ASSISTANTParameter = c_INCIDENT_ROLE_ASSISTANT != null ?
                new ObjectParameter("C_INCIDENT_ROLE_ASSISTANT", c_INCIDENT_ROLE_ASSISTANT) :
                new ObjectParameter("C_INCIDENT_ROLE_ASSISTANT", typeof(string));
    
            var c_INCIDENT_TYPEParameter = c_INCIDENT_TYPE != null ?
                new ObjectParameter("C_INCIDENT_TYPE", c_INCIDENT_TYPE) :
                new ObjectParameter("C_INCIDENT_TYPE", typeof(string));
    
            var c_INCIDENT_STATUSParameter = c_INCIDENT_STATUS != null ?
                new ObjectParameter("C_INCIDENT_STATUS", c_INCIDENT_STATUS) :
                new ObjectParameter("C_INCIDENT_STATUS", typeof(string));
    
            var c_DEADLINE_TIME_TYPEParameter = c_DEADLINE_TIME_TYPE != null ?
                new ObjectParameter("C_DEADLINE_TIME_TYPE", c_DEADLINE_TIME_TYPE) :
                new ObjectParameter("C_DEADLINE_TIME_TYPE", typeof(string));
    
            var c_INCIDENT_SEARCH_PERIOD_OCCURRINGParameter = c_INCIDENT_SEARCH_PERIOD_OCCURRING != null ?
                new ObjectParameter("C_INCIDENT_SEARCH_PERIOD_OCCURRING", c_INCIDENT_SEARCH_PERIOD_OCCURRING) :
                new ObjectParameter("C_INCIDENT_SEARCH_PERIOD_OCCURRING", typeof(string));
    
            var c_INCIDENT_SEARCH_PERIOD_DUEDATEParameter = c_INCIDENT_SEARCH_PERIOD_DUEDATE != null ?
                new ObjectParameter("C_INCIDENT_SEARCH_PERIOD_DUEDATE", c_INCIDENT_SEARCH_PERIOD_DUEDATE) :
                new ObjectParameter("C_INCIDENT_SEARCH_PERIOD_DUEDATE", typeof(string));
    
            var c_INCIDENT_SEARCH_PERIOD_COMPLETEParameter = c_INCIDENT_SEARCH_PERIOD_COMPLETE != null ?
                new ObjectParameter("C_INCIDENT_SEARCH_PERIOD_COMPLETE", c_INCIDENT_SEARCH_PERIOD_COMPLETE) :
                new ObjectParameter("C_INCIDENT_SEARCH_PERIOD_COMPLETE", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter = c_INCIDENT_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", c_INCIDENT_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_CUSTOMERParameter = c_INCIDENT_RELEVANT_TYPE_CUSTOMER != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CUSTOMER", c_INCIDENT_RELEVANT_TYPE_CUSTOMER) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_CUSTOMER", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_PROJECTParameter = c_INCIDENT_RELEVANT_TYPE_PROJECT != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_PROJECT", c_INCIDENT_RELEVANT_TYPE_PROJECT) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_PROJECT", typeof(string));
    
            var c_INCIDENT_RELEVANT_TYPE_SITEParameter = c_INCIDENT_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", c_INCIDENT_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_INCIDENT_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_INCIDENT_STATUS_COMPLETEParameter = c_INCIDENT_STATUS_COMPLETE != null ?
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", c_INCIDENT_STATUS_COMPLETE) :
                new ObjectParameter("C_INCIDENT_STATUS_COMPLETE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncidentList>("SearchIncidentList", incidentNoParameter, incidentTitleParameter, incidentTypeParameter, incidentStatusHandlingParameter, incidentStatusCompleteParameter, incidentOfficeCodeParameter, specfyPeriodParameter, specifyPeriodFromParameter, specifyPeriodToParameter, registrantParameter, controlChiefParameter, correspondentParameter, chiefParameter, assistantParameter, contractTargetPurchaserNameParameter, siteNameParameter, customerGroupNameParameter, contractCodeParameter, userCodeParameter, contractOfficeCodeParameter, operationOfficeCodeParameter, contractStatusParameter, contractTypeParameter, customerNameParameter, projectNameParameter, c_INCIDENT_ROLE_CONTROL_CHIEFParameter, c_INCIDENT_ROLE_CHIEFParameter, c_INCIDENT_ROLE_CORRESPONDENTParameter, c_INCIDENT_ROLE_ASSISTANTParameter, c_INCIDENT_TYPEParameter, c_INCIDENT_STATUSParameter, c_DEADLINE_TIME_TYPEParameter, c_INCIDENT_SEARCH_PERIOD_OCCURRINGParameter, c_INCIDENT_SEARCH_PERIOD_DUEDATEParameter, c_INCIDENT_SEARCH_PERIOD_COMPLETEParameter, c_INCIDENT_RELEVANT_TYPE_CONTRACTParameter, c_INCIDENT_RELEVANT_TYPE_CUSTOMERParameter, c_INCIDENT_RELEVANT_TYPE_PROJECTParameter, c_INCIDENT_RELEVANT_TYPE_SITEParameter, c_INCIDENT_STATUS_COMPLETEParameter);
        }
    
        public virtual ObjectResult<RPTContractReportDo> GetRptContractReportData(Nullable<int> iDocID, Nullable<bool> bFlagOn, string cPaymentMethod, string cBillingTiming)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            var cPaymentMethodParameter = cPaymentMethod != null ?
                new ObjectParameter("cPaymentMethod", cPaymentMethod) :
                new ObjectParameter("cPaymentMethod", typeof(string));
    
            var cBillingTimingParameter = cBillingTiming != null ?
                new ObjectParameter("cBillingTiming", cBillingTiming) :
                new ObjectParameter("cBillingTiming", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTContractReportDo>("GetRptContractReportData", iDocIDParameter, bFlagOnParameter, cPaymentMethodParameter, cBillingTimingParameter);
        }
    
        public virtual ObjectResult<string> GetProjectStatus(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetProjectStatus", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_Project> UpdateTbt_ProjectData(string xmlTbt_Project)
        {
            var xmlTbt_ProjectParameter = xmlTbt_Project != null ?
                new ObjectParameter("xmlTbt_Project", xmlTbt_Project) :
                new ObjectParameter("xmlTbt_Project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("UpdateTbt_ProjectData", xmlTbt_ProjectParameter);
        }
    
        public virtual ObjectResult<tbt_Project> UpdateTbt_ProjectData(string xmlTbt_Project, MergeOption mergeOption)
        {
            var xmlTbt_ProjectParameter = xmlTbt_Project != null ?
                new ObjectParameter("xmlTbt_Project", xmlTbt_Project) :
                new ObjectParameter("xmlTbt_Project", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("UpdateTbt_ProjectData", mergeOption, xmlTbt_ProjectParameter);
        }
    
        public virtual ObjectResult<RPTConfirmCurrInstMemoDo> GetRptConfirmCurrentInstrumentMemoData(Nullable<int> iDocID, Nullable<bool> bFlagOn)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTConfirmCurrInstMemoDo>("GetRptConfirmCurrentInstrumentMemoData", iDocIDParameter, bFlagOnParameter);
        }
    
        public virtual ObjectResult<RPTCancelContractMemoDo> GetRptCancelContractMemoData(Nullable<int> iDocID, Nullable<bool> bFlagOn)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTCancelContractMemoDo>("GetRptCancelContractMemoData", iDocIDParameter, bFlagOnParameter);
        }
    
        public virtual ObjectResult<RPTCancelContractMemoDetailDo> GetRptCancelContractMemoDetailData(Nullable<int> iDocID)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTCancelContractMemoDetailDo>("GetRptCancelContractMemoDetailData", iDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectExpectedInstrumentDetails> UpdateTbt_ProjectExpectedInstrumentDetails(string strProjectCode, string strInstrumentCode, Nullable<int> intInstrumentQty, string updateBy, Nullable<System.DateTime> updateDate)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var strInstrumentCodeParameter = strInstrumentCode != null ?
                new ObjectParameter("strInstrumentCode", strInstrumentCode) :
                new ObjectParameter("strInstrumentCode", typeof(string));
    
            var intInstrumentQtyParameter = intInstrumentQty.HasValue ?
                new ObjectParameter("intInstrumentQty", intInstrumentQty) :
                new ObjectParameter("intInstrumentQty", typeof(int));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectExpectedInstrumentDetails>("UpdateTbt_ProjectExpectedInstrumentDetails", strProjectCodeParameter, strInstrumentCodeParameter, intInstrumentQtyParameter, updateByParameter, updateDateParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectExpectedInstrumentDetails> UpdateTbt_ProjectExpectedInstrumentDetails(string strProjectCode, string strInstrumentCode, Nullable<int> intInstrumentQty, string updateBy, Nullable<System.DateTime> updateDate, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var strInstrumentCodeParameter = strInstrumentCode != null ?
                new ObjectParameter("strInstrumentCode", strInstrumentCode) :
                new ObjectParameter("strInstrumentCode", typeof(string));
    
            var intInstrumentQtyParameter = intInstrumentQty.HasValue ?
                new ObjectParameter("intInstrumentQty", intInstrumentQty) :
                new ObjectParameter("intInstrumentQty", typeof(int));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectExpectedInstrumentDetails>("UpdateTbt_ProjectExpectedInstrumentDetails", mergeOption, strProjectCodeParameter, strInstrumentCodeParameter, intInstrumentQtyParameter, updateByParameter, updateDateParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectExpectedInstrumentDetails> DeleteTbt_ProjectExpectedInstrumentDetails(string strProjectCode, string instrumentCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var instrumentCodeParameter = instrumentCode != null ?
                new ObjectParameter("InstrumentCode", instrumentCode) :
                new ObjectParameter("InstrumentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectExpectedInstrumentDetails>("DeleteTbt_ProjectExpectedInstrumentDetails", strProjectCodeParameter, instrumentCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectExpectedInstrumentDetails> DeleteTbt_ProjectExpectedInstrumentDetails(string strProjectCode, string instrumentCode, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var instrumentCodeParameter = instrumentCode != null ?
                new ObjectParameter("InstrumentCode", instrumentCode) :
                new ObjectParameter("InstrumentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectExpectedInstrumentDetails>("DeleteTbt_ProjectExpectedInstrumentDetails", mergeOption, strProjectCodeParameter, instrumentCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSystemDetails> DeleteTbt_ProjectSystemDetails(string strProjectCode, string productCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSystemDetails>("DeleteTbt_ProjectSystemDetails", strProjectCodeParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSystemDetails> DeleteTbt_ProjectSystemDetails(string strProjectCode, string productCode, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSystemDetails>("DeleteTbt_ProjectSystemDetails", mergeOption, strProjectCodeParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSupportStaffDetails> DeleteTbt_ProjectSupportStaffDetails(string strProjectCode, string empNo)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSupportStaffDetails>("DeleteTbt_ProjectSupportStaffDetails", strProjectCodeParameter, empNoParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectSupportStaffDetails> DeleteTbt_ProjectSupportStaffDetails(string strProjectCode, string empNo, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var empNoParameter = empNo != null ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectSupportStaffDetails>("DeleteTbt_ProjectSupportStaffDetails", mergeOption, strProjectCodeParameter, empNoParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> DeleteTbt_ProjectOtherRalatedCompany(string strProjectCode, Nullable<int> sequenceNo)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var sequenceNoParameter = sequenceNo.HasValue ?
                new ObjectParameter("SequenceNo", sequenceNo) :
                new ObjectParameter("SequenceNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("DeleteTbt_ProjectOtherRalatedCompany", strProjectCodeParameter, sequenceNoParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> DeleteTbt_ProjectOtherRalatedCompany(string strProjectCode, Nullable<int> sequenceNo, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var sequenceNoParameter = sequenceNo.HasValue ?
                new ObjectParameter("SequenceNo", sequenceNo) :
                new ObjectParameter("SequenceNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("DeleteTbt_ProjectOtherRalatedCompany", mergeOption, strProjectCodeParameter, sequenceNoParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> UpdateTbt_ProjectOtherRalatedCompany(string strProjectCode, Nullable<int> sequenceNo, string companyName, string name, string telNo, string remark)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var sequenceNoParameter = sequenceNo.HasValue ?
                new ObjectParameter("SequenceNo", sequenceNo) :
                new ObjectParameter("SequenceNo", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telNoParameter = telNo != null ?
                new ObjectParameter("TelNo", telNo) :
                new ObjectParameter("TelNo", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("UpdateTbt_ProjectOtherRalatedCompany", strProjectCodeParameter, sequenceNoParameter, companyNameParameter, nameParameter, telNoParameter, remarkParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectOtherRalatedCompany> UpdateTbt_ProjectOtherRalatedCompany(string strProjectCode, Nullable<int> sequenceNo, string companyName, string name, string telNo, string remark, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var sequenceNoParameter = sequenceNo.HasValue ?
                new ObjectParameter("SequenceNo", sequenceNo) :
                new ObjectParameter("SequenceNo", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telNoParameter = telNo != null ?
                new ObjectParameter("TelNo", telNo) :
                new ObjectParameter("TelNo", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectOtherRalatedCompany>("UpdateTbt_ProjectOtherRalatedCompany", mergeOption, strProjectCodeParameter, sequenceNoParameter, companyNameParameter, nameParameter, telNoParameter, remarkParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutBranchIntrumentDetails> InsertTbt_ProjectStockoutBranchIntrumentDetails(string xML_Tbt_ProjectStockoutBranchIntrumentDetails)
        {
            var xML_Tbt_ProjectStockoutBranchIntrumentDetailsParameter = xML_Tbt_ProjectStockoutBranchIntrumentDetails != null ?
                new ObjectParameter("XML_Tbt_ProjectStockoutBranchIntrumentDetails", xML_Tbt_ProjectStockoutBranchIntrumentDetails) :
                new ObjectParameter("XML_Tbt_ProjectStockoutBranchIntrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutBranchIntrumentDetails>("InsertTbt_ProjectStockoutBranchIntrumentDetails", xML_Tbt_ProjectStockoutBranchIntrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutBranchIntrumentDetails> InsertTbt_ProjectStockoutBranchIntrumentDetails(string xML_Tbt_ProjectStockoutBranchIntrumentDetails, MergeOption mergeOption)
        {
            var xML_Tbt_ProjectStockoutBranchIntrumentDetailsParameter = xML_Tbt_ProjectStockoutBranchIntrumentDetails != null ?
                new ObjectParameter("XML_Tbt_ProjectStockoutBranchIntrumentDetails", xML_Tbt_ProjectStockoutBranchIntrumentDetails) :
                new ObjectParameter("XML_Tbt_ProjectStockoutBranchIntrumentDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutBranchIntrumentDetails>("InsertTbt_ProjectStockoutBranchIntrumentDetails", mergeOption, xML_Tbt_ProjectStockoutBranchIntrumentDetailsParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutBranchIntrumentDetails> UpdateTbt_ProjectStockoutBranchIntrumentDetails(string strProjectCode, Nullable<int> branchNo, Nullable<int> assignBranchQty, string updateBy, Nullable<System.DateTime> updateDate, string instrumentCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var branchNoParameter = branchNo.HasValue ?
                new ObjectParameter("BranchNo", branchNo) :
                new ObjectParameter("BranchNo", typeof(int));
    
            var assignBranchQtyParameter = assignBranchQty.HasValue ?
                new ObjectParameter("AssignBranchQty", assignBranchQty) :
                new ObjectParameter("AssignBranchQty", typeof(int));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var instrumentCodeParameter = instrumentCode != null ?
                new ObjectParameter("InstrumentCode", instrumentCode) :
                new ObjectParameter("InstrumentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutBranchIntrumentDetails>("UpdateTbt_ProjectStockoutBranchIntrumentDetails", strProjectCodeParameter, branchNoParameter, assignBranchQtyParameter, updateByParameter, updateDateParameter, instrumentCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockoutBranchIntrumentDetails> UpdateTbt_ProjectStockoutBranchIntrumentDetails(string strProjectCode, Nullable<int> branchNo, Nullable<int> assignBranchQty, string updateBy, Nullable<System.DateTime> updateDate, string instrumentCode, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var branchNoParameter = branchNo.HasValue ?
                new ObjectParameter("BranchNo", branchNo) :
                new ObjectParameter("BranchNo", typeof(int));
    
            var assignBranchQtyParameter = assignBranchQty.HasValue ?
                new ObjectParameter("AssignBranchQty", assignBranchQty) :
                new ObjectParameter("AssignBranchQty", typeof(int));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var instrumentCodeParameter = instrumentCode != null ?
                new ObjectParameter("InstrumentCode", instrumentCode) :
                new ObjectParameter("InstrumentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockoutBranchIntrumentDetails>("UpdateTbt_ProjectStockoutBranchIntrumentDetails", mergeOption, strProjectCodeParameter, branchNoParameter, assignBranchQtyParameter, updateByParameter, updateDateParameter, instrumentCodeParameter);
        }
    
        public virtual ObjectResult<dtRentalContractBasicForInstall> GetRentalContractBasicForInstall(string strContractCode, string buildingType, string c_RENTAL_CHANGE_TYPE_ALTERNATIVE_START, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var buildingTypeParameter = buildingType != null ?
                new ObjectParameter("BuildingType", buildingType) :
                new ObjectParameter("BuildingType", typeof(string));
    
            var c_RENTAL_CHANGE_TYPE_ALTERNATIVE_STARTParameter = c_RENTAL_CHANGE_TYPE_ALTERNATIVE_START != null ?
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_ALTERNATIVE_START", c_RENTAL_CHANGE_TYPE_ALTERNATIVE_START) :
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_ALTERNATIVE_START", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtRentalContractBasicForInstall>("GetRentalContractBasicForInstall", strContractCodeParameter, buildingTypeParameter, c_RENTAL_CHANGE_TYPE_ALTERNATIVE_STARTParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtSaleBasic> GetSaleBasicForInstall(string strContractCode, string buildingType, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var buildingTypeParameter = buildingType != null ?
                new ObjectParameter("BuildingType", buildingType) :
                new ObjectParameter("BuildingType", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSaleBasic>("GetSaleBasicForInstall", strContractCodeParameter, buildingTypeParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<dtProjectForInstall> GetProjectForInstall(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtProjectForInstall>("GetProjectForInstall", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<RPTChangeFeeMemoDo> GetRptChangeFeeMemoData(Nullable<int> iDocID, Nullable<bool> bFlagOn)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTChangeFeeMemoDo>("GetRptChangeFeeMemoData", iDocIDParameter, bFlagOnParameter);
        }
    
        public virtual ObjectResult<dtRentalContractBasicForView> GetRentalContractBasicForView(string strContractCode, string strUserCode, string c_RENTAL_CHANGE_TYPE)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strUserCodeParameter = strUserCode != null ?
                new ObjectParameter("strUserCode", strUserCode) :
                new ObjectParameter("strUserCode", typeof(string));
    
            var c_RENTAL_CHANGE_TYPEParameter = c_RENTAL_CHANGE_TYPE != null ?
                new ObjectParameter("C_RENTAL_CHANGE_TYPE", c_RENTAL_CHANGE_TYPE) :
                new ObjectParameter("C_RENTAL_CHANGE_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtRentalContractBasicForView>("GetRentalContractBasicForView", strContractCodeParameter, strUserCodeParameter, c_RENTAL_CHANGE_TYPEParameter);
        }
    
        public virtual ObjectResult<dtSaleContractBasicForView> GetSaleContractBasicForView(string strContractCode, string c_SALE_PROC_MANAGE_STATUS, string c_SALE_TYPE, string c_SALE_CHANGE_TYPE, Nullable<bool> fLAG_ON, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var c_SALE_PROC_MANAGE_STATUSParameter = c_SALE_PROC_MANAGE_STATUS != null ?
                new ObjectParameter("C_SALE_PROC_MANAGE_STATUS", c_SALE_PROC_MANAGE_STATUS) :
                new ObjectParameter("C_SALE_PROC_MANAGE_STATUS", typeof(string));
    
            var c_SALE_TYPEParameter = c_SALE_TYPE != null ?
                new ObjectParameter("C_SALE_TYPE", c_SALE_TYPE) :
                new ObjectParameter("C_SALE_TYPE", typeof(string));
    
            var c_SALE_CHANGE_TYPEParameter = c_SALE_CHANGE_TYPE != null ?
                new ObjectParameter("C_SALE_CHANGE_TYPE", c_SALE_CHANGE_TYPE) :
                new ObjectParameter("C_SALE_CHANGE_TYPE", typeof(string));
    
            var fLAG_ONParameter = fLAG_ON.HasValue ?
                new ObjectParameter("FLAG_ON", fLAG_ON) :
                new ObjectParameter("FLAG_ON", typeof(bool));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSaleContractBasicForView>("GetSaleContractBasicForView", strContractCodeParameter, c_SALE_PROC_MANAGE_STATUSParameter, c_SALE_TYPEParameter, c_SALE_CHANGE_TYPEParameter, fLAG_ONParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<dtChangedCustHistList> GetChangedCustHistList(string pchvContractCode, string pchrOCC, string pchrCSCustCode, string pchrRCCustCode, string pchrSiteCode, string pchvC_CONTRACT_SIGNER_TYPE, string pchvC_CHANGE_NAME_REASON_TYPE)
        {
            var pchvContractCodeParameter = pchvContractCode != null ?
                new ObjectParameter("pchvContractCode", pchvContractCode) :
                new ObjectParameter("pchvContractCode", typeof(string));
    
            var pchrOCCParameter = pchrOCC != null ?
                new ObjectParameter("pchrOCC", pchrOCC) :
                new ObjectParameter("pchrOCC", typeof(string));
    
            var pchrCSCustCodeParameter = pchrCSCustCode != null ?
                new ObjectParameter("pchrCSCustCode", pchrCSCustCode) :
                new ObjectParameter("pchrCSCustCode", typeof(string));
    
            var pchrRCCustCodeParameter = pchrRCCustCode != null ?
                new ObjectParameter("pchrRCCustCode", pchrRCCustCode) :
                new ObjectParameter("pchrRCCustCode", typeof(string));
    
            var pchrSiteCodeParameter = pchrSiteCode != null ?
                new ObjectParameter("pchrSiteCode", pchrSiteCode) :
                new ObjectParameter("pchrSiteCode", typeof(string));
    
            var pchvC_CONTRACT_SIGNER_TYPEParameter = pchvC_CONTRACT_SIGNER_TYPE != null ?
                new ObjectParameter("pchvC_CONTRACT_SIGNER_TYPE", pchvC_CONTRACT_SIGNER_TYPE) :
                new ObjectParameter("pchvC_CONTRACT_SIGNER_TYPE", typeof(string));
    
            var pchvC_CHANGE_NAME_REASON_TYPEParameter = pchvC_CHANGE_NAME_REASON_TYPE != null ?
                new ObjectParameter("pchvC_CHANGE_NAME_REASON_TYPE", pchvC_CHANGE_NAME_REASON_TYPE) :
                new ObjectParameter("pchvC_CHANGE_NAME_REASON_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtChangedCustHistList>("GetChangedCustHistList", pchvContractCodeParameter, pchrOCCParameter, pchrCSCustCodeParameter, pchrRCCustCodeParameter, pchrSiteCodeParameter, pchvC_CONTRACT_SIGNER_TYPEParameter, pchvC_CHANGE_NAME_REASON_TYPEParameter);
        }
    
        public virtual ObjectResult<CheckCancelContractBeforeStartService_Result> CheckCancelContractBeforeStartService(string strContractCode, string c_CONTRACT_STATUS_END, string c_CONTRACT_STATUS_CANCEL, string c_CONTRACT_STATUS_FIXED_CANCEL)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var c_CONTRACT_STATUS_ENDParameter = c_CONTRACT_STATUS_END != null ?
                new ObjectParameter("C_CONTRACT_STATUS_END", c_CONTRACT_STATUS_END) :
                new ObjectParameter("C_CONTRACT_STATUS_END", typeof(string));
    
            var c_CONTRACT_STATUS_CANCELParameter = c_CONTRACT_STATUS_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", c_CONTRACT_STATUS_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_CANCEL", typeof(string));
    
            var c_CONTRACT_STATUS_FIXED_CANCELParameter = c_CONTRACT_STATUS_FIXED_CANCEL != null ?
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", c_CONTRACT_STATUS_FIXED_CANCEL) :
                new ObjectParameter("C_CONTRACT_STATUS_FIXED_CANCEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckCancelContractBeforeStartService_Result>("CheckCancelContractBeforeStartService", strContractCodeParameter, c_CONTRACT_STATUS_ENDParameter, c_CONTRACT_STATUS_CANCELParameter, c_CONTRACT_STATUS_FIXED_CANCELParameter);
        }
    
        public virtual ObjectResult<RPTCoverLetterDo> GetRptCoverLetterData(Nullable<int> iDocID, string cPaymentMethod)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var cPaymentMethodParameter = cPaymentMethod != null ?
                new ObjectParameter("cPaymentMethod", cPaymentMethod) :
                new ObjectParameter("cPaymentMethod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTCoverLetterDo>("GetRptCoverLetterData", iDocIDParameter, cPaymentMethodParameter);
        }
    
        public virtual ObjectResult<RPTInstrumentDetailDo> GetRptInstrumentDetailData(Nullable<int> iDocID)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTInstrumentDetailDo>("GetRptInstrumentDetailData", iDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetContractEmailByContractCodeOCC(string contractCode, string oCC)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetContractEmailByContractCodeOCC", contractCodeParameter, oCCParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetContractEmailByContractCodeOCC(string contractCode, string oCC, MergeOption mergeOption)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetContractEmailByContractCodeOCC", mergeOption, contractCodeParameter, oCCParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetTbt_ContractEmailByContractCodeOCC(string contractCode, string oCC)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetTbt_ContractEmailByContractCodeOCC", contractCodeParameter, oCCParameter);
        }
    
        public virtual ObjectResult<tbt_ContractEmail> GetTbt_ContractEmailByContractCodeOCC(string contractCode, string oCC, MergeOption mergeOption)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractEmail>("GetTbt_ContractEmailByContractCodeOCC", mergeOption, contractCodeParameter, oCCParameter);
        }
    
        public virtual ObjectResult<dtTbs_IncidentTypePattern> GetTbs_IncidentTypePattern(string strIncidentType)
        {
            var strIncidentTypeParameter = strIncidentType != null ?
                new ObjectParameter("strIncidentType", strIncidentType) :
                new ObjectParameter("strIncidentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbs_IncidentTypePattern>("GetTbs_IncidentTypePattern", strIncidentTypeParameter);
        }
    
        public virtual ObjectResult<tbt_Incident> InsertTbt_Incident(string xml_Incident)
        {
            var xml_IncidentParameter = xml_Incident != null ?
                new ObjectParameter("xml_Incident", xml_Incident) :
                new ObjectParameter("xml_Incident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Incident>("InsertTbt_Incident", xml_IncidentParameter);
        }
    
        public virtual ObjectResult<tbt_Incident> InsertTbt_Incident(string xml_Incident, MergeOption mergeOption)
        {
            var xml_IncidentParameter = xml_Incident != null ?
                new ObjectParameter("xml_Incident", xml_Incident) :
                new ObjectParameter("xml_Incident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Incident>("InsertTbt_Incident", mergeOption, xml_IncidentParameter);
        }
    
        public virtual ObjectResult<dtContractOfAllSite> GetReleatedContractOfCustIncident(string strSiteCodeList, Nullable<bool> c_FLAG_ON)
        {
            var strSiteCodeListParameter = strSiteCodeList != null ?
                new ObjectParameter("strSiteCodeList", strSiteCodeList) :
                new ObjectParameter("strSiteCodeList", typeof(string));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractOfAllSite>("GetReleatedContractOfCustIncident", strSiteCodeListParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<dtContractDoc> GetContractDocDataList(string strContractCode, string strQuotationTargetCode, string strOccAlphabet, string strOfficeCode, Nullable<int> cModuleIdContract, string cARStatus, Nullable<bool> cFlagOn)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strQuotationTargetCodeParameter = strQuotationTargetCode != null ?
                new ObjectParameter("strQuotationTargetCode", strQuotationTargetCode) :
                new ObjectParameter("strQuotationTargetCode", typeof(string));
    
            var strOccAlphabetParameter = strOccAlphabet != null ?
                new ObjectParameter("strOccAlphabet", strOccAlphabet) :
                new ObjectParameter("strOccAlphabet", typeof(string));
    
            var strOfficeCodeParameter = strOfficeCode != null ?
                new ObjectParameter("strOfficeCode", strOfficeCode) :
                new ObjectParameter("strOfficeCode", typeof(string));
    
            var cModuleIdContractParameter = cModuleIdContract.HasValue ?
                new ObjectParameter("cModuleIdContract", cModuleIdContract) :
                new ObjectParameter("cModuleIdContract", typeof(int));
    
            var cARStatusParameter = cARStatus != null ?
                new ObjectParameter("cARStatus", cARStatus) :
                new ObjectParameter("cARStatus", typeof(string));
    
            var cFlagOnParameter = cFlagOn.HasValue ?
                new ObjectParameter("cFlagOn", cFlagOn) :
                new ObjectParameter("cFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractDoc>("GetContractDocDataList", strContractCodeParameter, strQuotationTargetCodeParameter, strOccAlphabetParameter, strOfficeCodeParameter, cModuleIdContractParameter, cARStatusParameter, cFlagOnParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> InsertTbt_IncidentRole(string xml_IncidentRole)
        {
            var xml_IncidentRoleParameter = xml_IncidentRole != null ?
                new ObjectParameter("xml_IncidentRole", xml_IncidentRole) :
                new ObjectParameter("xml_IncidentRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("InsertTbt_IncidentRole", xml_IncidentRoleParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> InsertTbt_IncidentRole(string xml_IncidentRole, MergeOption mergeOption)
        {
            var xml_IncidentRoleParameter = xml_IncidentRole != null ?
                new ObjectParameter("xml_IncidentRole", xml_IncidentRole) :
                new ObjectParameter("xml_IncidentRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("InsertTbt_IncidentRole", mergeOption, xml_IncidentRoleParameter);
        }
    
        public virtual ObjectResult<dtIncidentRole> GetIncidentRoleData(Nullable<int> incidentID, string c_INCIDENT_ROLE_TYPE, string c_INCIDENT_ROLE_CHIEF_OF_RELATED_OFFICE)
        {
            var incidentIDParameter = incidentID.HasValue ?
                new ObjectParameter("incidentID", incidentID) :
                new ObjectParameter("incidentID", typeof(int));
    
            var c_INCIDENT_ROLE_TYPEParameter = c_INCIDENT_ROLE_TYPE != null ?
                new ObjectParameter("C_INCIDENT_ROLE_TYPE", c_INCIDENT_ROLE_TYPE) :
                new ObjectParameter("C_INCIDENT_ROLE_TYPE", typeof(string));
    
            var c_INCIDENT_ROLE_CHIEF_OF_RELATED_OFFICEParameter = c_INCIDENT_ROLE_CHIEF_OF_RELATED_OFFICE != null ?
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF_OF_RELATED_OFFICE", c_INCIDENT_ROLE_CHIEF_OF_RELATED_OFFICE) :
                new ObjectParameter("C_INCIDENT_ROLE_CHIEF_OF_RELATED_OFFICE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncidentRole>("GetIncidentRoleData", incidentIDParameter, c_INCIDENT_ROLE_TYPEParameter, c_INCIDENT_ROLE_CHIEF_OF_RELATED_OFFICEParameter);
        }
    
        public virtual ObjectResult<dtIncidentHistory> GetIncidentHistoryData(Nullable<int> incidentID, string c_INCIDENT_INTERACTION_TYPE)
        {
            var incidentIDParameter = incidentID.HasValue ?
                new ObjectParameter("incidentID", incidentID) :
                new ObjectParameter("incidentID", typeof(int));
    
            var c_INCIDENT_INTERACTION_TYPEParameter = c_INCIDENT_INTERACTION_TYPE != null ?
                new ObjectParameter("C_INCIDENT_INTERACTION_TYPE", c_INCIDENT_INTERACTION_TYPE) :
                new ObjectParameter("C_INCIDENT_INTERACTION_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtIncidentHistory>("GetIncidentHistoryData", incidentIDParameter, c_INCIDENT_INTERACTION_TYPEParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentHistoryDetail> GetTbt_IncidentHistoryDetail(Nullable<int> strIncidentHistoryID)
        {
            var strIncidentHistoryIDParameter = strIncidentHistoryID.HasValue ?
                new ObjectParameter("strIncidentHistoryID", strIncidentHistoryID) :
                new ObjectParameter("strIncidentHistoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentHistoryDetail>("GetTbt_IncidentHistoryDetail", strIncidentHistoryIDParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentHistoryDetail> GetTbt_IncidentHistoryDetail(Nullable<int> strIncidentHistoryID, MergeOption mergeOption)
        {
            var strIncidentHistoryIDParameter = strIncidentHistoryID.HasValue ?
                new ObjectParameter("strIncidentHistoryID", strIncidentHistoryID) :
                new ObjectParameter("strIncidentHistoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentHistoryDetail>("GetTbt_IncidentHistoryDetail", mergeOption, strIncidentHistoryIDParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> UpdateDocumentStatus(string strDocStatus, Nullable<int> iDocID, Nullable<System.DateTime> updateDate, string updateBy)
        {
            var strDocStatusParameter = strDocStatus != null ?
                new ObjectParameter("strDocStatus", strDocStatus) :
                new ObjectParameter("strDocStatus", typeof(string));
    
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("UpdateDocumentStatus", strDocStatusParameter, iDocIDParameter, updateDateParameter, updateByParameter);
        }
    
        public virtual ObjectResult<tbt_ContractDocument> UpdateDocumentStatus(string strDocStatus, Nullable<int> iDocID, Nullable<System.DateTime> updateDate, string updateBy, MergeOption mergeOption)
        {
            var strDocStatusParameter = strDocStatus != null ?
                new ObjectParameter("strDocStatus", strDocStatus) :
                new ObjectParameter("strDocStatus", typeof(string));
    
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractDocument>("UpdateDocumentStatus", mergeOption, strDocStatusParameter, iDocIDParameter, updateDateParameter, updateByParameter);
        }
    
        public virtual ObjectResult<dtContractDocumentList> SearchContractDocument(string strDocStatus, string strContractCode, string strQuotationTargetCode, string strProjectCode, string strOcc, string strAlphabet, string strContractOfficeCode, string strOperationOfficeCode, string strContractOfficeCodeAuthority, string strOperationOfficeCodeAuthority, string strNegotiationStaffEmpNo, string strNegotiationStaffEmpName, string strDocumentCode, string cDocStatus, string cDocAuditResult, Nullable<bool> cFlagOn)
        {
            var strDocStatusParameter = strDocStatus != null ?
                new ObjectParameter("strDocStatus", strDocStatus) :
                new ObjectParameter("strDocStatus", typeof(string));
    
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strQuotationTargetCodeParameter = strQuotationTargetCode != null ?
                new ObjectParameter("strQuotationTargetCode", strQuotationTargetCode) :
                new ObjectParameter("strQuotationTargetCode", typeof(string));
    
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var strOccParameter = strOcc != null ?
                new ObjectParameter("strOcc", strOcc) :
                new ObjectParameter("strOcc", typeof(string));
    
            var strAlphabetParameter = strAlphabet != null ?
                new ObjectParameter("strAlphabet", strAlphabet) :
                new ObjectParameter("strAlphabet", typeof(string));
    
            var strContractOfficeCodeParameter = strContractOfficeCode != null ?
                new ObjectParameter("strContractOfficeCode", strContractOfficeCode) :
                new ObjectParameter("strContractOfficeCode", typeof(string));
    
            var strOperationOfficeCodeParameter = strOperationOfficeCode != null ?
                new ObjectParameter("strOperationOfficeCode", strOperationOfficeCode) :
                new ObjectParameter("strOperationOfficeCode", typeof(string));
    
            var strContractOfficeCodeAuthorityParameter = strContractOfficeCodeAuthority != null ?
                new ObjectParameter("strContractOfficeCodeAuthority", strContractOfficeCodeAuthority) :
                new ObjectParameter("strContractOfficeCodeAuthority", typeof(string));
    
            var strOperationOfficeCodeAuthorityParameter = strOperationOfficeCodeAuthority != null ?
                new ObjectParameter("strOperationOfficeCodeAuthority", strOperationOfficeCodeAuthority) :
                new ObjectParameter("strOperationOfficeCodeAuthority", typeof(string));
    
            var strNegotiationStaffEmpNoParameter = strNegotiationStaffEmpNo != null ?
                new ObjectParameter("strNegotiationStaffEmpNo", strNegotiationStaffEmpNo) :
                new ObjectParameter("strNegotiationStaffEmpNo", typeof(string));
    
            var strNegotiationStaffEmpNameParameter = strNegotiationStaffEmpName != null ?
                new ObjectParameter("strNegotiationStaffEmpName", strNegotiationStaffEmpName) :
                new ObjectParameter("strNegotiationStaffEmpName", typeof(string));
    
            var strDocumentCodeParameter = strDocumentCode != null ?
                new ObjectParameter("strDocumentCode", strDocumentCode) :
                new ObjectParameter("strDocumentCode", typeof(string));
    
            var cDocStatusParameter = cDocStatus != null ?
                new ObjectParameter("cDocStatus", cDocStatus) :
                new ObjectParameter("cDocStatus", typeof(string));
    
            var cDocAuditResultParameter = cDocAuditResult != null ?
                new ObjectParameter("cDocAuditResult", cDocAuditResult) :
                new ObjectParameter("cDocAuditResult", typeof(string));
    
            var cFlagOnParameter = cFlagOn.HasValue ?
                new ObjectParameter("cFlagOn", cFlagOn) :
                new ObjectParameter("cFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtContractDocumentList>("SearchContractDocument", strDocStatusParameter, strContractCodeParameter, strQuotationTargetCodeParameter, strProjectCodeParameter, strOccParameter, strAlphabetParameter, strContractOfficeCodeParameter, strOperationOfficeCodeParameter, strContractOfficeCodeAuthorityParameter, strOperationOfficeCodeAuthorityParameter, strNegotiationStaffEmpNoParameter, strNegotiationStaffEmpNameParameter, strDocumentCodeParameter, cDocStatusParameter, cDocAuditResultParameter, cFlagOnParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> DeleteTbt_IncidentRole(Nullable<int> pIncidentRoleID)
        {
            var pIncidentRoleIDParameter = pIncidentRoleID.HasValue ?
                new ObjectParameter("pIncidentRoleID", pIncidentRoleID) :
                new ObjectParameter("pIncidentRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("DeleteTbt_IncidentRole", pIncidentRoleIDParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> DeleteTbt_IncidentRole(Nullable<int> pIncidentRoleID, MergeOption mergeOption)
        {
            var pIncidentRoleIDParameter = pIncidentRoleID.HasValue ?
                new ObjectParameter("pIncidentRoleID", pIncidentRoleID) :
                new ObjectParameter("pIncidentRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("DeleteTbt_IncidentRole", mergeOption, pIncidentRoleIDParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentHistory> InsertTbt_IncidentHistory(string xml_IncidentHistory)
        {
            var xml_IncidentHistoryParameter = xml_IncidentHistory != null ?
                new ObjectParameter("xml_IncidentHistory", xml_IncidentHistory) :
                new ObjectParameter("xml_IncidentHistory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentHistory>("InsertTbt_IncidentHistory", xml_IncidentHistoryParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentHistory> InsertTbt_IncidentHistory(string xml_IncidentHistory, MergeOption mergeOption)
        {
            var xml_IncidentHistoryParameter = xml_IncidentHistory != null ?
                new ObjectParameter("xml_IncidentHistory", xml_IncidentHistory) :
                new ObjectParameter("xml_IncidentHistory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentHistory>("InsertTbt_IncidentHistory", mergeOption, xml_IncidentHistoryParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentHistoryDetail> InsertTbt_IncidentHistoryDetail(string xml_IncidentHistoryDetail)
        {
            var xml_IncidentHistoryDetailParameter = xml_IncidentHistoryDetail != null ?
                new ObjectParameter("xml_IncidentHistoryDetail", xml_IncidentHistoryDetail) :
                new ObjectParameter("xml_IncidentHistoryDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentHistoryDetail>("InsertTbt_IncidentHistoryDetail", xml_IncidentHistoryDetailParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentHistoryDetail> InsertTbt_IncidentHistoryDetail(string xml_IncidentHistoryDetail, MergeOption mergeOption)
        {
            var xml_IncidentHistoryDetailParameter = xml_IncidentHistoryDetail != null ?
                new ObjectParameter("xml_IncidentHistoryDetail", xml_IncidentHistoryDetail) :
                new ObjectParameter("xml_IncidentHistoryDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentHistoryDetail>("InsertTbt_IncidentHistoryDetail", mergeOption, xml_IncidentHistoryDetailParameter);
        }
    
        public virtual ObjectResult<tbt_Incident> UpdateTbt_Incident(string xmlIncident)
        {
            var xmlIncidentParameter = xmlIncident != null ?
                new ObjectParameter("xmlIncident", xmlIncident) :
                new ObjectParameter("xmlIncident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Incident>("UpdateTbt_Incident", xmlIncidentParameter);
        }
    
        public virtual ObjectResult<tbt_Incident> UpdateTbt_Incident(string xmlIncident, MergeOption mergeOption)
        {
            var xmlIncidentParameter = xmlIncident != null ?
                new ObjectParameter("xmlIncident", xmlIncident) :
                new ObjectParameter("xmlIncident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Incident>("UpdateTbt_Incident", mergeOption, xmlIncidentParameter);
        }
    
        public virtual ObjectResult<RPTMACheckupSlipDo> GetMaintenanceCheckupSlipReport(string paramContractCode, string paramProductCode, Nullable<System.DateTime> paramInstructionDate, string paramContractStatusAfterStart)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramProductCodeParameter = paramProductCode != null ?
                new ObjectParameter("paramProductCode", paramProductCode) :
                new ObjectParameter("paramProductCode", typeof(string));
    
            var paramInstructionDateParameter = paramInstructionDate.HasValue ?
                new ObjectParameter("paramInstructionDate", paramInstructionDate) :
                new ObjectParameter("paramInstructionDate", typeof(System.DateTime));
    
            var paramContractStatusAfterStartParameter = paramContractStatusAfterStart != null ?
                new ObjectParameter("paramContractStatusAfterStart", paramContractStatusAfterStart) :
                new ObjectParameter("paramContractStatusAfterStart", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTMACheckupSlipDo>("GetMaintenanceCheckupSlipReport", paramContractCodeParameter, paramProductCodeParameter, paramInstructionDateParameter, paramContractStatusAfterStartParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> UpdateTbt_IncidentRole(string xml_doTbtIncidentRole)
        {
            var xml_doTbtIncidentRoleParameter = xml_doTbtIncidentRole != null ?
                new ObjectParameter("xml_doTbtIncidentRole", xml_doTbtIncidentRole) :
                new ObjectParameter("xml_doTbtIncidentRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("UpdateTbt_IncidentRole", xml_doTbtIncidentRoleParameter);
        }
    
        public virtual ObjectResult<tbt_IncidentRole> UpdateTbt_IncidentRole(string xml_doTbtIncidentRole, MergeOption mergeOption)
        {
            var xml_doTbtIncidentRoleParameter = xml_doTbtIncidentRole != null ?
                new ObjectParameter("xml_doTbtIncidentRole", xml_doTbtIncidentRole) :
                new ObjectParameter("xml_doTbtIncidentRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_IncidentRole>("UpdateTbt_IncidentRole", mergeOption, xml_doTbtIncidentRoleParameter);
        }
    
        public virtual ObjectResult<tbt_Incident> GetTbt_Incident(Nullable<int> pIncidentID)
        {
            var pIncidentIDParameter = pIncidentID.HasValue ?
                new ObjectParameter("pIncidentID", pIncidentID) :
                new ObjectParameter("pIncidentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Incident>("GetTbt_Incident", pIncidentIDParameter);
        }
    
        public virtual ObjectResult<tbt_Incident> GetTbt_Incident(Nullable<int> pIncidentID, MergeOption mergeOption)
        {
            var pIncidentIDParameter = pIncidentID.HasValue ?
                new ObjectParameter("pIncidentID", pIncidentID) :
                new ObjectParameter("pIncidentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Incident>("GetTbt_Incident", mergeOption, pIncidentIDParameter);
        }
    
        public virtual ObjectResult<RPTInstrumentCheckupDo> GetInstrument(string contractCode, string occ)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("contractCode", contractCode) :
                new ObjectParameter("contractCode", typeof(string));
    
            var occParameter = occ != null ?
                new ObjectParameter("occ", occ) :
                new ObjectParameter("occ", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTInstrumentCheckupDo>("GetInstrument", contractCodeParameter, occParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetLastMaintenanceDate(string contractCode, string productCode)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("contractCode", contractCode) :
                new ObjectParameter("contractCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("productCode", productCode) :
                new ObjectParameter("productCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetLastMaintenanceDate", contractCodeParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeFeeMemo> GetTbt_DocChangeFeeMemo(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeFeeMemo>("GetTbt_DocChangeFeeMemo", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeFeeMemo> GetTbt_DocChangeFeeMemo(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeFeeMemo>("GetTbt_DocChangeFeeMemo", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeMemo> GetTbt_DocChangeMemo(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeMemo>("GetTbt_DocChangeMemo", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeMemo> GetTbt_DocChangeMemo(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeMemo>("GetTbt_DocChangeMemo", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeNotice> GetTbt_DocChangeNotice(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeNotice>("GetTbt_DocChangeNotice", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocChangeNotice> GetTbt_DocChangeNotice(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocChangeNotice>("GetTbt_DocChangeNotice", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocConfirmCurrentInstrumentMemo> GetTbt_DocConfirmCurrentInstrumentMemo(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocConfirmCurrentInstrumentMemo>("GetTbt_DocConfirmCurrentInstrumentMemo", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocConfirmCurrentInstrumentMemo> GetTbt_DocConfirmCurrentInstrumentMemo(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocConfirmCurrentInstrumentMemo>("GetTbt_DocConfirmCurrentInstrumentMemo", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocContractReport> GetTbt_DocContractReport(Nullable<int> pDocID)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocContractReport>("GetTbt_DocContractReport", pDocIDParameter);
        }
    
        public virtual ObjectResult<tbt_DocContractReport> GetTbt_DocContractReport(Nullable<int> pDocID, MergeOption mergeOption)
        {
            var pDocIDParameter = pDocID.HasValue ?
                new ObjectParameter("pDocID", pDocID) :
                new ObjectParameter("pDocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocContractReport>("GetTbt_DocContractReport", mergeOption, pDocIDParameter);
        }
    
        public virtual ObjectResult<dtGetMaintenanceCheckupList> GetMaintenanceCheckupList(string xml_MaintenanceCheckup)
        {
            var xml_MaintenanceCheckupParameter = xml_MaintenanceCheckup != null ?
                new ObjectParameter("xml_MaintenanceCheckup", xml_MaintenanceCheckup) :
                new ObjectParameter("xml_MaintenanceCheckup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtGetMaintenanceCheckupList>("GetMaintenanceCheckupList", xml_MaintenanceCheckupParameter);
        }
    
        public virtual ObjectResult<dtInstrumentAdditionalInstalled> GetInstrumentAdditionalInstalled(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtInstrumentAdditionalInstalled>("GetInstrumentAdditionalInstalled", strContractCodeParameter);
        }
    
        public virtual ObjectResult<dtInstrumentInstalledBefore> GetInstrumentInstalledBefore(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtInstrumentInstalledBefore>("GetInstrumentInstalledBefore", strContractCodeParameter);
        }
    
        public virtual ObjectResult<CheckCP12_Result> CheckCP12(string strContractCode, string strLastImplementOCC, string c_RENTAL_CHANGE_TYPE_PLAN_CHANGE, string c_RENTAL_CHANGE_TYPE_CHANGE_INSTRU_DURING_STOP)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strLastImplementOCCParameter = strLastImplementOCC != null ?
                new ObjectParameter("strLastImplementOCC", strLastImplementOCC) :
                new ObjectParameter("strLastImplementOCC", typeof(string));
    
            var c_RENTAL_CHANGE_TYPE_PLAN_CHANGEParameter = c_RENTAL_CHANGE_TYPE_PLAN_CHANGE != null ?
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_PLAN_CHANGE", c_RENTAL_CHANGE_TYPE_PLAN_CHANGE) :
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_PLAN_CHANGE", typeof(string));
    
            var c_RENTAL_CHANGE_TYPE_CHANGE_INSTRU_DURING_STOPParameter = c_RENTAL_CHANGE_TYPE_CHANGE_INSTRU_DURING_STOP != null ?
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_CHANGE_INSTRU_DURING_STOP", c_RENTAL_CHANGE_TYPE_CHANGE_INSTRU_DURING_STOP) :
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_CHANGE_INSTRU_DURING_STOP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckCP12_Result>("CheckCP12", strContractCodeParameter, strLastImplementOCCParameter, c_RENTAL_CHANGE_TYPE_PLAN_CHANGEParameter, c_RENTAL_CHANGE_TYPE_CHANGE_INSTRU_DURING_STOPParameter);
        }
    
        public virtual ObjectResult<CheckCanReplaceInstallSlip_Result> CheckCanReplaceInstallSlip(string strContractCode, string c_SALE_CHANGE_TYPE_NEW_SALE, string c_SALE_CHANGE_TYPE_ADD_SALE)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var c_SALE_CHANGE_TYPE_NEW_SALEParameter = c_SALE_CHANGE_TYPE_NEW_SALE != null ?
                new ObjectParameter("C_SALE_CHANGE_TYPE_NEW_SALE", c_SALE_CHANGE_TYPE_NEW_SALE) :
                new ObjectParameter("C_SALE_CHANGE_TYPE_NEW_SALE", typeof(string));
    
            var c_SALE_CHANGE_TYPE_ADD_SALEParameter = c_SALE_CHANGE_TYPE_ADD_SALE != null ?
                new ObjectParameter("C_SALE_CHANGE_TYPE_ADD_SALE", c_SALE_CHANGE_TYPE_ADD_SALE) :
                new ObjectParameter("C_SALE_CHANGE_TYPE_ADD_SALE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckCanReplaceInstallSlip_Result>("CheckCanReplaceInstallSlip", strContractCodeParameter, c_SALE_CHANGE_TYPE_NEW_SALEParameter, c_SALE_CHANGE_TYPE_ADD_SALEParameter);
        }
    
        public virtual ObjectResult<tbs_ARTypeTitle> GetTbs_ARTypeTitle(string strARType, string strARTitleType)
        {
            var strARTypeParameter = strARType != null ?
                new ObjectParameter("strARType", strARType) :
                new ObjectParameter("strARType", typeof(string));
    
            var strARTitleTypeParameter = strARTitleType != null ?
                new ObjectParameter("strARTitleType", strARTitleType) :
                new ObjectParameter("strARTitleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARTypeTitle>("GetTbs_ARTypeTitle", strARTypeParameter, strARTitleTypeParameter);
        }
    
        public virtual ObjectResult<tbs_ARTypeTitle> GetTbs_ARTypeTitle(string strARType, string strARTitleType, MergeOption mergeOption)
        {
            var strARTypeParameter = strARType != null ?
                new ObjectParameter("strARType", strARType) :
                new ObjectParameter("strARType", typeof(string));
    
            var strARTitleTypeParameter = strARTitleType != null ?
                new ObjectParameter("strARTitleType", strARTitleType) :
                new ObjectParameter("strARTitleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARTypeTitle>("GetTbs_ARTypeTitle", mergeOption, strARTypeParameter, strARTitleTypeParameter);
        }
    
        public virtual ObjectResult<tbs_ARTypePattern> GetTbs_ARTypePattern(string strARType, string strARTitleType)
        {
            var strARTypeParameter = strARType != null ?
                new ObjectParameter("strARType", strARType) :
                new ObjectParameter("strARType", typeof(string));
    
            var strARTitleTypeParameter = strARTitleType != null ?
                new ObjectParameter("strARTitleType", strARTitleType) :
                new ObjectParameter("strARTitleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARTypePattern>("GetTbs_ARTypePattern", strARTypeParameter, strARTitleTypeParameter);
        }
    
        public virtual ObjectResult<tbs_ARTypePattern> GetTbs_ARTypePattern(string strARType, string strARTitleType, MergeOption mergeOption)
        {
            var strARTypeParameter = strARType != null ?
                new ObjectParameter("strARType", strARType) :
                new ObjectParameter("strARType", typeof(string));
    
            var strARTitleTypeParameter = strARTitleType != null ?
                new ObjectParameter("strARTitleType", strARTitleType) :
                new ObjectParameter("strARTitleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_ARTypePattern>("GetTbs_ARTypePattern", mergeOption, strARTypeParameter, strARTitleTypeParameter);
        }
    
        public virtual ObjectResult<dtRelatedOfficeChief> GetReleatedContractOfCustAR(string requestNo, Nullable<bool> c_FLAG_ON)
        {
            var requestNoParameter = requestNo != null ?
                new ObjectParameter("RequestNo", requestNo) :
                new ObjectParameter("RequestNo", typeof(string));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtRelatedOfficeChief>("GetReleatedContractOfCustAR", requestNoParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<tbt_AR> InsertTbt_AR(string xml_AR)
        {
            var xml_ARParameter = xml_AR != null ?
                new ObjectParameter("xml_AR", xml_AR) :
                new ObjectParameter("xml_AR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("InsertTbt_AR", xml_ARParameter);
        }
    
        public virtual ObjectResult<tbt_AR> InsertTbt_AR(string xml_AR, MergeOption mergeOption)
        {
            var xml_ARParameter = xml_AR != null ?
                new ObjectParameter("xml_AR", xml_AR) :
                new ObjectParameter("xml_AR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("InsertTbt_AR", mergeOption, xml_ARParameter);
        }
    
        public virtual ObjectResult<tbt_ARFeeAdjustment> InsertTbt_ARFeeAdjustment(string xml_ARFeeAdjustment)
        {
            var xml_ARFeeAdjustmentParameter = xml_ARFeeAdjustment != null ?
                new ObjectParameter("xml_ARFeeAdjustment", xml_ARFeeAdjustment) :
                new ObjectParameter("xml_ARFeeAdjustment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARFeeAdjustment>("InsertTbt_ARFeeAdjustment", xml_ARFeeAdjustmentParameter);
        }
    
        public virtual ObjectResult<tbt_ARFeeAdjustment> InsertTbt_ARFeeAdjustment(string xml_ARFeeAdjustment, MergeOption mergeOption)
        {
            var xml_ARFeeAdjustmentParameter = xml_ARFeeAdjustment != null ?
                new ObjectParameter("xml_ARFeeAdjustment", xml_ARFeeAdjustment) :
                new ObjectParameter("xml_ARFeeAdjustment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARFeeAdjustment>("InsertTbt_ARFeeAdjustment", mergeOption, xml_ARFeeAdjustmentParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> InsertTbt_ARRole(string xml_ARRole)
        {
            var xml_ARRoleParameter = xml_ARRole != null ?
                new ObjectParameter("xml_ARRole", xml_ARRole) :
                new ObjectParameter("xml_ARRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("InsertTbt_ARRole", xml_ARRoleParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> InsertTbt_ARRole(string xml_ARRole, MergeOption mergeOption)
        {
            var xml_ARRoleParameter = xml_ARRole != null ?
                new ObjectParameter("xml_ARRole", xml_ARRole) :
                new ObjectParameter("xml_ARRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("InsertTbt_ARRole", mergeOption, xml_ARRoleParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> GetTbt_ARRole(string pRequestNo)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("GetTbt_ARRole", pRequestNoParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> GetTbt_ARRole(string pRequestNo, MergeOption mergeOption)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("GetTbt_ARRole", mergeOption, pRequestNoParameter);
        }
    
        public virtual ObjectResult<dtAR> GetARData(string pRequestNo, string c_AR_RELEVANT_TYPE_CONTRACT, string c_AR_RELEVANT_TYPE_CUSTOMER, string c_AR_RELEVANT_TYPE_SITE, string c_AR_RELEVANT_TYPE_PROJECT, string c_AR_RELEVANT_TYPE_QUOTATION, string c_AR_TYPE, string c_AR_STATUS, string c_CUST_PART_TYPE_REAL_CUST)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            var c_AR_RELEVANT_TYPE_CONTRACTParameter = c_AR_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", c_AR_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            var c_AR_RELEVANT_TYPE_CUSTOMERParameter = c_AR_RELEVANT_TYPE_CUSTOMER != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CUSTOMER", c_AR_RELEVANT_TYPE_CUSTOMER) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CUSTOMER", typeof(string));
    
            var c_AR_RELEVANT_TYPE_SITEParameter = c_AR_RELEVANT_TYPE_SITE != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", c_AR_RELEVANT_TYPE_SITE) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_SITE", typeof(string));
    
            var c_AR_RELEVANT_TYPE_PROJECTParameter = c_AR_RELEVANT_TYPE_PROJECT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_PROJECT", c_AR_RELEVANT_TYPE_PROJECT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_PROJECT", typeof(string));
    
            var c_AR_RELEVANT_TYPE_QUOTATIONParameter = c_AR_RELEVANT_TYPE_QUOTATION != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", c_AR_RELEVANT_TYPE_QUOTATION) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_QUOTATION", typeof(string));
    
            var c_AR_TYPEParameter = c_AR_TYPE != null ?
                new ObjectParameter("C_AR_TYPE", c_AR_TYPE) :
                new ObjectParameter("C_AR_TYPE", typeof(string));
    
            var c_AR_STATUSParameter = c_AR_STATUS != null ?
                new ObjectParameter("C_AR_STATUS", c_AR_STATUS) :
                new ObjectParameter("C_AR_STATUS", typeof(string));
    
            var c_CUST_PART_TYPE_REAL_CUSTParameter = c_CUST_PART_TYPE_REAL_CUST != null ?
                new ObjectParameter("C_CUST_PART_TYPE_REAL_CUST", c_CUST_PART_TYPE_REAL_CUST) :
                new ObjectParameter("C_CUST_PART_TYPE_REAL_CUST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtAR>("GetARData", pRequestNoParameter, c_AR_RELEVANT_TYPE_CONTRACTParameter, c_AR_RELEVANT_TYPE_CUSTOMERParameter, c_AR_RELEVANT_TYPE_SITEParameter, c_AR_RELEVANT_TYPE_PROJECTParameter, c_AR_RELEVANT_TYPE_QUOTATIONParameter, c_AR_TYPEParameter, c_AR_STATUSParameter, c_CUST_PART_TYPE_REAL_CUSTParameter);
        }
    
        public virtual ObjectResult<dtARDepartmentChief> GetARDepartmentChief(string pRequestNo, Nullable<bool> c_FLAG_ON)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtARDepartmentChief>("GetARDepartmentChief", pRequestNoParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<dtAROfficeChief> GetAROfficeChief(string pRequestNo, Nullable<bool> c_FLAG_ON)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            var c_FLAG_ONParameter = c_FLAG_ON.HasValue ?
                new ObjectParameter("C_FLAG_ON", c_FLAG_ON) :
                new ObjectParameter("C_FLAG_ON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtAROfficeChief>("GetAROfficeChief", pRequestNoParameter, c_FLAG_ONParameter);
        }
    
        public virtual ObjectResult<dtARRole> GetARRoleData(string pRequestNo, string c_AR_ROLE_TYPE, string c_AR_ROLE_CHIEF_OF_RELATED_OFFICE)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            var c_AR_ROLE_TYPEParameter = c_AR_ROLE_TYPE != null ?
                new ObjectParameter("C_AR_ROLE_TYPE", c_AR_ROLE_TYPE) :
                new ObjectParameter("C_AR_ROLE_TYPE", typeof(string));
    
            var c_AR_ROLE_CHIEF_OF_RELATED_OFFICEParameter = c_AR_ROLE_CHIEF_OF_RELATED_OFFICE != null ?
                new ObjectParameter("C_AR_ROLE_CHIEF_OF_RELATED_OFFICE", c_AR_ROLE_CHIEF_OF_RELATED_OFFICE) :
                new ObjectParameter("C_AR_ROLE_CHIEF_OF_RELATED_OFFICE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtARRole>("GetARRoleData", pRequestNoParameter, c_AR_ROLE_TYPEParameter, c_AR_ROLE_CHIEF_OF_RELATED_OFFICEParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistory> GetTbt_ARHistory(string pRequestNo)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistory>("GetTbt_ARHistory", pRequestNoParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistory> GetTbt_ARHistory(string pRequestNo, MergeOption mergeOption)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistory>("GetTbt_ARHistory", mergeOption, pRequestNoParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistoryDetail> GetTbt_ARHistoryDetail(Nullable<int> pARHistoryID)
        {
            var pARHistoryIDParameter = pARHistoryID.HasValue ?
                new ObjectParameter("pARHistoryID", pARHistoryID) :
                new ObjectParameter("pARHistoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistoryDetail>("GetTbt_ARHistoryDetail", pARHistoryIDParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistoryDetail> GetTbt_ARHistoryDetail(Nullable<int> pARHistoryID, MergeOption mergeOption)
        {
            var pARHistoryIDParameter = pARHistoryID.HasValue ?
                new ObjectParameter("pARHistoryID", pARHistoryID) :
                new ObjectParameter("pARHistoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistoryDetail>("GetTbt_ARHistoryDetail", mergeOption, pARHistoryIDParameter);
        }
    
        public virtual ObjectResult<tbt_ARFeeAdjustment> GetTbt_ARFeeAdjustment(string pRequestNo)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARFeeAdjustment>("GetTbt_ARFeeAdjustment", pRequestNoParameter);
        }
    
        public virtual ObjectResult<tbt_ARFeeAdjustment> GetTbt_ARFeeAdjustment(string pRequestNo, MergeOption mergeOption)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARFeeAdjustment>("GetTbt_ARFeeAdjustment", mergeOption, pRequestNoParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> DeleteTbt_ARRole(Nullable<int> pARRoleID)
        {
            var pARRoleIDParameter = pARRoleID.HasValue ?
                new ObjectParameter("pARRoleID", pARRoleID) :
                new ObjectParameter("pARRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("DeleteTbt_ARRole", pARRoleIDParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> DeleteTbt_ARRole(Nullable<int> pARRoleID, MergeOption mergeOption)
        {
            var pARRoleIDParameter = pARRoleID.HasValue ?
                new ObjectParameter("pARRoleID", pARRoleID) :
                new ObjectParameter("pARRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("DeleteTbt_ARRole", mergeOption, pARRoleIDParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistory> InsertTbt_ARHistory(string xml_ARHistory)
        {
            var xml_ARHistoryParameter = xml_ARHistory != null ?
                new ObjectParameter("xml_ARHistory", xml_ARHistory) :
                new ObjectParameter("xml_ARHistory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistory>("InsertTbt_ARHistory", xml_ARHistoryParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistory> InsertTbt_ARHistory(string xml_ARHistory, MergeOption mergeOption)
        {
            var xml_ARHistoryParameter = xml_ARHistory != null ?
                new ObjectParameter("xml_ARHistory", xml_ARHistory) :
                new ObjectParameter("xml_ARHistory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistory>("InsertTbt_ARHistory", mergeOption, xml_ARHistoryParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistoryDetail> InsertTbt_ARHistoryDetail(string xml_ARHistoryDetail)
        {
            var xml_ARHistoryDetailParameter = xml_ARHistoryDetail != null ?
                new ObjectParameter("xml_ARHistoryDetail", xml_ARHistoryDetail) :
                new ObjectParameter("xml_ARHistoryDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistoryDetail>("InsertTbt_ARHistoryDetail", xml_ARHistoryDetailParameter);
        }
    
        public virtual ObjectResult<tbt_ARHistoryDetail> InsertTbt_ARHistoryDetail(string xml_ARHistoryDetail, MergeOption mergeOption)
        {
            var xml_ARHistoryDetailParameter = xml_ARHistoryDetail != null ?
                new ObjectParameter("xml_ARHistoryDetail", xml_ARHistoryDetail) :
                new ObjectParameter("xml_ARHistoryDetail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARHistoryDetail>("InsertTbt_ARHistoryDetail", mergeOption, xml_ARHistoryDetailParameter);
        }
    
        public virtual ObjectResult<tbt_AR> UpdateTbt_AR(string xmlAR)
        {
            var xmlARParameter = xmlAR != null ?
                new ObjectParameter("xmlAR", xmlAR) :
                new ObjectParameter("xmlAR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("UpdateTbt_AR", xmlARParameter);
        }
    
        public virtual ObjectResult<tbt_AR> UpdateTbt_AR(string xmlAR, MergeOption mergeOption)
        {
            var xmlARParameter = xmlAR != null ?
                new ObjectParameter("xmlAR", xmlAR) :
                new ObjectParameter("xmlAR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("UpdateTbt_AR", mergeOption, xmlARParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> UpdateTbt_ARRole(string xml_doTbtARRole)
        {
            var xml_doTbtARRoleParameter = xml_doTbtARRole != null ?
                new ObjectParameter("xml_doTbtARRole", xml_doTbtARRole) :
                new ObjectParameter("xml_doTbtARRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("UpdateTbt_ARRole", xml_doTbtARRoleParameter);
        }
    
        public virtual ObjectResult<tbt_ARRole> UpdateTbt_ARRole(string xml_doTbtARRole, MergeOption mergeOption)
        {
            var xml_doTbtARRoleParameter = xml_doTbtARRole != null ?
                new ObjectParameter("xml_doTbtARRole", xml_doTbtARRole) :
                new ObjectParameter("xml_doTbtARRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARRole>("UpdateTbt_ARRole", mergeOption, xml_doTbtARRoleParameter);
        }
    
        public virtual ObjectResult<tbt_AR> GetTbt_AR(string pRequestNo)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("GetTbt_AR", pRequestNoParameter);
        }
    
        public virtual ObjectResult<tbt_AR> GetTbt_AR(string pRequestNo, MergeOption mergeOption)
        {
            var pRequestNoParameter = pRequestNo != null ?
                new ObjectParameter("pRequestNo", pRequestNo) :
                new ObjectParameter("pRequestNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("GetTbt_AR", mergeOption, pRequestNoParameter);
        }
    
        public virtual ObjectResult<dtSearchMACheckupResult> SearchSeparatedMaintenance(string pProductName, string pSiteName, string pEmployeeName, string pProductTypeCode, string pOperationOfficeCode, Nullable<System.DateTime> pInstructionDateFrom, Nullable<System.DateTime> pInstructionDateTo, string pUserCode, string pContractCode, string pMACheckupNo, Nullable<bool> pHasCheckupResult, Nullable<bool> pHaveInstrumentMalfunction, Nullable<bool> pNeedToContactSalesman)
        {
            var pProductNameParameter = pProductName != null ?
                new ObjectParameter("pProductName", pProductName) :
                new ObjectParameter("pProductName", typeof(string));
    
            var pSiteNameParameter = pSiteName != null ?
                new ObjectParameter("pSiteName", pSiteName) :
                new ObjectParameter("pSiteName", typeof(string));
    
            var pEmployeeNameParameter = pEmployeeName != null ?
                new ObjectParameter("pEmployeeName", pEmployeeName) :
                new ObjectParameter("pEmployeeName", typeof(string));
    
            var pProductTypeCodeParameter = pProductTypeCode != null ?
                new ObjectParameter("pProductTypeCode", pProductTypeCode) :
                new ObjectParameter("pProductTypeCode", typeof(string));
    
            var pOperationOfficeCodeParameter = pOperationOfficeCode != null ?
                new ObjectParameter("pOperationOfficeCode", pOperationOfficeCode) :
                new ObjectParameter("pOperationOfficeCode", typeof(string));
    
            var pInstructionDateFromParameter = pInstructionDateFrom.HasValue ?
                new ObjectParameter("pInstructionDateFrom", pInstructionDateFrom) :
                new ObjectParameter("pInstructionDateFrom", typeof(System.DateTime));
    
            var pInstructionDateToParameter = pInstructionDateTo.HasValue ?
                new ObjectParameter("pInstructionDateTo", pInstructionDateTo) :
                new ObjectParameter("pInstructionDateTo", typeof(System.DateTime));
    
            var pUserCodeParameter = pUserCode != null ?
                new ObjectParameter("pUserCode", pUserCode) :
                new ObjectParameter("pUserCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pMACheckupNoParameter = pMACheckupNo != null ?
                new ObjectParameter("pMACheckupNo", pMACheckupNo) :
                new ObjectParameter("pMACheckupNo", typeof(string));
    
            var pHasCheckupResultParameter = pHasCheckupResult.HasValue ?
                new ObjectParameter("pHasCheckupResult", pHasCheckupResult) :
                new ObjectParameter("pHasCheckupResult", typeof(bool));
    
            var pHaveInstrumentMalfunctionParameter = pHaveInstrumentMalfunction.HasValue ?
                new ObjectParameter("pHaveInstrumentMalfunction", pHaveInstrumentMalfunction) :
                new ObjectParameter("pHaveInstrumentMalfunction", typeof(bool));
    
            var pNeedToContactSalesmanParameter = pNeedToContactSalesman.HasValue ?
                new ObjectParameter("pNeedToContactSalesman", pNeedToContactSalesman) :
                new ObjectParameter("pNeedToContactSalesman", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtSearchMACheckupResult>("SearchSeparatedMaintenance", pProductNameParameter, pSiteNameParameter, pEmployeeNameParameter, pProductTypeCodeParameter, pOperationOfficeCodeParameter, pInstructionDateFromParameter, pInstructionDateToParameter, pUserCodeParameter, pContractCodeParameter, pMACheckupNoParameter, pHasCheckupResultParameter, pHaveInstrumentMalfunctionParameter, pNeedToContactSalesmanParameter);
        }
    
        public virtual ObjectResult<string> GetPreviousUnimplementedOCC(string paramContractCode, string paramOCC, Nullable<bool> paramFLAGOFF)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramOCCParameter = paramOCC != null ?
                new ObjectParameter("paramOCC", paramOCC) :
                new ObjectParameter("paramOCC", typeof(string));
    
            var paramFLAGOFFParameter = paramFLAGOFF.HasValue ?
                new ObjectParameter("paramFLAGOFF", paramFLAGOFF) :
                new ObjectParameter("paramFLAGOFF", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPreviousUnimplementedOCC", paramContractCodeParameter, paramOCCParameter, paramFLAGOFFParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentReasonType> GetTbs_IncidentReasonType(string strIncidentType)
        {
            var strIncidentTypeParameter = strIncidentType != null ?
                new ObjectParameter("strIncidentType", strIncidentType) :
                new ObjectParameter("strIncidentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentReasonType>("GetTbs_IncidentReasonType", strIncidentTypeParameter);
        }
    
        public virtual ObjectResult<tbs_IncidentReasonType> GetTbs_IncidentReasonType(string strIncidentType, MergeOption mergeOption)
        {
            var strIncidentTypeParameter = strIncidentType != null ?
                new ObjectParameter("strIncidentType", strIncidentType) :
                new ObjectParameter("strIncidentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbs_IncidentReasonType>("GetTbs_IncidentReasonType", mergeOption, strIncidentTypeParameter);
        }
    
        public virtual ObjectResult<tbt_ContractCustomerHistory> InsertTbt_ContractCustomerHistory(string xml_ContractCustomerHistory)
        {
            var xml_ContractCustomerHistoryParameter = xml_ContractCustomerHistory != null ?
                new ObjectParameter("xml_ContractCustomerHistory", xml_ContractCustomerHistory) :
                new ObjectParameter("xml_ContractCustomerHistory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractCustomerHistory>("InsertTbt_ContractCustomerHistory", xml_ContractCustomerHistoryParameter);
        }
    
        public virtual ObjectResult<tbt_ContractCustomerHistory> InsertTbt_ContractCustomerHistory(string xml_ContractCustomerHistory, MergeOption mergeOption)
        {
            var xml_ContractCustomerHistoryParameter = xml_ContractCustomerHistory != null ?
                new ObjectParameter("xml_ContractCustomerHistory", xml_ContractCustomerHistory) :
                new ObjectParameter("xml_ContractCustomerHistory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ContractCustomerHistory>("InsertTbt_ContractCustomerHistory", mergeOption, xml_ContractCustomerHistoryParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBEDetails> GetTbt_DraftRentalBEDetails(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBEDetails>("GetTbt_DraftRentalBEDetails", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalBEDetails> GetTbt_DraftRentalBEDetails(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalBEDetails>("GetTbt_DraftRentalBEDetails", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuard> GetTbt_DraftRentalSentryGuard(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuard>("GetTbt_DraftRentalSentryGuard", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuard> GetTbt_DraftRentalSentryGuard(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuard>("GetTbt_DraftRentalSentryGuard", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuardDetails> GetTbt_DraftRentalSentryGuardDetails(string pchrQuotationTargetCode)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuardDetails>("GetTbt_DraftRentalSentryGuardDetails", pchrQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<tbt_DraftRentalSentryGuardDetails> GetTbt_DraftRentalSentryGuardDetails(string pchrQuotationTargetCode, MergeOption mergeOption)
        {
            var pchrQuotationTargetCodeParameter = pchrQuotationTargetCode != null ?
                new ObjectParameter("pchrQuotationTargetCode", pchrQuotationTargetCode) :
                new ObjectParameter("pchrQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DraftRentalSentryGuardDetails>("GetTbt_DraftRentalSentryGuardDetails", mergeOption, pchrQuotationTargetCodeParameter);
        }
    
        public virtual int InsertEntireContract(string pContractCode, string pGUID, string pScreenID, Nullable<System.DateTime> pCreateDate, string pCreateBy, Nullable<System.DateTime> pLastUpdateDate, string pC_PROD_TYPE_BE, string pC_PROD_TYPE_SG, string pC_PROD_TYPE_MA, string xml_RentalContractBasic, string xml_RentalSecurityBasic, string xml_RentalBEDetails, string xml_RentalInstrumentDetails, string xml_RentalSentryGuard, string xml_RentalSentryGuardDetails, string xml_CancelContractMemoDetail, string xml_RentalOperationType, string xml_RentalMaintenanceDetails, string xml_RelationType)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pGUIDParameter = pGUID != null ?
                new ObjectParameter("pGUID", pGUID) :
                new ObjectParameter("pGUID", typeof(string));
    
            var pScreenIDParameter = pScreenID != null ?
                new ObjectParameter("pScreenID", pScreenID) :
                new ObjectParameter("pScreenID", typeof(string));
    
            var pCreateDateParameter = pCreateDate.HasValue ?
                new ObjectParameter("pCreateDate", pCreateDate) :
                new ObjectParameter("pCreateDate", typeof(System.DateTime));
    
            var pCreateByParameter = pCreateBy != null ?
                new ObjectParameter("pCreateBy", pCreateBy) :
                new ObjectParameter("pCreateBy", typeof(string));
    
            var pLastUpdateDateParameter = pLastUpdateDate.HasValue ?
                new ObjectParameter("pLastUpdateDate", pLastUpdateDate) :
                new ObjectParameter("pLastUpdateDate", typeof(System.DateTime));
    
            var pC_PROD_TYPE_BEParameter = pC_PROD_TYPE_BE != null ?
                new ObjectParameter("pC_PROD_TYPE_BE", pC_PROD_TYPE_BE) :
                new ObjectParameter("pC_PROD_TYPE_BE", typeof(string));
    
            var pC_PROD_TYPE_SGParameter = pC_PROD_TYPE_SG != null ?
                new ObjectParameter("pC_PROD_TYPE_SG", pC_PROD_TYPE_SG) :
                new ObjectParameter("pC_PROD_TYPE_SG", typeof(string));
    
            var pC_PROD_TYPE_MAParameter = pC_PROD_TYPE_MA != null ?
                new ObjectParameter("pC_PROD_TYPE_MA", pC_PROD_TYPE_MA) :
                new ObjectParameter("pC_PROD_TYPE_MA", typeof(string));
    
            var xml_RentalContractBasicParameter = xml_RentalContractBasic != null ?
                new ObjectParameter("xml_RentalContractBasic", xml_RentalContractBasic) :
                new ObjectParameter("xml_RentalContractBasic", typeof(string));
    
            var xml_RentalSecurityBasicParameter = xml_RentalSecurityBasic != null ?
                new ObjectParameter("xml_RentalSecurityBasic", xml_RentalSecurityBasic) :
                new ObjectParameter("xml_RentalSecurityBasic", typeof(string));
    
            var xml_RentalBEDetailsParameter = xml_RentalBEDetails != null ?
                new ObjectParameter("xml_RentalBEDetails", xml_RentalBEDetails) :
                new ObjectParameter("xml_RentalBEDetails", typeof(string));
    
            var xml_RentalInstrumentDetailsParameter = xml_RentalInstrumentDetails != null ?
                new ObjectParameter("xml_RentalInstrumentDetails", xml_RentalInstrumentDetails) :
                new ObjectParameter("xml_RentalInstrumentDetails", typeof(string));
    
            var xml_RentalSentryGuardParameter = xml_RentalSentryGuard != null ?
                new ObjectParameter("xml_RentalSentryGuard", xml_RentalSentryGuard) :
                new ObjectParameter("xml_RentalSentryGuard", typeof(string));
    
            var xml_RentalSentryGuardDetailsParameter = xml_RentalSentryGuardDetails != null ?
                new ObjectParameter("xml_RentalSentryGuardDetails", xml_RentalSentryGuardDetails) :
                new ObjectParameter("xml_RentalSentryGuardDetails", typeof(string));
    
            var xml_CancelContractMemoDetailParameter = xml_CancelContractMemoDetail != null ?
                new ObjectParameter("xml_CancelContractMemoDetail", xml_CancelContractMemoDetail) :
                new ObjectParameter("xml_CancelContractMemoDetail", typeof(string));
    
            var xml_RentalOperationTypeParameter = xml_RentalOperationType != null ?
                new ObjectParameter("xml_RentalOperationType", xml_RentalOperationType) :
                new ObjectParameter("xml_RentalOperationType", typeof(string));
    
            var xml_RentalMaintenanceDetailsParameter = xml_RentalMaintenanceDetails != null ?
                new ObjectParameter("xml_RentalMaintenanceDetails", xml_RentalMaintenanceDetails) :
                new ObjectParameter("xml_RentalMaintenanceDetails", typeof(string));
    
            var xml_RelationTypeParameter = xml_RelationType != null ?
                new ObjectParameter("xml_RelationType", xml_RelationType) :
                new ObjectParameter("xml_RelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEntireContract", pContractCodeParameter, pGUIDParameter, pScreenIDParameter, pCreateDateParameter, pCreateByParameter, pLastUpdateDateParameter, pC_PROD_TYPE_BEParameter, pC_PROD_TYPE_SGParameter, pC_PROD_TYPE_MAParameter, xml_RentalContractBasicParameter, xml_RentalSecurityBasicParameter, xml_RentalBEDetailsParameter, xml_RentalInstrumentDetailsParameter, xml_RentalSentryGuardParameter, xml_RentalSentryGuardDetailsParameter, xml_CancelContractMemoDetailParameter, xml_RentalOperationTypeParameter, xml_RentalMaintenanceDetailsParameter, xml_RelationTypeParameter);
        }
    
        public virtual ObjectResult<tbt_Project> UpdateProjectStatus(string strProjectCode, string c_ProjectStatus, Nullable<System.DateTime> lastCompleteDate, Nullable<System.DateTime> cancelDate, string updateBy, Nullable<System.DateTime> updateDate)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var c_ProjectStatusParameter = c_ProjectStatus != null ?
                new ObjectParameter("C_ProjectStatus", c_ProjectStatus) :
                new ObjectParameter("C_ProjectStatus", typeof(string));
    
            var lastCompleteDateParameter = lastCompleteDate.HasValue ?
                new ObjectParameter("LastCompleteDate", lastCompleteDate) :
                new ObjectParameter("LastCompleteDate", typeof(System.DateTime));
    
            var cancelDateParameter = cancelDate.HasValue ?
                new ObjectParameter("CancelDate", cancelDate) :
                new ObjectParameter("CancelDate", typeof(System.DateTime));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("UpdateProjectStatus", strProjectCodeParameter, c_ProjectStatusParameter, lastCompleteDateParameter, cancelDateParameter, updateByParameter, updateDateParameter);
        }
    
        public virtual ObjectResult<tbt_Project> UpdateProjectStatus(string strProjectCode, string c_ProjectStatus, Nullable<System.DateTime> lastCompleteDate, Nullable<System.DateTime> cancelDate, string updateBy, Nullable<System.DateTime> updateDate, MergeOption mergeOption)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            var c_ProjectStatusParameter = c_ProjectStatus != null ?
                new ObjectParameter("C_ProjectStatus", c_ProjectStatus) :
                new ObjectParameter("C_ProjectStatus", typeof(string));
    
            var lastCompleteDateParameter = lastCompleteDate.HasValue ?
                new ObjectParameter("LastCompleteDate", lastCompleteDate) :
                new ObjectParameter("LastCompleteDate", typeof(System.DateTime));
    
            var cancelDateParameter = cancelDate.HasValue ?
                new ObjectParameter("CancelDate", cancelDate) :
                new ObjectParameter("CancelDate", typeof(System.DateTime));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_Project>("UpdateProjectStatus", mergeOption, strProjectCodeParameter, c_ProjectStatusParameter, lastCompleteDateParameter, cancelDateParameter, updateByParameter, updateDateParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectPurchaserCustomer> UpdateTbt_ProjectPurchaseCustomer(string xmlTbt_ProjectPurchaseCustomer)
        {
            var xmlTbt_ProjectPurchaseCustomerParameter = xmlTbt_ProjectPurchaseCustomer != null ?
                new ObjectParameter("xmlTbt_ProjectPurchaseCustomer", xmlTbt_ProjectPurchaseCustomer) :
                new ObjectParameter("xmlTbt_ProjectPurchaseCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectPurchaserCustomer>("UpdateTbt_ProjectPurchaseCustomer", xmlTbt_ProjectPurchaseCustomerParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectPurchaserCustomer> UpdateTbt_ProjectPurchaseCustomer(string xmlTbt_ProjectPurchaseCustomer, MergeOption mergeOption)
        {
            var xmlTbt_ProjectPurchaseCustomerParameter = xmlTbt_ProjectPurchaseCustomer != null ?
                new ObjectParameter("xmlTbt_ProjectPurchaseCustomer", xmlTbt_ProjectPurchaseCustomer) :
                new ObjectParameter("xmlTbt_ProjectPurchaseCustomer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectPurchaserCustomer>("UpdateTbt_ProjectPurchaseCustomer", mergeOption, xmlTbt_ProjectPurchaseCustomerParameter);
        }
    
        public virtual int EditDraftRentalContract(string pQuotationTargetCode, string pProductTypeCode, string pGUID, string pScreenID, Nullable<System.DateTime> pCreateDate, string pCreateBy, string pC_PROD_TYPE_ONLINE, string pC_PROD_TYPE_BE, string pC_PROD_TYPE_SG, string pC_PROD_TYPE_MA, string xml_DraftRentalContract, string xml_DraftRentalBillingTarget, string xml_DraftRentalEmail, string xml_DraftRentalOperationType, string xml_RelationType, string xml_DraftRentalInstrument, string xml_DraftRentalBEDetails, string xml_DraftRentalSentryGuard, string xml_DraftRentalSentryGuardDetails, string xml_DraftRentalMaintenanceDetails)
        {
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pProductTypeCodeParameter = pProductTypeCode != null ?
                new ObjectParameter("pProductTypeCode", pProductTypeCode) :
                new ObjectParameter("pProductTypeCode", typeof(string));
    
            var pGUIDParameter = pGUID != null ?
                new ObjectParameter("pGUID", pGUID) :
                new ObjectParameter("pGUID", typeof(string));
    
            var pScreenIDParameter = pScreenID != null ?
                new ObjectParameter("pScreenID", pScreenID) :
                new ObjectParameter("pScreenID", typeof(string));
    
            var pCreateDateParameter = pCreateDate.HasValue ?
                new ObjectParameter("pCreateDate", pCreateDate) :
                new ObjectParameter("pCreateDate", typeof(System.DateTime));
    
            var pCreateByParameter = pCreateBy != null ?
                new ObjectParameter("pCreateBy", pCreateBy) :
                new ObjectParameter("pCreateBy", typeof(string));
    
            var pC_PROD_TYPE_ONLINEParameter = pC_PROD_TYPE_ONLINE != null ?
                new ObjectParameter("pC_PROD_TYPE_ONLINE", pC_PROD_TYPE_ONLINE) :
                new ObjectParameter("pC_PROD_TYPE_ONLINE", typeof(string));
    
            var pC_PROD_TYPE_BEParameter = pC_PROD_TYPE_BE != null ?
                new ObjectParameter("pC_PROD_TYPE_BE", pC_PROD_TYPE_BE) :
                new ObjectParameter("pC_PROD_TYPE_BE", typeof(string));
    
            var pC_PROD_TYPE_SGParameter = pC_PROD_TYPE_SG != null ?
                new ObjectParameter("pC_PROD_TYPE_SG", pC_PROD_TYPE_SG) :
                new ObjectParameter("pC_PROD_TYPE_SG", typeof(string));
    
            var pC_PROD_TYPE_MAParameter = pC_PROD_TYPE_MA != null ?
                new ObjectParameter("pC_PROD_TYPE_MA", pC_PROD_TYPE_MA) :
                new ObjectParameter("pC_PROD_TYPE_MA", typeof(string));
    
            var xml_DraftRentalContractParameter = xml_DraftRentalContract != null ?
                new ObjectParameter("xml_DraftRentalContract", xml_DraftRentalContract) :
                new ObjectParameter("xml_DraftRentalContract", typeof(string));
    
            var xml_DraftRentalBillingTargetParameter = xml_DraftRentalBillingTarget != null ?
                new ObjectParameter("xml_DraftRentalBillingTarget", xml_DraftRentalBillingTarget) :
                new ObjectParameter("xml_DraftRentalBillingTarget", typeof(string));
    
            var xml_DraftRentalEmailParameter = xml_DraftRentalEmail != null ?
                new ObjectParameter("xml_DraftRentalEmail", xml_DraftRentalEmail) :
                new ObjectParameter("xml_DraftRentalEmail", typeof(string));
    
            var xml_DraftRentalOperationTypeParameter = xml_DraftRentalOperationType != null ?
                new ObjectParameter("xml_DraftRentalOperationType", xml_DraftRentalOperationType) :
                new ObjectParameter("xml_DraftRentalOperationType", typeof(string));
    
            var xml_RelationTypeParameter = xml_RelationType != null ?
                new ObjectParameter("xml_RelationType", xml_RelationType) :
                new ObjectParameter("xml_RelationType", typeof(string));
    
            var xml_DraftRentalInstrumentParameter = xml_DraftRentalInstrument != null ?
                new ObjectParameter("xml_DraftRentalInstrument", xml_DraftRentalInstrument) :
                new ObjectParameter("xml_DraftRentalInstrument", typeof(string));
    
            var xml_DraftRentalBEDetailsParameter = xml_DraftRentalBEDetails != null ?
                new ObjectParameter("xml_DraftRentalBEDetails", xml_DraftRentalBEDetails) :
                new ObjectParameter("xml_DraftRentalBEDetails", typeof(string));
    
            var xml_DraftRentalSentryGuardParameter = xml_DraftRentalSentryGuard != null ?
                new ObjectParameter("xml_DraftRentalSentryGuard", xml_DraftRentalSentryGuard) :
                new ObjectParameter("xml_DraftRentalSentryGuard", typeof(string));
    
            var xml_DraftRentalSentryGuardDetailsParameter = xml_DraftRentalSentryGuardDetails != null ?
                new ObjectParameter("xml_DraftRentalSentryGuardDetails", xml_DraftRentalSentryGuardDetails) :
                new ObjectParameter("xml_DraftRentalSentryGuardDetails", typeof(string));
    
            var xml_DraftRentalMaintenanceDetailsParameter = xml_DraftRentalMaintenanceDetails != null ?
                new ObjectParameter("xml_DraftRentalMaintenanceDetails", xml_DraftRentalMaintenanceDetails) :
                new ObjectParameter("xml_DraftRentalMaintenanceDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditDraftRentalContract", pQuotationTargetCodeParameter, pProductTypeCodeParameter, pGUIDParameter, pScreenIDParameter, pCreateDateParameter, pCreateByParameter, pC_PROD_TYPE_ONLINEParameter, pC_PROD_TYPE_BEParameter, pC_PROD_TYPE_SGParameter, pC_PROD_TYPE_MAParameter, xml_DraftRentalContractParameter, xml_DraftRentalBillingTargetParameter, xml_DraftRentalEmailParameter, xml_DraftRentalOperationTypeParameter, xml_RelationTypeParameter, xml_DraftRentalInstrumentParameter, xml_DraftRentalBEDetailsParameter, xml_DraftRentalSentryGuardParameter, xml_DraftRentalSentryGuardDetailsParameter, xml_DraftRentalMaintenanceDetailsParameter);
        }
    
        public virtual ObjectResult<doServiceProductTypeCode> GetServiceProductTypeCode(string strCode, string c_SERVICE_TYPE_PROJECT)
        {
            var strCodeParameter = strCode != null ?
                new ObjectParameter("strCode", strCode) :
                new ObjectParameter("strCode", typeof(string));
    
            var c_SERVICE_TYPE_PROJECTParameter = c_SERVICE_TYPE_PROJECT != null ?
                new ObjectParameter("C_SERVICE_TYPE_PROJECT", c_SERVICE_TYPE_PROJECT) :
                new ObjectParameter("C_SERVICE_TYPE_PROJECT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doServiceProductTypeCode>("GetServiceProductTypeCode", strCodeParameter, c_SERVICE_TYPE_PROJECTParameter);
        }
    
        public virtual ObjectResult<string> GetNextImplementedOCC(string paramContractCode, string paramOCC, Nullable<bool> paramFLAGON)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramOCCParameter = paramOCC != null ?
                new ObjectParameter("paramOCC", paramOCC) :
                new ObjectParameter("paramOCC", typeof(string));
    
            var paramFLAGONParameter = paramFLAGON.HasValue ?
                new ObjectParameter("paramFLAGON", paramFLAGON) :
                new ObjectParameter("paramFLAGON", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetNextImplementedOCC", paramContractCodeParameter, paramOCCParameter, paramFLAGONParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> DeleteTbt_RelationType_ByContractCodeOCC(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("DeleteTbt_RelationType_ByContractCodeOCC", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_RelationType> DeleteTbt_RelationType_ByContractCodeOCC(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_RelationType>("DeleteTbt_RelationType_ByContractCodeOCC", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockOutMemo> GetTbt_ProjectStockoutMemoForView(string projectCode)
        {
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("projectCode", projectCode) :
                new ObjectParameter("projectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockOutMemo>("GetTbt_ProjectStockoutMemoForView", projectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockOutMemo> GetTbt_ProjectStockoutMemoForView(string projectCode, MergeOption mergeOption)
        {
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("projectCode", projectCode) :
                new ObjectParameter("projectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockOutMemo>("GetTbt_ProjectStockoutMemoForView", mergeOption, projectCodeParameter);
        }
    
        public virtual ObjectResult<doProjectBranch> GetProjectStockOutBranch(string projectCode)
        {
            var projectCodeParameter = projectCode != null ?
                new ObjectParameter("ProjectCode", projectCode) :
                new ObjectParameter("ProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doProjectBranch>("GetProjectStockOutBranch", projectCodeParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> GetTbt_BillingTemp(string strContractCode, string strOCC)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("GetTbt_BillingTemp", strContractCodeParameter, strOCCParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> GetTbt_BillingTemp(string strContractCode, string strOCC, MergeOption mergeOption)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("GetTbt_BillingTemp", mergeOption, strContractCodeParameter, strOCCParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetMaxUpdateDateOfMATargetContract(string paramMAContractCode, string paramOCC, string c_RENTAL_CHANGE_TYPE_CHANGE_NAME, string c_RENTAL_CHANGE_TYPE_MOVE_INSTRU)
        {
            var paramMAContractCodeParameter = paramMAContractCode != null ?
                new ObjectParameter("paramMAContractCode", paramMAContractCode) :
                new ObjectParameter("paramMAContractCode", typeof(string));
    
            var paramOCCParameter = paramOCC != null ?
                new ObjectParameter("paramOCC", paramOCC) :
                new ObjectParameter("paramOCC", typeof(string));
    
            var c_RENTAL_CHANGE_TYPE_CHANGE_NAMEParameter = c_RENTAL_CHANGE_TYPE_CHANGE_NAME != null ?
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_CHANGE_NAME", c_RENTAL_CHANGE_TYPE_CHANGE_NAME) :
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_CHANGE_NAME", typeof(string));
    
            var c_RENTAL_CHANGE_TYPE_MOVE_INSTRUParameter = c_RENTAL_CHANGE_TYPE_MOVE_INSTRU != null ?
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_MOVE_INSTRU", c_RENTAL_CHANGE_TYPE_MOVE_INSTRU) :
                new ObjectParameter("C_RENTAL_CHANGE_TYPE_MOVE_INSTRU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetMaxUpdateDateOfMATargetContract", paramMAContractCodeParameter, paramOCCParameter, c_RENTAL_CHANGE_TYPE_CHANGE_NAMEParameter, c_RENTAL_CHANGE_TYPE_MOVE_INSTRUParameter);
        }
    
        public virtual ObjectResult<dtTbt_BillingTempForSP> GetBillingTempForChangePlan_Edit(string strContractCode, string strOCC, string c_CONTRACT_BILLING_TYPE_CONTRACT_FEE, string c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_CON, string c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_ONE, string c_CONTRACT_BILLING_TYPE_INSTALLATION_FEE, string c_CONTRACT_BILLING_TYPE_DEPOSIT_FEE, string c_BILLING_TIMING_APPROVE_CONTRACT)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            var c_CONTRACT_BILLING_TYPE_CONTRACT_FEEParameter = c_CONTRACT_BILLING_TYPE_CONTRACT_FEE != null ?
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_CONTRACT_FEE", c_CONTRACT_BILLING_TYPE_CONTRACT_FEE) :
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_CONTRACT_FEE", typeof(string));
    
            var c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_CONParameter = c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_CON != null ?
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_CON", c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_CON) :
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_CON", typeof(string));
    
            var c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_ONEParameter = c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_ONE != null ?
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_ONE", c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_ONE) :
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_ONE", typeof(string));
    
            var c_CONTRACT_BILLING_TYPE_INSTALLATION_FEEParameter = c_CONTRACT_BILLING_TYPE_INSTALLATION_FEE != null ?
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_INSTALLATION_FEE", c_CONTRACT_BILLING_TYPE_INSTALLATION_FEE) :
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_INSTALLATION_FEE", typeof(string));
    
            var c_CONTRACT_BILLING_TYPE_DEPOSIT_FEEParameter = c_CONTRACT_BILLING_TYPE_DEPOSIT_FEE != null ?
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_DEPOSIT_FEE", c_CONTRACT_BILLING_TYPE_DEPOSIT_FEE) :
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_DEPOSIT_FEE", typeof(string));
    
            var c_BILLING_TIMING_APPROVE_CONTRACTParameter = c_BILLING_TIMING_APPROVE_CONTRACT != null ?
                new ObjectParameter("C_BILLING_TIMING_APPROVE_CONTRACT", c_BILLING_TIMING_APPROVE_CONTRACT) :
                new ObjectParameter("C_BILLING_TIMING_APPROVE_CONTRACT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_BillingTempForSP>("GetBillingTempForChangePlan_Edit", strContractCodeParameter, strOCCParameter, c_CONTRACT_BILLING_TYPE_CONTRACT_FEEParameter, c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_CONParameter, c_CONTRACT_BILLING_TYPE_MAINTENANCE_FEE_ONEParameter, c_CONTRACT_BILLING_TYPE_INSTALLATION_FEEParameter, c_CONTRACT_BILLING_TYPE_DEPOSIT_FEEParameter, c_BILLING_TIMING_APPROVE_CONTRACTParameter);
        }
    
        public virtual ObjectResult<dtTbt_BillingTempForSP> GetBillingTempForChangePlan_New(string strContractCode, string strOCC, string c_CONTRACT_BILLING_TYPE_CONTRACT_FEE)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strOCCParameter = strOCC != null ?
                new ObjectParameter("strOCC", strOCC) :
                new ObjectParameter("strOCC", typeof(string));
    
            var c_CONTRACT_BILLING_TYPE_CONTRACT_FEEParameter = c_CONTRACT_BILLING_TYPE_CONTRACT_FEE != null ?
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_CONTRACT_FEE", c_CONTRACT_BILLING_TYPE_CONTRACT_FEE) :
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_CONTRACT_FEE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtTbt_BillingTempForSP>("GetBillingTempForChangePlan_New", strContractCodeParameter, strOCCParameter, c_CONTRACT_BILLING_TYPE_CONTRACT_FEEParameter);
        }
    
        public virtual ObjectResult<AutoRenewProcess_Result> AutoRenewProcessBatch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutoRenewProcess_Result>("AutoRenewProcessBatch");
        }
    
        public virtual ObjectResult<doDraftRentalContractInformation> GetDraftRentalContractInformation(string strQuotationTargetCode)
        {
            var strQuotationTargetCodeParameter = strQuotationTargetCode != null ?
                new ObjectParameter("strQuotationTargetCode", strQuotationTargetCode) :
                new ObjectParameter("strQuotationTargetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doDraftRentalContractInformation>("GetDraftRentalContractInformation", strQuotationTargetCodeParameter);
        }
    
        public virtual ObjectResult<doGetSaleDataForIssueInvoice> GetSaleDataForIssueInvoice(string contractCode, string oCC, string c_BILLING_TIMING_ACCEPTANCE, string c_BILLINGTEMP_FLAG_KEEP, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var c_BILLING_TIMING_ACCEPTANCEParameter = c_BILLING_TIMING_ACCEPTANCE != null ?
                new ObjectParameter("C_BILLING_TIMING_ACCEPTANCE", c_BILLING_TIMING_ACCEPTANCE) :
                new ObjectParameter("C_BILLING_TIMING_ACCEPTANCE", typeof(string));
    
            var c_BILLINGTEMP_FLAG_KEEPParameter = c_BILLINGTEMP_FLAG_KEEP != null ?
                new ObjectParameter("C_BILLINGTEMP_FLAG_KEEP", c_BILLINGTEMP_FLAG_KEEP) :
                new ObjectParameter("C_BILLINGTEMP_FLAG_KEEP", typeof(string));
    
            var c_CURRENCY_LOCALParameter = c_CURRENCY_LOCAL != null ?
                new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL) :
                new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
    
            var c_CURRENCY_USParameter = c_CURRENCY_US != null ?
                new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US) :
                new ObjectParameter("C_CURRENCY_US", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doGetSaleDataForIssueInvoice>("GetSaleDataForIssueInvoice", contractCodeParameter, oCCParameter, c_BILLING_TIMING_ACCEPTANCEParameter, c_BILLINGTEMP_FLAG_KEEPParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> IsCompleteRemoveAll(string strContractCode, string c_RENTAL_INSTALLATION_TYPE_REMOVE_ALL)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var c_RENTAL_INSTALLATION_TYPE_REMOVE_ALLParameter = c_RENTAL_INSTALLATION_TYPE_REMOVE_ALL != null ?
                new ObjectParameter("C_RENTAL_INSTALLATION_TYPE_REMOVE_ALL", c_RENTAL_INSTALLATION_TYPE_REMOVE_ALL) :
                new ObjectParameter("C_RENTAL_INSTALLATION_TYPE_REMOVE_ALL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("IsCompleteRemoveAll", strContractCodeParameter, c_RENTAL_INSTALLATION_TYPE_REMOVE_ALLParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> IsProjectExist(string strProjectCode)
        {
            var strProjectCodeParameter = strProjectCode != null ?
                new ObjectParameter("strProjectCode", strProjectCode) :
                new ObjectParameter("strProjectCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("IsProjectExist", strProjectCodeParameter);
        }
    
        public virtual ObjectResult<string> GetMAContractCodeOf(string strMATargetContractCode, string strRelationType)
        {
            var strMATargetContractCodeParameter = strMATargetContractCode != null ?
                new ObjectParameter("strMATargetContractCode", strMATargetContractCode) :
                new ObjectParameter("strMATargetContractCode", typeof(string));
    
            var strRelationTypeParameter = strRelationType != null ?
                new ObjectParameter("strRelationType", strRelationType) :
                new ObjectParameter("strRelationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetMAContractCodeOf", strMATargetContractCodeParameter, strRelationTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> IsContractExist(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("IsContractExist", strContractCodeParameter);
        }
    
        public virtual ObjectResult<string> GetPreviousOCC(string strContractCode, string strCurrentOCC)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strCurrentOCCParameter = strCurrentOCC != null ?
                new ObjectParameter("strCurrentOCC", strCurrentOCC) :
                new ObjectParameter("strCurrentOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPreviousOCC", strContractCodeParameter, strCurrentOCCParameter);
        }
    
        public virtual ObjectResult<dtBillingTempChangeFeeData> GetBillingTempForChangeFee(string strContractCode, string c_CONTRACT_BILLING_TYPE_CONTRACT_FEE)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var c_CONTRACT_BILLING_TYPE_CONTRACT_FEEParameter = c_CONTRACT_BILLING_TYPE_CONTRACT_FEE != null ?
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_CONTRACT_FEE", c_CONTRACT_BILLING_TYPE_CONTRACT_FEE) :
                new ObjectParameter("C_CONTRACT_BILLING_TYPE_CONTRACT_FEE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtBillingTempChangeFeeData>("GetBillingTempForChangeFee", strContractCodeParameter, c_CONTRACT_BILLING_TYPE_CONTRACT_FEEParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteAllSendData(string pContractCode, string pC_BILLINGTEMP_FLAG_KEEP)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_KEEPParameter = pC_BILLINGTEMP_FLAG_KEEP != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", pC_BILLINGTEMP_FLAG_KEEP) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteAllSendData", pContractCodeParameter, pC_BILLINGTEMP_FLAG_KEEPParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> DeleteAllSendData(string pContractCode, string pC_BILLINGTEMP_FLAG_KEEP, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pC_BILLINGTEMP_FLAG_KEEPParameter = pC_BILLINGTEMP_FLAG_KEEP != null ?
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", pC_BILLINGTEMP_FLAG_KEEP) :
                new ObjectParameter("pC_BILLINGTEMP_FLAG_KEEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("DeleteAllSendData", mergeOption, pContractCodeParameter, pC_BILLINGTEMP_FLAG_KEEPParameter);
        }
    
        public virtual ObjectResult<doUpdateAutoRenew> UpdateAutoRenew(string contractCode, string oCC, Nullable<System.DateTime> calContractEndDate, Nullable<System.DateTime> updateDate, string updateBy)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var calContractEndDateParameter = calContractEndDate.HasValue ?
                new ObjectParameter("CalContractEndDate", calContractEndDate) :
                new ObjectParameter("CalContractEndDate", typeof(System.DateTime));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("UpdateDate", updateDate) :
                new ObjectParameter("UpdateDate", typeof(System.DateTime));
    
            var updateByParameter = updateBy != null ?
                new ObjectParameter("UpdateBy", updateBy) :
                new ObjectParameter("UpdateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doUpdateAutoRenew>("UpdateAutoRenew", contractCodeParameter, oCCParameter, calContractEndDateParameter, updateDateParameter, updateByParameter);
        }
    
        public virtual ObjectResult<dtAROccContract> GetAROccurringContract(string strSiteCode, string c_AR_RELEVANT_TYPE_CONTRACT)
        {
            var strSiteCodeParameter = strSiteCode != null ?
                new ObjectParameter("strSiteCode", strSiteCode) :
                new ObjectParameter("strSiteCode", typeof(string));
    
            var c_AR_RELEVANT_TYPE_CONTRACTParameter = c_AR_RELEVANT_TYPE_CONTRACT != null ?
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", c_AR_RELEVANT_TYPE_CONTRACT) :
                new ObjectParameter("C_AR_RELEVANT_TYPE_CONTRACT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtAROccContract>("GetAROccurringContract", strSiteCodeParameter, c_AR_RELEVANT_TYPE_CONTRACTParameter);
        }
    
        public virtual ObjectResult<doBillingTargetDetail> GetBillingTargetDetailByContractCode(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doBillingTargetDetail>("GetBillingTargetDetailByContractCode", strContractCodeParameter);
        }
    
        public virtual ObjectResult<tbt_AR> UpdateContractCode(string pQuotationTargetCode, string pContractCode, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo)
        {
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("UpdateContractCode", pQuotationTargetCodeParameter, pContractCodeParameter, pProcessingDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<tbt_AR> UpdateContractCode(string pQuotationTargetCode, string pContractCode, Nullable<System.DateTime> pProcessingDateTime, string pEmpNo, MergeOption mergeOption)
        {
            var pQuotationTargetCodeParameter = pQuotationTargetCode != null ?
                new ObjectParameter("pQuotationTargetCode", pQuotationTargetCode) :
                new ObjectParameter("pQuotationTargetCode", typeof(string));
    
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pProcessingDateTimeParameter = pProcessingDateTime.HasValue ?
                new ObjectParameter("pProcessingDateTime", pProcessingDateTime) :
                new ObjectParameter("pProcessingDateTime", typeof(System.DateTime));
    
            var pEmpNoParameter = pEmpNo != null ?
                new ObjectParameter("pEmpNo", pEmpNo) :
                new ObjectParameter("pEmpNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_AR>("UpdateContractCode", mergeOption, pQuotationTargetCodeParameter, pContractCodeParameter, pProcessingDateTimeParameter, pEmpNoParameter);
        }
    
        public virtual ObjectResult<doSaleContractDataForFlowMenu> GetSaleContractDataForFlowMenu(string contractCode)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doSaleContractDataForFlowMenu>("GetSaleContractDataForFlowMenu", contractCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> IsContractDocExist(string strContractCode, string strQuotationTargetCode, string strOCCAlphabet, string strDocOCC)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var strQuotationTargetCodeParameter = strQuotationTargetCode != null ?
                new ObjectParameter("strQuotationTargetCode", strQuotationTargetCode) :
                new ObjectParameter("strQuotationTargetCode", typeof(string));
    
            var strOCCAlphabetParameter = strOCCAlphabet != null ?
                new ObjectParameter("strOCCAlphabet", strOCCAlphabet) :
                new ObjectParameter("strOCCAlphabet", typeof(string));
    
            var strDocOCCParameter = strDocOCC != null ?
                new ObjectParameter("strDocOCC", strDocOCC) :
                new ObjectParameter("strDocOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("IsContractDocExist", strContractCodeParameter, strQuotationTargetCodeParameter, strOCCAlphabetParameter, strDocOCCParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> DeleteTbt_SaleInstrumentDetails_ByContractCodeOCC(string pContractCode, string pOCC)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("DeleteTbt_SaleInstrumentDetails_ByContractCodeOCC", pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_SaleInstrumentDetails> DeleteTbt_SaleInstrumentDetails_ByContractCodeOCC(string pContractCode, string pOCC, MergeOption mergeOption)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            var pOCCParameter = pOCC != null ?
                new ObjectParameter("pOCC", pOCC) :
                new ObjectParameter("pOCC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleInstrumentDetails>("DeleteTbt_SaleInstrumentDetails_ByContractCodeOCC", mergeOption, pContractCodeParameter, pOCCParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockOutMemo> InsertTbt_ProjectStockOutMemo(string xml_StockOutMemo)
        {
            var xml_StockOutMemoParameter = xml_StockOutMemo != null ?
                new ObjectParameter("xml_StockOutMemo", xml_StockOutMemo) :
                new ObjectParameter("xml_StockOutMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockOutMemo>("InsertTbt_ProjectStockOutMemo", xml_StockOutMemoParameter);
        }
    
        public virtual ObjectResult<tbt_ProjectStockOutMemo> InsertTbt_ProjectStockOutMemo(string xml_StockOutMemo, MergeOption mergeOption)
        {
            var xml_StockOutMemoParameter = xml_StockOutMemo != null ?
                new ObjectParameter("xml_StockOutMemo", xml_StockOutMemo) :
                new ObjectParameter("xml_StockOutMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ProjectStockOutMemo>("InsertTbt_ProjectStockOutMemo", mergeOption, xml_StockOutMemoParameter);
        }
    
        public virtual ObjectResult<doRentalContractDataForFlowMenu> GetRentalContractDataForFlowMenu(string contractCode)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doRentalContractDataForFlowMenu>("GetRentalContractDataForFlowMenu", contractCodeParameter);
        }
    
        public virtual ObjectResult<doGetContractProjectInfo> GetContractProjectInfo(string pContractCode)
        {
            var pContractCodeParameter = pContractCode != null ?
                new ObjectParameter("pContractCode", pContractCode) :
                new ObjectParameter("pContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doGetContractProjectInfo>("GetContractProjectInfo", pContractCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetRemovalInstallCompleteDate(string contractCode, string c_RENTAL_INSTALL_TYPE_REMOVE_ALL, string c_RENTAL_INSTALL_TYPE_REMOVE_DURING_STOP_REMOVE_ALL)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var c_RENTAL_INSTALL_TYPE_REMOVE_ALLParameter = c_RENTAL_INSTALL_TYPE_REMOVE_ALL != null ?
                new ObjectParameter("C_RENTAL_INSTALL_TYPE_REMOVE_ALL", c_RENTAL_INSTALL_TYPE_REMOVE_ALL) :
                new ObjectParameter("C_RENTAL_INSTALL_TYPE_REMOVE_ALL", typeof(string));
    
            var c_RENTAL_INSTALL_TYPE_REMOVE_DURING_STOP_REMOVE_ALLParameter = c_RENTAL_INSTALL_TYPE_REMOVE_DURING_STOP_REMOVE_ALL != null ?
                new ObjectParameter("C_RENTAL_INSTALL_TYPE_REMOVE_DURING_STOP_REMOVE_ALL", c_RENTAL_INSTALL_TYPE_REMOVE_DURING_STOP_REMOVE_ALL) :
                new ObjectParameter("C_RENTAL_INSTALL_TYPE_REMOVE_DURING_STOP_REMOVE_ALL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetRemovalInstallCompleteDate", contractCodeParameter, c_RENTAL_INSTALL_TYPE_REMOVE_ALLParameter, c_RENTAL_INSTALL_TYPE_REMOVE_DURING_STOP_REMOVE_ALLParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> GetFee(string contractCode, string oCC, string billingType, string billingTiming)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var billingTypeParameter = billingType != null ?
                new ObjectParameter("BillingType", billingType) :
                new ObjectParameter("BillingType", typeof(string));
    
            var billingTimingParameter = billingTiming != null ?
                new ObjectParameter("BillingTiming", billingTiming) :
                new ObjectParameter("BillingTiming", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("GetFee", contractCodeParameter, oCCParameter, billingTypeParameter, billingTimingParameter);
        }
    
        public virtual ObjectResult<tbt_BillingTemp> GetFee(string contractCode, string oCC, string billingType, string billingTiming, MergeOption mergeOption)
        {
            var contractCodeParameter = contractCode != null ?
                new ObjectParameter("ContractCode", contractCode) :
                new ObjectParameter("ContractCode", typeof(string));
    
            var oCCParameter = oCC != null ?
                new ObjectParameter("OCC", oCC) :
                new ObjectParameter("OCC", typeof(string));
    
            var billingTypeParameter = billingType != null ?
                new ObjectParameter("BillingType", billingType) :
                new ObjectParameter("BillingType", typeof(string));
    
            var billingTimingParameter = billingTiming != null ?
                new ObjectParameter("BillingTiming", billingTiming) :
                new ObjectParameter("BillingTiming", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_BillingTemp>("GetFee", mergeOption, contractCodeParameter, oCCParameter, billingTypeParameter, billingTimingParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> GetLinkageSaleContract(string strContractCode, string c_RELATION_TYPE_SALE)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var c_RELATION_TYPE_SALEParameter = c_RELATION_TYPE_SALE != null ?
                new ObjectParameter("C_RELATION_TYPE_SALE", c_RELATION_TYPE_SALE) :
                new ObjectParameter("C_RELATION_TYPE_SALE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("GetLinkageSaleContract", strContractCodeParameter, c_RELATION_TYPE_SALEParameter);
        }
    
        public virtual ObjectResult<tbt_SaleBasic> GetLinkageSaleContract(string strContractCode, string c_RELATION_TYPE_SALE, MergeOption mergeOption)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            var c_RELATION_TYPE_SALEParameter = c_RELATION_TYPE_SALE != null ?
                new ObjectParameter("C_RELATION_TYPE_SALE", c_RELATION_TYPE_SALE) :
                new ObjectParameter("C_RELATION_TYPE_SALE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_SaleBasic>("GetLinkageSaleContract", mergeOption, strContractCodeParameter, c_RELATION_TYPE_SALEParameter);
        }
    
        public virtual ObjectResult<tbt_ARFeeAdjustment> UpdateTbt_ARFeeAdjustment(string xmlARFeeAdjustment)
        {
            var xmlARFeeAdjustmentParameter = xmlARFeeAdjustment != null ?
                new ObjectParameter("xmlARFeeAdjustment", xmlARFeeAdjustment) :
                new ObjectParameter("xmlARFeeAdjustment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARFeeAdjustment>("UpdateTbt_ARFeeAdjustment", xmlARFeeAdjustmentParameter);
        }
    
        public virtual ObjectResult<tbt_ARFeeAdjustment> UpdateTbt_ARFeeAdjustment(string xmlARFeeAdjustment, MergeOption mergeOption)
        {
            var xmlARFeeAdjustmentParameter = xmlARFeeAdjustment != null ?
                new ObjectParameter("xmlARFeeAdjustment", xmlARFeeAdjustment) :
                new ObjectParameter("xmlARFeeAdjustment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_ARFeeAdjustment>("UpdateTbt_ARFeeAdjustment", mergeOption, xmlARFeeAdjustmentParameter);
        }
    
        public virtual ObjectResult<tbt_DocStartMemo> InsertTbt_DocStartMemo(string xml_DocStartMemo)
        {
            var xml_DocStartMemoParameter = xml_DocStartMemo != null ?
                new ObjectParameter("xml_DocStartMemo", xml_DocStartMemo) :
                new ObjectParameter("xml_DocStartMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocStartMemo>("InsertTbt_DocStartMemo", xml_DocStartMemoParameter);
        }
    
        public virtual ObjectResult<tbt_DocStartMemo> InsertTbt_DocStartMemo(string xml_DocStartMemo, MergeOption mergeOption)
        {
            var xml_DocStartMemoParameter = xml_DocStartMemo != null ?
                new ObjectParameter("xml_DocStartMemo", xml_DocStartMemo) :
                new ObjectParameter("xml_DocStartMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tbt_DocStartMemo>("InsertTbt_DocStartMemo", mergeOption, xml_DocStartMemoParameter);
        }
    
        public virtual ObjectResult<RPTStartResumeMemoDo> GetRptStartResumeMemoData(Nullable<int> iDocID, Nullable<bool> bFlagOn)
        {
            var iDocIDParameter = iDocID.HasValue ?
                new ObjectParameter("iDocID", iDocID) :
                new ObjectParameter("iDocID", typeof(int));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPTStartResumeMemoDo>("GetRptStartResumeMemoData", iDocIDParameter, bFlagOnParameter);
        }
    
        public virtual ObjectResult<string> GetRentalLastOCC(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRentalLastOCC", strContractCodeParameter);
        }
    
        public virtual ObjectResult<sp_CT_GetSaleBasicOneShotFlag_Result> GetSaleBasicOneShotFlag(string strContractCode)
        {
            var strContractCodeParameter = strContractCode != null ?
                new ObjectParameter("strContractCode", strContractCode) :
                new ObjectParameter("strContractCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CT_GetSaleBasicOneShotFlag_Result>("GetSaleBasicOneShotFlag", strContractCodeParameter);
        }
    
        public virtual ObjectResult<dtQuotationNoData> GetQuotationNo(string quotationTargetCode, string alphabet)
        {
            var quotationTargetCodeParameter = quotationTargetCode != null ?
                new ObjectParameter("QuotationTargetCode", quotationTargetCode) :
                new ObjectParameter("QuotationTargetCode", typeof(string));
    
            var alphabetParameter = alphabet != null ?
                new ObjectParameter("Alphabet", alphabet) :
                new ObjectParameter("Alphabet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtQuotationNoData>("GetQuotationNo", quotationTargetCodeParameter, alphabetParameter);
        }
    
        public virtual ObjectResult<doMaintenanceCompletionReport> GetMaintenanceCompletionReport(string paramContractCode, string paramProductCode, Nullable<System.DateTime> paramInstructionDate, Nullable<bool> bFlagOn)
        {
            var paramContractCodeParameter = paramContractCode != null ?
                new ObjectParameter("paramContractCode", paramContractCode) :
                new ObjectParameter("paramContractCode", typeof(string));
    
            var paramProductCodeParameter = paramProductCode != null ?
                new ObjectParameter("paramProductCode", paramProductCode) :
                new ObjectParameter("paramProductCode", typeof(string));
    
            var paramInstructionDateParameter = paramInstructionDate.HasValue ?
                new ObjectParameter("paramInstructionDate", paramInstructionDate) :
                new ObjectParameter("paramInstructionDate", typeof(System.DateTime));
    
            var bFlagOnParameter = bFlagOn.HasValue ?
                new ObjectParameter("bFlagOn", bFlagOn) :
                new ObjectParameter("bFlagOn", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doMaintenanceCompletionReport>("GetMaintenanceCompletionReport", paramContractCodeParameter, paramProductCodeParameter, paramInstructionDateParameter, bFlagOnParameter);
        }
    
        public virtual ObjectResult<dtUnreceivedContractDocument_CTR095List> GetUnreceivedContractDocument_CTR095(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dtUnreceivedContractDocument_CTR095List>("GetUnreceivedContractDocument_CTR095", startDateParameter, endDateParameter);
        }
    }
}
