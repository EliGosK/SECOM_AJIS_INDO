//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.EntityClient;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace SECOM_AJIS.DataEntity.Income
{
    public partial class ICDataEntities : ObjectContext
    {
        public const string ConnectionString = "name=ICDataEntities";
        public const string ContainerName = "ICDataEntities";
    
        #region Constructors
    
        public ICDataEntities()
            : base(ConnectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            this.CommandTimeout = 3600;
        }
    
        public ICDataEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            this.CommandTimeout = 3600;
        }
    
        public ICDataEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            this.CommandTimeout = 3600;
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<tbt_SaleBasic> tbt_SaleBasic
        {
            get { return _tbt_SaleBasic  ?? (_tbt_SaleBasic = CreateObjectSet<tbt_SaleBasic>("tbt_SaleBasic")); }
        }
        private ObjectSet<tbt_SaleBasic> _tbt_SaleBasic;
    
        public ObjectSet<tbt_Payment> tbt_Payment
        {
            get { return _tbt_Payment  ?? (_tbt_Payment = CreateObjectSet<tbt_Payment>("tbt_Payment")); }
        }
        private ObjectSet<tbt_Payment> _tbt_Payment;
    
        public ObjectSet<tbt_CreditNote> tbt_CreditNote
        {
            get { return _tbt_CreditNote  ?? (_tbt_CreditNote = CreateObjectSet<tbt_CreditNote>("tbt_CreditNote")); }
        }
        private ObjectSet<tbt_CreditNote> _tbt_CreditNote;
    
        public ObjectSet<tbt_MatchPaymentHeader> tbt_MatchPaymentHeader
        {
            get { return _tbt_MatchPaymentHeader  ?? (_tbt_MatchPaymentHeader = CreateObjectSet<tbt_MatchPaymentHeader>("tbt_MatchPaymentHeader")); }
        }
        private ObjectSet<tbt_MatchPaymentHeader> _tbt_MatchPaymentHeader;
    
        public ObjectSet<tbt_Receipt> tbt_Receipt
        {
            get { return _tbt_Receipt  ?? (_tbt_Receipt = CreateObjectSet<tbt_Receipt>("tbt_Receipt")); }
        }
        private ObjectSet<tbt_Receipt> _tbt_Receipt;
    
        public ObjectSet<tbt_MoneyCollectionInfo> tbt_MoneyCollectionInfo
        {
            get { return _tbt_MoneyCollectionInfo  ?? (_tbt_MoneyCollectionInfo = CreateObjectSet<tbt_MoneyCollectionInfo>("tbt_MoneyCollectionInfo")); }
        }
        private ObjectSet<tbt_MoneyCollectionInfo> _tbt_MoneyCollectionInfo;
    
        public ObjectSet<tbt_MatchPaymentDetail> tbt_MatchPaymentDetail
        {
            get { return _tbt_MatchPaymentDetail  ?? (_tbt_MatchPaymentDetail = CreateObjectSet<tbt_MatchPaymentDetail>("tbt_MatchPaymentDetail")); }
        }
        private ObjectSet<tbt_MatchPaymentDetail> _tbt_MatchPaymentDetail;
    
        public ObjectSet<tbt_BillingTargetDebtTracing> tbt_BillingTargetDebtTracing
        {
            get { return _tbt_BillingTargetDebtTracing  ?? (_tbt_BillingTargetDebtTracing = CreateObjectSet<tbt_BillingTargetDebtTracing>("tbt_BillingTargetDebtTracing")); }
        }
        private ObjectSet<tbt_BillingTargetDebtTracing> _tbt_BillingTargetDebtTracing;
    
        public ObjectSet<tbt_DebtTarget> tbt_DebtTarget
        {
            get { return _tbt_DebtTarget  ?? (_tbt_DebtTarget = CreateObjectSet<tbt_DebtTarget>("tbt_DebtTarget")); }
        }
        private ObjectSet<tbt_DebtTarget> _tbt_DebtTarget;
    
        public ObjectSet<tbt_InvoiceDebtTracing> tbt_InvoiceDebtTracing
        {
            get { return _tbt_InvoiceDebtTracing  ?? (_tbt_InvoiceDebtTracing = CreateObjectSet<tbt_InvoiceDebtTracing>("tbt_InvoiceDebtTracing")); }
        }
        private ObjectSet<tbt_InvoiceDebtTracing> _tbt_InvoiceDebtTracing;
    
        public ObjectSet<tbt_Revenue> tbt_Revenue
        {
            get { return _tbt_Revenue  ?? (_tbt_Revenue = CreateObjectSet<tbt_Revenue>("tbt_Revenue")); }
        }
        private ObjectSet<tbt_Revenue> _tbt_Revenue;
    
        public ObjectSet<tbt_tmpImportContent> tbt_tmpImportContent
        {
            get { return _tbt_tmpImportContent  ?? (_tbt_tmpImportContent = CreateObjectSet<tbt_tmpImportContent>("tbt_tmpImportContent")); }
        }
        private ObjectSet<tbt_tmpImportContent> _tbt_tmpImportContent;
    
        public ObjectSet<tbt_PaymentImportFile> tbt_PaymentImportFile
        {
            get { return _tbt_PaymentImportFile  ?? (_tbt_PaymentImportFile = CreateObjectSet<tbt_PaymentImportFile>("tbt_PaymentImportFile")); }
        }
        private ObjectSet<tbt_PaymentImportFile> _tbt_PaymentImportFile;
    
        public ObjectSet<tbt_IncomeWHT> tbt_IncomeWHT
        {
            get { return _tbt_IncomeWHT  ?? (_tbt_IncomeWHT = CreateObjectSet<tbt_IncomeWHT>("tbt_IncomeWHT")); }
        }
        private ObjectSet<tbt_IncomeWHT> _tbt_IncomeWHT;
    
        public ObjectSet<tbt_DebtTracingHistory> tbt_DebtTracingHistory
        {
            get { return _tbt_DebtTracingHistory  ?? (_tbt_DebtTracingHistory = CreateObjectSet<tbt_DebtTracingHistory>("tbt_DebtTracingHistory")); }
        }
        private ObjectSet<tbt_DebtTracingHistory> _tbt_DebtTracingHistory;
    
        public ObjectSet<tbt_DebtTracingHistoryDetail> tbt_DebtTracingHistoryDetail
        {
            get { return _tbt_DebtTracingHistoryDetail  ?? (_tbt_DebtTracingHistoryDetail = CreateObjectSet<tbt_DebtTracingHistoryDetail>("tbt_DebtTracingHistoryDetail")); }
        }
        private ObjectSet<tbt_DebtTracingHistoryDetail> _tbt_DebtTracingHistoryDetail;
    
        public ObjectSet<tbt_DebtTracingCustCondition> tbt_DebtTracingCustCondition
        {
            get { return _tbt_DebtTracingCustCondition  ?? (_tbt_DebtTracingCustCondition = CreateObjectSet<tbt_DebtTracingCustCondition>("tbt_DebtTracingCustCondition")); }
        }
        private ObjectSet<tbt_DebtTracingCustCondition> _tbt_DebtTracingCustCondition;

        #endregion

        #region Function Imports
        public ObjectResult<SECOMBankBranchData> GetSECOMBankBranch()
        {
            return base.ExecuteFunction<SECOMBankBranchData>("GetSECOMBankBranch");
        }
        public ObjectResult<doReceipt> GetAdvanceReceipt(string receiptNo)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
            return base.ExecuteFunction<doReceipt>("GetAdvanceReceipt", receiptNoParameter);
        }
        public ObjectResult<doReceipt> GetReceipt(string receiptNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doReceipt>("GetReceipt", receiptNoParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<tbt_Payment> InsertTbt_Payment(string xmlTbt_Payment)
        {
    
            ObjectParameter xmlTbt_PaymentParameter;
    
            if (xmlTbt_Payment != null)
            {
                xmlTbt_PaymentParameter = new ObjectParameter("xmlTbt_Payment", xmlTbt_Payment);
            }
            else
            {
                xmlTbt_PaymentParameter = new ObjectParameter("xmlTbt_Payment", typeof(string));
            }
            return base.ExecuteFunction<tbt_Payment>("InsertTbt_Payment", xmlTbt_PaymentParameter);
        }
        public ObjectResult<tbt_CreditNote> GetTbt_CreditNote(string creditNoteNo)
        {
    
            ObjectParameter creditNoteNoParameter;
    
            if (creditNoteNo != null)
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", creditNoteNo);
            }
            else
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", typeof(string));
            }
            return base.ExecuteFunction<tbt_CreditNote>("GetTbt_CreditNote", creditNoteNoParameter);
        }
        public ObjectResult<tbt_Payment> GetPayment(string paymentTransNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<tbt_Payment>("GetPayment", paymentTransNoParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetBillingTargetByCode(string billingTargetCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetBillingTargetByCode", billingTargetCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetBillingTargetByBillingCode(string billingCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK)
        {
    
            ObjectParameter billingCodeParameter;
    
            if (billingCode != null)
            {
                billingCodeParameter = new ObjectParameter("BillingCode", billingCode);
            }
            else
            {
                billingCodeParameter = new ObjectParameter("BillingCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetBillingTargetByBillingCode", billingCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetBillingTargetByInvoiceNo(string invoiceNo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetBillingTargetByInvoiceNo", invoiceNoParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetBillingTargetByReceiptNo(string receiptNo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetBillingTargetByReceiptNo", receiptNoParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> SearchUnpaidBillingTarget(string billingClientName, string invoiceAmountCurrencyType, Nullable<decimal> invoiceAmountFrom, Nullable<decimal> invoiceAmountTo, Nullable<System.DateTime> issueInvoiceDateFrom, Nullable<System.DateTime> issueInvoiceDateTo, Nullable<bool> haveCreditNoteIssued, string billingDetailAmountCurrencyType, Nullable<decimal> billingDetailAmountFrom, Nullable<decimal> billingDetailAmountTo, string billingType_ContractFee, string billingType_InstallationFee, string billingType_DepositFee, string billingType_SalePrice, string billingType_OtherFee, string paymentMethod_BankTransfer, string paymentMethod_Messenger, string paymentMethod_AutoTransfer, string paymentMethod_CreditCard, Nullable<int> billingCycle, Nullable<int> lastPaymentDayFrom, Nullable<int> lastPaymentDayTo, Nullable<System.DateTime> expectedPaymentDateFrom, Nullable<System.DateTime> expectedPaymentDateTo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter billingClientNameParameter;
    
            if (billingClientName != null)
            {
                billingClientNameParameter = new ObjectParameter("BillingClientName", billingClientName);
            }
            else
            {
                billingClientNameParameter = new ObjectParameter("BillingClientName", typeof(string));
            }
    
            ObjectParameter invoiceAmountCurrencyTypeParameter;
    
            if (invoiceAmountCurrencyType != null)
            {
                invoiceAmountCurrencyTypeParameter = new ObjectParameter("InvoiceAmountCurrencyType", invoiceAmountCurrencyType);
            }
            else
            {
                invoiceAmountCurrencyTypeParameter = new ObjectParameter("InvoiceAmountCurrencyType", typeof(string));
            }
    
            ObjectParameter invoiceAmountFromParameter;
    
            if (invoiceAmountFrom.HasValue)
            {
                invoiceAmountFromParameter = new ObjectParameter("InvoiceAmountFrom", invoiceAmountFrom);
            }
            else
            {
                invoiceAmountFromParameter = new ObjectParameter("InvoiceAmountFrom", typeof(decimal));
            }
    
            ObjectParameter invoiceAmountToParameter;
    
            if (invoiceAmountTo.HasValue)
            {
                invoiceAmountToParameter = new ObjectParameter("InvoiceAmountTo", invoiceAmountTo);
            }
            else
            {
                invoiceAmountToParameter = new ObjectParameter("InvoiceAmountTo", typeof(decimal));
            }
    
            ObjectParameter issueInvoiceDateFromParameter;
    
            if (issueInvoiceDateFrom.HasValue)
            {
                issueInvoiceDateFromParameter = new ObjectParameter("IssueInvoiceDateFrom", issueInvoiceDateFrom);
            }
            else
            {
                issueInvoiceDateFromParameter = new ObjectParameter("IssueInvoiceDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter issueInvoiceDateToParameter;
    
            if (issueInvoiceDateTo.HasValue)
            {
                issueInvoiceDateToParameter = new ObjectParameter("IssueInvoiceDateTo", issueInvoiceDateTo);
            }
            else
            {
                issueInvoiceDateToParameter = new ObjectParameter("IssueInvoiceDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter haveCreditNoteIssuedParameter;
    
            if (haveCreditNoteIssued.HasValue)
            {
                haveCreditNoteIssuedParameter = new ObjectParameter("HaveCreditNoteIssued", haveCreditNoteIssued);
            }
            else
            {
                haveCreditNoteIssuedParameter = new ObjectParameter("HaveCreditNoteIssued", typeof(bool));
            }
    
            ObjectParameter billingDetailAmountCurrencyTypeParameter;
    
            if (billingDetailAmountCurrencyType != null)
            {
                billingDetailAmountCurrencyTypeParameter = new ObjectParameter("BillingDetailAmountCurrencyType", billingDetailAmountCurrencyType);
            }
            else
            {
                billingDetailAmountCurrencyTypeParameter = new ObjectParameter("BillingDetailAmountCurrencyType", typeof(string));
            }
    
            ObjectParameter billingDetailAmountFromParameter;
    
            if (billingDetailAmountFrom.HasValue)
            {
                billingDetailAmountFromParameter = new ObjectParameter("BillingDetailAmountFrom", billingDetailAmountFrom);
            }
            else
            {
                billingDetailAmountFromParameter = new ObjectParameter("BillingDetailAmountFrom", typeof(decimal));
            }
    
            ObjectParameter billingDetailAmountToParameter;
    
            if (billingDetailAmountTo.HasValue)
            {
                billingDetailAmountToParameter = new ObjectParameter("BillingDetailAmountTo", billingDetailAmountTo);
            }
            else
            {
                billingDetailAmountToParameter = new ObjectParameter("BillingDetailAmountTo", typeof(decimal));
            }
    
            ObjectParameter billingType_ContractFeeParameter;
    
            if (billingType_ContractFee != null)
            {
                billingType_ContractFeeParameter = new ObjectParameter("BillingType_ContractFee", billingType_ContractFee);
            }
            else
            {
                billingType_ContractFeeParameter = new ObjectParameter("BillingType_ContractFee", typeof(string));
            }
    
            ObjectParameter billingType_InstallationFeeParameter;
    
            if (billingType_InstallationFee != null)
            {
                billingType_InstallationFeeParameter = new ObjectParameter("BillingType_InstallationFee", billingType_InstallationFee);
            }
            else
            {
                billingType_InstallationFeeParameter = new ObjectParameter("BillingType_InstallationFee", typeof(string));
            }
    
            ObjectParameter billingType_DepositFeeParameter;
    
            if (billingType_DepositFee != null)
            {
                billingType_DepositFeeParameter = new ObjectParameter("BillingType_DepositFee", billingType_DepositFee);
            }
            else
            {
                billingType_DepositFeeParameter = new ObjectParameter("BillingType_DepositFee", typeof(string));
            }
    
            ObjectParameter billingType_SalePriceParameter;
    
            if (billingType_SalePrice != null)
            {
                billingType_SalePriceParameter = new ObjectParameter("BillingType_SalePrice", billingType_SalePrice);
            }
            else
            {
                billingType_SalePriceParameter = new ObjectParameter("BillingType_SalePrice", typeof(string));
            }
    
            ObjectParameter billingType_OtherFeeParameter;
    
            if (billingType_OtherFee != null)
            {
                billingType_OtherFeeParameter = new ObjectParameter("BillingType_OtherFee", billingType_OtherFee);
            }
            else
            {
                billingType_OtherFeeParameter = new ObjectParameter("BillingType_OtherFee", typeof(string));
            }
    
            ObjectParameter paymentMethod_BankTransferParameter;
    
            if (paymentMethod_BankTransfer != null)
            {
                paymentMethod_BankTransferParameter = new ObjectParameter("PaymentMethod_BankTransfer", paymentMethod_BankTransfer);
            }
            else
            {
                paymentMethod_BankTransferParameter = new ObjectParameter("PaymentMethod_BankTransfer", typeof(string));
            }
    
            ObjectParameter paymentMethod_MessengerParameter;
    
            if (paymentMethod_Messenger != null)
            {
                paymentMethod_MessengerParameter = new ObjectParameter("PaymentMethod_Messenger", paymentMethod_Messenger);
            }
            else
            {
                paymentMethod_MessengerParameter = new ObjectParameter("PaymentMethod_Messenger", typeof(string));
            }
    
            ObjectParameter paymentMethod_AutoTransferParameter;
    
            if (paymentMethod_AutoTransfer != null)
            {
                paymentMethod_AutoTransferParameter = new ObjectParameter("PaymentMethod_AutoTransfer", paymentMethod_AutoTransfer);
            }
            else
            {
                paymentMethod_AutoTransferParameter = new ObjectParameter("PaymentMethod_AutoTransfer", typeof(string));
            }
    
            ObjectParameter paymentMethod_CreditCardParameter;
    
            if (paymentMethod_CreditCard != null)
            {
                paymentMethod_CreditCardParameter = new ObjectParameter("PaymentMethod_CreditCard", paymentMethod_CreditCard);
            }
            else
            {
                paymentMethod_CreditCardParameter = new ObjectParameter("PaymentMethod_CreditCard", typeof(string));
            }
    
            ObjectParameter billingCycleParameter;
    
            if (billingCycle.HasValue)
            {
                billingCycleParameter = new ObjectParameter("BillingCycle", billingCycle);
            }
            else
            {
                billingCycleParameter = new ObjectParameter("BillingCycle", typeof(int));
            }
    
            ObjectParameter lastPaymentDayFromParameter;
    
            if (lastPaymentDayFrom.HasValue)
            {
                lastPaymentDayFromParameter = new ObjectParameter("LastPaymentDayFrom", lastPaymentDayFrom);
            }
            else
            {
                lastPaymentDayFromParameter = new ObjectParameter("LastPaymentDayFrom", typeof(int));
            }
    
            ObjectParameter lastPaymentDayToParameter;
    
            if (lastPaymentDayTo.HasValue)
            {
                lastPaymentDayToParameter = new ObjectParameter("LastPaymentDayTo", lastPaymentDayTo);
            }
            else
            {
                lastPaymentDayToParameter = new ObjectParameter("LastPaymentDayTo", typeof(int));
            }
    
            ObjectParameter expectedPaymentDateFromParameter;
    
            if (expectedPaymentDateFrom.HasValue)
            {
                expectedPaymentDateFromParameter = new ObjectParameter("ExpectedPaymentDateFrom", expectedPaymentDateFrom);
            }
            else
            {
                expectedPaymentDateFromParameter = new ObjectParameter("ExpectedPaymentDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter expectedPaymentDateToParameter;
    
            if (expectedPaymentDateTo.HasValue)
            {
                expectedPaymentDateToParameter = new ObjectParameter("ExpectedPaymentDateTo", expectedPaymentDateTo);
            }
            else
            {
                expectedPaymentDateToParameter = new ObjectParameter("ExpectedPaymentDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("SearchUnpaidBillingTarget", billingClientNameParameter, invoiceAmountCurrencyTypeParameter, invoiceAmountFromParameter, invoiceAmountToParameter, issueInvoiceDateFromParameter, issueInvoiceDateToParameter, haveCreditNoteIssuedParameter, billingDetailAmountCurrencyTypeParameter, billingDetailAmountFromParameter, billingDetailAmountToParameter, billingType_ContractFeeParameter, billingType_InstallationFeeParameter, billingType_DepositFeeParameter, billingType_SalePriceParameter, billingType_OtherFeeParameter, paymentMethod_BankTransferParameter, paymentMethod_MessengerParameter, paymentMethod_AutoTransferParameter, paymentMethod_CreditCardParameter, billingCycleParameter, lastPaymentDayFromParameter, lastPaymentDayToParameter, expectedPaymentDateFromParameter, expectedPaymentDateToParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doUnpaidInvoice> GetUnpaidInvoice(string invoiceNo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidInvoice>("GetUnpaidInvoice", invoiceNoParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doUnpaidInvoice> GetUnpaidInvoiceByBillingTarget(string billingTargetCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidInvoice>("GetUnpaidInvoiceByBillingTarget", billingTargetCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<tbt_MatchPaymentDetail> InsertTbt_MatchPaymentDetail(string xmlTbt_MatchPaymentDetail)
        {
    
            ObjectParameter xmlTbt_MatchPaymentDetailParameter;
    
            if (xmlTbt_MatchPaymentDetail != null)
            {
                xmlTbt_MatchPaymentDetailParameter = new ObjectParameter("xmlTbt_MatchPaymentDetail", xmlTbt_MatchPaymentDetail);
            }
            else
            {
                xmlTbt_MatchPaymentDetailParameter = new ObjectParameter("xmlTbt_MatchPaymentDetail", typeof(string));
            }
            return base.ExecuteFunction<tbt_MatchPaymentDetail>("InsertTbt_MatchPaymentDetail", xmlTbt_MatchPaymentDetailParameter);
        }
        public ObjectResult<tbt_MatchPaymentHeader> InsertTbt_MatchPaymentHeader(string xmlTbt_MatchPaymentHeader)
        {
    
            ObjectParameter xmlTbt_MatchPaymentHeaderParameter;
    
            if (xmlTbt_MatchPaymentHeader != null)
            {
                xmlTbt_MatchPaymentHeaderParameter = new ObjectParameter("xmlTbt_MatchPaymentHeader", xmlTbt_MatchPaymentHeader);
            }
            else
            {
                xmlTbt_MatchPaymentHeaderParameter = new ObjectParameter("xmlTbt_MatchPaymentHeader", typeof(string));
            }
            return base.ExecuteFunction<tbt_MatchPaymentHeader>("InsertTbt_MatchPaymentHeader", xmlTbt_MatchPaymentHeaderParameter);
        }
        public ObjectResult<tbt_Receipt> UpdateAdvanceReceiptMatchPayment(string receiptNo, string advanceReceiptStatus, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter advanceReceiptStatusParameter;
    
            if (advanceReceiptStatus != null)
            {
                advanceReceiptStatusParameter = new ObjectParameter("AdvanceReceiptStatus", advanceReceiptStatus);
            }
            else
            {
                advanceReceiptStatusParameter = new ObjectParameter("AdvanceReceiptStatus", typeof(string));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Receipt>("UpdateAdvanceReceiptMatchPayment", receiptNoParameter, advanceReceiptStatusParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<doReceipt> GetReceiptByInvoiceNo(string invoiceNo, Nullable<int> invoiceOCC, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doReceipt>("GetReceiptByInvoiceNo", invoiceNoParameter, invoiceOCCParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public int GetRefundInfo(string paymentTransNo)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("paymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("paymentTransNo", typeof(string));
            }
            return base.ExecuteFunction("GetRefundInfo", paymentTransNoParameter);
        }
        public ObjectResult<tbt_Payment> DeletePaymentTransaction(string paymentTransNo, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Payment>("DeletePaymentTransaction", paymentTransNoParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<tbt_Receipt> UpdateAdvanceReceiptDeletePayment(string receiptNo, string advanceReceiptStatus, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter advanceReceiptStatusParameter;
    
            if (advanceReceiptStatus != null)
            {
                advanceReceiptStatusParameter = new ObjectParameter("AdvanceReceiptStatus", advanceReceiptStatus);
            }
            else
            {
                advanceReceiptStatusParameter = new ObjectParameter("AdvanceReceiptStatus", typeof(string));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Receipt>("UpdateAdvanceReceiptDeletePayment", receiptNoParameter, advanceReceiptStatusParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<doPaymentMatchingDesc> GetPaymentMatchingDesc(string valueCode, string c_PAYMENT_MATCHING_DESC)
        {
    
            ObjectParameter valueCodeParameter;
    
            if (valueCode != null)
            {
                valueCodeParameter = new ObjectParameter("ValueCode", valueCode);
            }
            else
            {
                valueCodeParameter = new ObjectParameter("ValueCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_MATCHING_DESCParameter;
    
            if (c_PAYMENT_MATCHING_DESC != null)
            {
                c_PAYMENT_MATCHING_DESCParameter = new ObjectParameter("C_PAYMENT_MATCHING_DESC", c_PAYMENT_MATCHING_DESC);
            }
            else
            {
                c_PAYMENT_MATCHING_DESCParameter = new ObjectParameter("C_PAYMENT_MATCHING_DESC", typeof(string));
            }
            return base.ExecuteFunction<doPaymentMatchingDesc>("GetPaymentMatchingDesc", valueCodeParameter, c_PAYMENT_MATCHING_DESCParameter);
        }
        public ObjectResult<doPaymentMatchingResult> GetPaymentMatchingResult(string paymentTransNo)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
            return base.ExecuteFunction<doPaymentMatchingResult>("GetPaymentMatchingResult", paymentTransNoParameter);
        }
        public ObjectResult<doPaymentMatchingResultDetail> GetPaymentMatchingResult_Detail(string matchID)
        {
    
            ObjectParameter matchIDParameter;
    
            if (matchID != null)
            {
                matchIDParameter = new ObjectParameter("MatchID", matchID);
            }
            else
            {
                matchIDParameter = new ObjectParameter("MatchID", typeof(string));
            }
            return base.ExecuteFunction<doPaymentMatchingResultDetail>("GetPaymentMatchingResult_Detail", matchIDParameter);
        }
        public ObjectResult<doPayment> SearchPayment(string paymentType, string status, Nullable<int> sECOMAccountID, string paymentTransNo, string payer, Nullable<System.DateTime> paymentDateFrom, Nullable<System.DateTime> paymentDateTo, Nullable<decimal> matchableBalanceFrom, Nullable<decimal> matchableBalanceTo, string invoiceNo, string receiptNo, string sendingBankCode, string cONST_PAYMENT_TYPE, string matchRGroupName, string empNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US, string matchableBalancCurrencyType)
        {
    
            ObjectParameter paymentTypeParameter;
    
            if (paymentType != null)
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", paymentType);
            }
            else
            {
                paymentTypeParameter = new ObjectParameter("PaymentType", typeof(string));
            }
    
            ObjectParameter statusParameter;
    
            if (status != null)
            {
                statusParameter = new ObjectParameter("Status", status);
            }
            else
            {
                statusParameter = new ObjectParameter("Status", typeof(string));
            }
    
            ObjectParameter sECOMAccountIDParameter;
    
            if (sECOMAccountID.HasValue)
            {
                sECOMAccountIDParameter = new ObjectParameter("SECOMAccountID", sECOMAccountID);
            }
            else
            {
                sECOMAccountIDParameter = new ObjectParameter("SECOMAccountID", typeof(int));
            }
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter payerParameter;
    
            if (payer != null)
            {
                payerParameter = new ObjectParameter("Payer", payer);
            }
            else
            {
                payerParameter = new ObjectParameter("Payer", typeof(string));
            }
    
            ObjectParameter paymentDateFromParameter;
    
            if (paymentDateFrom.HasValue)
            {
                paymentDateFromParameter = new ObjectParameter("PaymentDateFrom", paymentDateFrom);
            }
            else
            {
                paymentDateFromParameter = new ObjectParameter("PaymentDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter paymentDateToParameter;
    
            if (paymentDateTo.HasValue)
            {
                paymentDateToParameter = new ObjectParameter("PaymentDateTo", paymentDateTo);
            }
            else
            {
                paymentDateToParameter = new ObjectParameter("PaymentDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter matchableBalanceFromParameter;
    
            if (matchableBalanceFrom.HasValue)
            {
                matchableBalanceFromParameter = new ObjectParameter("MatchableBalanceFrom", matchableBalanceFrom);
            }
            else
            {
                matchableBalanceFromParameter = new ObjectParameter("MatchableBalanceFrom", typeof(decimal));
            }
    
            ObjectParameter matchableBalanceToParameter;
    
            if (matchableBalanceTo.HasValue)
            {
                matchableBalanceToParameter = new ObjectParameter("MatchableBalanceTo", matchableBalanceTo);
            }
            else
            {
                matchableBalanceToParameter = new ObjectParameter("MatchableBalanceTo", typeof(decimal));
            }
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter sendingBankCodeParameter;
    
            if (sendingBankCode != null)
            {
                sendingBankCodeParameter = new ObjectParameter("SendingBankCode", sendingBankCode);
            }
            else
            {
                sendingBankCodeParameter = new ObjectParameter("SendingBankCode", typeof(string));
            }
    
            ObjectParameter cONST_PAYMENT_TYPEParameter;
    
            if (cONST_PAYMENT_TYPE != null)
            {
                cONST_PAYMENT_TYPEParameter = new ObjectParameter("CONST_PAYMENT_TYPE", cONST_PAYMENT_TYPE);
            }
            else
            {
                cONST_PAYMENT_TYPEParameter = new ObjectParameter("CONST_PAYMENT_TYPE", typeof(string));
            }
    
            ObjectParameter matchRGroupNameParameter;
    
            if (matchRGroupName != null)
            {
                matchRGroupNameParameter = new ObjectParameter("MatchRGroupName", matchRGroupName);
            }
            else
            {
                matchRGroupNameParameter = new ObjectParameter("MatchRGroupName", typeof(string));
            }
    
            ObjectParameter empNoParameter;
    
            if (empNo != null)
            {
                empNoParameter = new ObjectParameter("EmpNo", empNo);
            }
            else
            {
                empNoParameter = new ObjectParameter("EmpNo", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
    
            ObjectParameter matchableBalancCurrencyTypeParameter;
    
            if (matchableBalancCurrencyType != null)
            {
                matchableBalancCurrencyTypeParameter = new ObjectParameter("MatchableBalancCurrencyType", matchableBalancCurrencyType);
            }
            else
            {
                matchableBalancCurrencyTypeParameter = new ObjectParameter("MatchableBalancCurrencyType", typeof(string));
            }
            return base.ExecuteFunction<doPayment>("SearchPayment", paymentTypeParameter, statusParameter, sECOMAccountIDParameter, paymentTransNoParameter, payerParameter, paymentDateFromParameter, paymentDateToParameter, matchableBalanceFromParameter, matchableBalanceToParameter, invoiceNoParameter, receiptNoParameter, sendingBankCodeParameter, cONST_PAYMENT_TYPEParameter, matchRGroupNameParameter, empNoParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter, matchableBalancCurrencyTypeParameter);
        }
        public ObjectResult<doUnpaidBillingDetail> GetUnpaidBillingDetailByBillingTarget(string billingTargetCode, string c_PAYMENT_STATUS, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUSParameter;
    
            if (c_PAYMENT_STATUS != null)
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", c_PAYMENT_STATUS);
            }
            else
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingDetail>("GetUnpaidBillingDetailByBillingTarget", billingTargetCodeParameter, c_PAYMENT_STATUSParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doUnpaidBillingDetail> GetUnpaidBillingDetailByInvoice(string invoiceNo, Nullable<int> invoiceOCC, string c_PAYMENT_STATUS, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
    
            ObjectParameter c_PAYMENT_STATUSParameter;
    
            if (c_PAYMENT_STATUS != null)
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", c_PAYMENT_STATUS);
            }
            else
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingDetail>("GetUnpaidBillingDetailByInvoice", invoiceNoParameter, invoiceOCCParameter, c_PAYMENT_STATUSParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetUnpaidBillingTargetByBillingCode(string billingCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter billingCodeParameter;
    
            if (billingCode != null)
            {
                billingCodeParameter = new ObjectParameter("BillingCode", billingCode);
            }
            else
            {
                billingCodeParameter = new ObjectParameter("BillingCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetUnpaidBillingTargetByBillingCode", billingCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetUnpaidBillingTargetByCode(string billingTargetCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetUnpaidBillingTargetByCode", billingTargetCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetUnpaidBillingTargetByInvoiceNo(string invoiceNo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetUnpaidBillingTargetByInvoiceNo", invoiceNoParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetUnpaidBillingTargetByReceiptNo(string receiptNo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetUnpaidBillingTargetByReceiptNo", receiptNoParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<tbt_MoneyCollectionInfo> InsertTbt_MoneyCollectionInfo(string xml_Tbt_MoneyCollectionInfo)
        {
    
            ObjectParameter xml_Tbt_MoneyCollectionInfoParameter;
    
            if (xml_Tbt_MoneyCollectionInfo != null)
            {
                xml_Tbt_MoneyCollectionInfoParameter = new ObjectParameter("xml_Tbt_MoneyCollectionInfo", xml_Tbt_MoneyCollectionInfo);
            }
            else
            {
                xml_Tbt_MoneyCollectionInfoParameter = new ObjectParameter("xml_Tbt_MoneyCollectionInfo", typeof(string));
            }
            return base.ExecuteFunction<tbt_MoneyCollectionInfo>("InsertTbt_MoneyCollectionInfo", xml_Tbt_MoneyCollectionInfoParameter);
        }
        public ObjectResult<tbt_Receipt> UpdateAdvanceReceiptRegisterPayment(string receiptNo, string advanceReceiptStatus, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter advanceReceiptStatusParameter;
    
            if (advanceReceiptStatus != null)
            {
                advanceReceiptStatusParameter = new ObjectParameter("AdvanceReceiptStatus", advanceReceiptStatus);
            }
            else
            {
                advanceReceiptStatusParameter = new ObjectParameter("AdvanceReceiptStatus", typeof(string));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Receipt>("UpdateAdvanceReceiptRegisterPayment", receiptNoParameter, advanceReceiptStatusParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<tbt_Payment> UpdatePaymentMatchableBalance(string paymentTransNo, Nullable<decimal> adjustMatchableBalance, string updateBy, Nullable<System.DateTime> updateDate, Nullable<decimal> adjustMatchableBalanceUsd, string matchableBalanceCurrencyType)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter adjustMatchableBalanceParameter;
    
            if (adjustMatchableBalance.HasValue)
            {
                adjustMatchableBalanceParameter = new ObjectParameter("AdjustMatchableBalance", adjustMatchableBalance);
            }
            else
            {
                adjustMatchableBalanceParameter = new ObjectParameter("AdjustMatchableBalance", typeof(decimal));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
    
            ObjectParameter adjustMatchableBalanceUsdParameter;
    
            if (adjustMatchableBalanceUsd.HasValue)
            {
                adjustMatchableBalanceUsdParameter = new ObjectParameter("AdjustMatchableBalanceUsd", adjustMatchableBalanceUsd);
            }
            else
            {
                adjustMatchableBalanceUsdParameter = new ObjectParameter("AdjustMatchableBalanceUsd", typeof(decimal));
            }
    
            ObjectParameter matchableBalanceCurrencyTypeParameter;
    
            if (matchableBalanceCurrencyType != null)
            {
                matchableBalanceCurrencyTypeParameter = new ObjectParameter("MatchableBalanceCurrencyType", matchableBalanceCurrencyType);
            }
            else
            {
                matchableBalanceCurrencyTypeParameter = new ObjectParameter("MatchableBalanceCurrencyType", typeof(string));
            }
            return base.ExecuteFunction<tbt_Payment>("UpdatePaymentMatchableBalance", paymentTransNoParameter, adjustMatchableBalanceParameter, updateByParameter, updateDateParameter, adjustMatchableBalanceUsdParameter, matchableBalanceCurrencyTypeParameter);
        }
        public ObjectResult<tbt_MoneyCollectionInfo> DeleteTbt_MoneyCollectionInfo(string receiptNo)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
            return base.ExecuteFunction<tbt_MoneyCollectionInfo>("DeleteTbt_MoneyCollectionInfo", receiptNoParameter);
        }
        public ObjectResult<doGetMoneyCollectionManagementInfo> GetMoneyCollectionManagementInfo(Nullable<System.DateTime> expectedCollectDateFrom, Nullable<System.DateTime> expectedCollectDateTo, string collectionAreaCode)
        {
    
            ObjectParameter expectedCollectDateFromParameter;
    
            if (expectedCollectDateFrom.HasValue)
            {
                expectedCollectDateFromParameter = new ObjectParameter("ExpectedCollectDateFrom", expectedCollectDateFrom);
            }
            else
            {
                expectedCollectDateFromParameter = new ObjectParameter("ExpectedCollectDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter expectedCollectDateToParameter;
    
            if (expectedCollectDateTo.HasValue)
            {
                expectedCollectDateToParameter = new ObjectParameter("ExpectedCollectDateTo", expectedCollectDateTo);
            }
            else
            {
                expectedCollectDateToParameter = new ObjectParameter("ExpectedCollectDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter collectionAreaCodeParameter;
    
            if (collectionAreaCode != null)
            {
                collectionAreaCodeParameter = new ObjectParameter("CollectionAreaCode", collectionAreaCode);
            }
            else
            {
                collectionAreaCodeParameter = new ObjectParameter("CollectionAreaCode", typeof(string));
            }
            return base.ExecuteFunction<doGetMoneyCollectionManagementInfo>("GetMoneyCollectionManagementInfo", expectedCollectDateFromParameter, expectedCollectDateToParameter, collectionAreaCodeParameter);
        }
        public ObjectResult<tbt_Payment> UpdatePaymentBankFeeFlag(string paymentTransNo, Nullable<bool> bankFeeFlag, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter bankFeeFlagParameter;
    
            if (bankFeeFlag.HasValue)
            {
                bankFeeFlagParameter = new ObjectParameter("BankFeeFlag", bankFeeFlag);
            }
            else
            {
                bankFeeFlagParameter = new ObjectParameter("BankFeeFlag", typeof(bool));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Payment>("UpdatePaymentBankFeeFlag", paymentTransNoParameter, bankFeeFlagParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<tbt_Payment> UpdatePaymentOtherIncomeFlag(string paymentTransNo, Nullable<bool> otherIncomeFlag, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter otherIncomeFlagParameter;
    
            if (otherIncomeFlag.HasValue)
            {
                otherIncomeFlagParameter = new ObjectParameter("OtherIncomeFlag", otherIncomeFlag);
            }
            else
            {
                otherIncomeFlagParameter = new ObjectParameter("OtherIncomeFlag", typeof(bool));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Payment>("UpdatePaymentOtherIncomeFlag", paymentTransNoParameter, otherIncomeFlagParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<tbt_Payment> UpdatePaymentOtherExpenseFlag(string paymentTransNo, Nullable<bool> otherExpenseFlag, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter otherExpenseFlagParameter;
    
            if (otherExpenseFlag.HasValue)
            {
                otherExpenseFlagParameter = new ObjectParameter("OtherExpenseFlag", otherExpenseFlag);
            }
            else
            {
                otherExpenseFlagParameter = new ObjectParameter("OtherExpenseFlag", typeof(bool));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Payment>("UpdatePaymentOtherExpenseFlag", paymentTransNoParameter, otherExpenseFlagParameter, updateByParameter, updateDateParameter);
        }
        public int ValidateBankTransferContent(Nullable<System.Guid> importID, string c_PAYMENT_IMPORT_NO_ERROR, string c_PAYMENT_IMPORT_ERROR_INVALID_INVOICE, string c_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICE, string c_PAYMENT_IMPORT_ERROR_PAID_INVOICE, string c_PAYMENT_IMPORT_ERROR_INCORRECT_STATUS, string c_INC_PAYMENT_IMPORT, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_PAYMENT_STATUS_CANCEL, string c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED, string c_PAYMENT_STATUS_NOTE_FAIL, string c_PAYMENT_STATUS_POST_FAIL, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT)
        {
    
            ObjectParameter importIDParameter;
    
            if (importID.HasValue)
            {
                importIDParameter = new ObjectParameter("importID", importID);
            }
            else
            {
                importIDParameter = new ObjectParameter("importID", typeof(System.Guid));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_NO_ERRORParameter;
    
            if (c_PAYMENT_IMPORT_NO_ERROR != null)
            {
                c_PAYMENT_IMPORT_NO_ERRORParameter = new ObjectParameter("C_PAYMENT_IMPORT_NO_ERROR", c_PAYMENT_IMPORT_NO_ERROR);
            }
            else
            {
                c_PAYMENT_IMPORT_NO_ERRORParameter = new ObjectParameter("C_PAYMENT_IMPORT_NO_ERROR", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_ERROR_INVALID_INVOICEParameter;
    
            if (c_PAYMENT_IMPORT_ERROR_INVALID_INVOICE != null)
            {
                c_PAYMENT_IMPORT_ERROR_INVALID_INVOICEParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_INVALID_INVOICE", c_PAYMENT_IMPORT_ERROR_INVALID_INVOICE);
            }
            else
            {
                c_PAYMENT_IMPORT_ERROR_INVALID_INVOICEParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_INVALID_INVOICE", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICEParameter;
    
            if (c_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICE != null)
            {
                c_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICEParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICE", c_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICE);
            }
            else
            {
                c_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICEParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICE", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_ERROR_PAID_INVOICEParameter;
    
            if (c_PAYMENT_IMPORT_ERROR_PAID_INVOICE != null)
            {
                c_PAYMENT_IMPORT_ERROR_PAID_INVOICEParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_PAID_INVOICE", c_PAYMENT_IMPORT_ERROR_PAID_INVOICE);
            }
            else
            {
                c_PAYMENT_IMPORT_ERROR_PAID_INVOICEParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_PAID_INVOICE", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_ERROR_INCORRECT_STATUSParameter;
    
            if (c_PAYMENT_IMPORT_ERROR_INCORRECT_STATUS != null)
            {
                c_PAYMENT_IMPORT_ERROR_INCORRECT_STATUSParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_INCORRECT_STATUS", c_PAYMENT_IMPORT_ERROR_INCORRECT_STATUS);
            }
            else
            {
                c_PAYMENT_IMPORT_ERROR_INCORRECT_STATUSParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_INCORRECT_STATUS", typeof(string));
            }
    
            ObjectParameter c_INC_PAYMENT_IMPORTParameter;
    
            if (c_INC_PAYMENT_IMPORT != null)
            {
                c_INC_PAYMENT_IMPORTParameter = new ObjectParameter("C_INC_PAYMENT_IMPORT", c_INC_PAYMENT_IMPORT);
            }
            else
            {
                c_INC_PAYMENT_IMPORTParameter = new ObjectParameter("C_INC_PAYMENT_IMPORT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CANCELParameter;
    
            if (c_PAYMENT_STATUS_CANCEL != null)
            {
                c_PAYMENT_STATUS_CANCELParameter = new ObjectParameter("C_PAYMENT_STATUS_CANCEL", c_PAYMENT_STATUS_CANCEL);
            }
            else
            {
                c_PAYMENT_STATUS_CANCELParameter = new ObjectParameter("C_PAYMENT_STATUS_CANCEL", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter;
    
            if (c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED != null)
            {
                c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED", c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED);
            }
            else
            {
                c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_FAILParameter;
    
            if (c_PAYMENT_STATUS_NOTE_FAIL != null)
            {
                c_PAYMENT_STATUS_NOTE_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL", c_PAYMENT_STATUS_NOTE_FAIL);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_FAILParameter;
    
            if (c_PAYMENT_STATUS_POST_FAIL != null)
            {
                c_PAYMENT_STATUS_POST_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL", c_PAYMENT_STATUS_POST_FAIL);
            }
            else
            {
                c_PAYMENT_STATUS_POST_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
            return base.ExecuteFunction("ValidateBankTransferContent", importIDParameter, c_PAYMENT_IMPORT_NO_ERRORParameter, c_PAYMENT_IMPORT_ERROR_INVALID_INVOICEParameter, c_PAYMENT_IMPORT_ERROR_IMPORTED_INVOICEParameter, c_PAYMENT_IMPORT_ERROR_PAID_INVOICEParameter, c_PAYMENT_IMPORT_ERROR_INCORRECT_STATUSParameter, c_INC_PAYMENT_IMPORTParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_PAYMENT_STATUS_CANCELParameter, c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter, c_PAYMENT_STATUS_NOTE_FAILParameter, c_PAYMENT_STATUS_POST_FAILParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter);
        }
        public int ValidateAutoTransferContent(Nullable<System.Guid> importID, Nullable<int> sECOMAccountID, string c_PAYMENT_IMPORT_NO_ERROR, string c_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCH, string c_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCH, string c_PAYMENT_IMPORT_ERROR_BANK_UNMATCH, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT)
        {
    
            ObjectParameter importIDParameter;
    
            if (importID.HasValue)
            {
                importIDParameter = new ObjectParameter("importID", importID);
            }
            else
            {
                importIDParameter = new ObjectParameter("importID", typeof(System.Guid));
            }
    
            ObjectParameter sECOMAccountIDParameter;
    
            if (sECOMAccountID.HasValue)
            {
                sECOMAccountIDParameter = new ObjectParameter("SECOMAccountID", sECOMAccountID);
            }
            else
            {
                sECOMAccountIDParameter = new ObjectParameter("SECOMAccountID", typeof(int));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_NO_ERRORParameter;
    
            if (c_PAYMENT_IMPORT_NO_ERROR != null)
            {
                c_PAYMENT_IMPORT_NO_ERRORParameter = new ObjectParameter("C_PAYMENT_IMPORT_NO_ERROR", c_PAYMENT_IMPORT_NO_ERROR);
            }
            else
            {
                c_PAYMENT_IMPORT_NO_ERRORParameter = new ObjectParameter("C_PAYMENT_IMPORT_NO_ERROR", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCHParameter;
    
            if (c_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCH != null)
            {
                c_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCHParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCH", c_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCH);
            }
            else
            {
                c_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCHParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCH", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCHParameter;
    
            if (c_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCH != null)
            {
                c_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCHParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCH", c_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCH);
            }
            else
            {
                c_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCHParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCH", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_IMPORT_ERROR_BANK_UNMATCHParameter;
    
            if (c_PAYMENT_IMPORT_ERROR_BANK_UNMATCH != null)
            {
                c_PAYMENT_IMPORT_ERROR_BANK_UNMATCHParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_BANK_UNMATCH", c_PAYMENT_IMPORT_ERROR_BANK_UNMATCH);
            }
            else
            {
                c_PAYMENT_IMPORT_ERROR_BANK_UNMATCHParameter = new ObjectParameter("C_PAYMENT_IMPORT_ERROR_BANK_UNMATCH", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
            return base.ExecuteFunction("ValidateAutoTransferContent", importIDParameter, sECOMAccountIDParameter, c_PAYMENT_IMPORT_NO_ERRORParameter, c_PAYMENT_IMPORT_ERROR_INVOICE_AMOUNT_UNMATCHParameter, c_PAYMENT_IMPORT_ERROR_PAY_DATE_UNMATCHParameter, c_PAYMENT_IMPORT_ERROR_BANK_UNMATCHParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter);
        }
        public int CheckAutoTransferFileImported(Nullable<System.Guid> importID, Nullable<int> sECOMAccountID, string c_PAYMENT_TYPE_AUTO_TRANSFER, ObjectParameter iS_IMPORTED)
        {
    
            ObjectParameter importIDParameter;
    
            if (importID.HasValue)
            {
                importIDParameter = new ObjectParameter("ImportID", importID);
            }
            else
            {
                importIDParameter = new ObjectParameter("ImportID", typeof(System.Guid));
            }
    
            ObjectParameter sECOMAccountIDParameter;
    
            if (sECOMAccountID.HasValue)
            {
                sECOMAccountIDParameter = new ObjectParameter("SECOMAccountID", sECOMAccountID);
            }
            else
            {
                sECOMAccountIDParameter = new ObjectParameter("SECOMAccountID", typeof(int));
            }
    
            ObjectParameter c_PAYMENT_TYPE_AUTO_TRANSFERParameter;
    
            if (c_PAYMENT_TYPE_AUTO_TRANSFER != null)
            {
                c_PAYMENT_TYPE_AUTO_TRANSFERParameter = new ObjectParameter("C_PAYMENT_TYPE_AUTO_TRANSFER", c_PAYMENT_TYPE_AUTO_TRANSFER);
            }
            else
            {
                c_PAYMENT_TYPE_AUTO_TRANSFERParameter = new ObjectParameter("C_PAYMENT_TYPE_AUTO_TRANSFER", typeof(string));
            }
            return base.ExecuteFunction("CheckAutoTransferFileImported", importIDParameter, sECOMAccountIDParameter, c_PAYMENT_TYPE_AUTO_TRANSFERParameter, iS_IMPORTED);
        }
        public ObjectResult<doGetBillingCodeDebtSummary> GetBillingCodeDebtSummary(string billingCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter billingCodeParameter;
    
            if (billingCode != null)
            {
                billingCodeParameter = new ObjectParameter("BillingCode", billingCode);
            }
            else
            {
                billingCodeParameter = new ObjectParameter("BillingCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doGetBillingCodeDebtSummary>("GetBillingCodeDebtSummary", billingCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doGetBillingOfficeDebtSummary> GetBillingOfficeDebtSummary(Nullable<int> intMonth, Nullable<int> intYear)
        {
    
            ObjectParameter intMonthParameter;
    
            if (intMonth.HasValue)
            {
                intMonthParameter = new ObjectParameter("intMonth", intMonth);
            }
            else
            {
                intMonthParameter = new ObjectParameter("intMonth", typeof(int));
            }
    
            ObjectParameter intYearParameter;
    
            if (intYear.HasValue)
            {
                intYearParameter = new ObjectParameter("intYear", intYear);
            }
            else
            {
                intYearParameter = new ObjectParameter("intYear", typeof(int));
            }
            return base.ExecuteFunction<doGetBillingOfficeDebtSummary>("GetBillingOfficeDebtSummary", intMonthParameter, intYearParameter);
        }
        public ObjectResult<doGetBillingTargetDebtSummaryByOffice> GetBillingTargetDebtSummaryByOffice(string strBillingTargetCode, Nullable<int> intMonth, Nullable<int> intYear)
        {
    
            ObjectParameter strBillingTargetCodeParameter;
    
            if (strBillingTargetCode != null)
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", strBillingTargetCode);
            }
            else
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", typeof(string));
            }
    
            ObjectParameter intMonthParameter;
    
            if (intMonth.HasValue)
            {
                intMonthParameter = new ObjectParameter("intMonth", intMonth);
            }
            else
            {
                intMonthParameter = new ObjectParameter("intMonth", typeof(int));
            }
    
            ObjectParameter intYearParameter;
    
            if (intYear.HasValue)
            {
                intYearParameter = new ObjectParameter("intYear", intYear);
            }
            else
            {
                intYearParameter = new ObjectParameter("intYear", typeof(int));
            }
            return base.ExecuteFunction<doGetBillingTargetDebtSummaryByOffice>("GetBillingTargetDebtSummaryByOffice", strBillingTargetCodeParameter, intMonthParameter, intYearParameter);
        }
        public ObjectResult<doGetUnpaidDetailDebtSummary> GetUnpaidDetailDebtSummaryByBillingCode(string strBillingCode, string c_PAYMENT_STATUS, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter strBillingCodeParameter;
    
            if (strBillingCode != null)
            {
                strBillingCodeParameter = new ObjectParameter("strBillingCode", strBillingCode);
            }
            else
            {
                strBillingCodeParameter = new ObjectParameter("strBillingCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUSParameter;
    
            if (c_PAYMENT_STATUS != null)
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", c_PAYMENT_STATUS);
            }
            else
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidDetailDebtSummary>("GetUnpaidDetailDebtSummaryByBillingCode", strBillingCodeParameter, c_PAYMENT_STATUSParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doGetUnpaidDetailDebtSummary> GetUnpaidDetailDebtSummaryByBillingTarget(string strBillingTargetCode, string c_PAYMENT_STATUS, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string strOfficeCode)
        {
    
            ObjectParameter strBillingTargetCodeParameter;
    
            if (strBillingTargetCode != null)
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", strBillingTargetCode);
            }
            else
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUSParameter;
    
            if (c_PAYMENT_STATUS != null)
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", c_PAYMENT_STATUS);
            }
            else
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter strOfficeCodeParameter;
    
            if (strOfficeCode != null)
            {
                strOfficeCodeParameter = new ObjectParameter("strOfficeCode", strOfficeCode);
            }
            else
            {
                strOfficeCodeParameter = new ObjectParameter("strOfficeCode", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidDetailDebtSummary>("GetUnpaidDetailDebtSummaryByBillingTarget", strBillingTargetCodeParameter, c_PAYMENT_STATUSParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, strOfficeCodeParameter);
        }
        public ObjectResult<doGetUnpaidDetailDebtSummary> GetUnpaidDetailDebtSummaryByInvoice(string invoiceNo, Nullable<int> invoiceOCC, string c_PAYMENT_STATUS, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string strOfficeCode)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
    
            ObjectParameter c_PAYMENT_STATUSParameter;
    
            if (c_PAYMENT_STATUS != null)
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", c_PAYMENT_STATUS);
            }
            else
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter strOfficeCodeParameter;
    
            if (strOfficeCode != null)
            {
                strOfficeCodeParameter = new ObjectParameter("strOfficeCode", strOfficeCode);
            }
            else
            {
                strOfficeCodeParameter = new ObjectParameter("strOfficeCode", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidDetailDebtSummary>("GetUnpaidDetailDebtSummaryByInvoice", invoiceNoParameter, invoiceOCCParameter, c_PAYMENT_STATUSParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, strOfficeCodeParameter);
        }
        public ObjectResult<doGetUnpaidInvoiceDebtSummaryByBillingTarget> GetUnpaidInvoiceDebtSummaryByBillingTarget(string strBillingTargetCode, string c_PAYMENT_STATUS, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string strOfficeCode)
        {
    
            ObjectParameter strBillingTargetCodeParameter;
    
            if (strBillingTargetCode != null)
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", strBillingTargetCode);
            }
            else
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUSParameter;
    
            if (c_PAYMENT_STATUS != null)
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", c_PAYMENT_STATUS);
            }
            else
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter strOfficeCodeParameter;
    
            if (strOfficeCode != null)
            {
                strOfficeCodeParameter = new ObjectParameter("strOfficeCode", strOfficeCode);
            }
            else
            {
                strOfficeCodeParameter = new ObjectParameter("strOfficeCode", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidInvoiceDebtSummaryByBillingTarget>("GetUnpaidInvoiceDebtSummaryByBillingTarget", strBillingTargetCodeParameter, c_PAYMENT_STATUSParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, strOfficeCodeParameter);
        }
        public ObjectResult<tbt_BillingTargetDebtTracing> InsertTbt_BillingTargetDebtTracing(string xmlTbt_BillingTargetDebtTracing)
        {
    
            ObjectParameter xmlTbt_BillingTargetDebtTracingParameter;
    
            if (xmlTbt_BillingTargetDebtTracing != null)
            {
                xmlTbt_BillingTargetDebtTracingParameter = new ObjectParameter("xmlTbt_BillingTargetDebtTracing", xmlTbt_BillingTargetDebtTracing);
            }
            else
            {
                xmlTbt_BillingTargetDebtTracingParameter = new ObjectParameter("xmlTbt_BillingTargetDebtTracing", typeof(string));
            }
            return base.ExecuteFunction<tbt_BillingTargetDebtTracing>("InsertTbt_BillingTargetDebtTracing", xmlTbt_BillingTargetDebtTracingParameter);
        }
        public ObjectResult<tbt_InvoiceDebtTracing> InsertTbt_InvoiceDebtTracing(string xmlTbt_InvoiceDebtTracing)
        {
    
            ObjectParameter xmlTbt_InvoiceDebtTracingParameter;
    
            if (xmlTbt_InvoiceDebtTracing != null)
            {
                xmlTbt_InvoiceDebtTracingParameter = new ObjectParameter("xmlTbt_InvoiceDebtTracing", xmlTbt_InvoiceDebtTracing);
            }
            else
            {
                xmlTbt_InvoiceDebtTracingParameter = new ObjectParameter("xmlTbt_InvoiceDebtTracing", typeof(string));
            }
            return base.ExecuteFunction<tbt_InvoiceDebtTracing>("InsertTbt_InvoiceDebtTracing", xmlTbt_InvoiceDebtTracingParameter);
        }
        public ObjectResult<tbt_DebtTarget> UpdateTbt_DebtTarget(string xmlTbt_DebtTarget)
        {
    
            ObjectParameter xmlTbt_DebtTargetParameter;
    
            if (xmlTbt_DebtTarget != null)
            {
                xmlTbt_DebtTargetParameter = new ObjectParameter("xmlTbt_DebtTarget", xmlTbt_DebtTarget);
            }
            else
            {
                xmlTbt_DebtTargetParameter = new ObjectParameter("xmlTbt_DebtTarget", typeof(string));
            }
            return base.ExecuteFunction<tbt_DebtTarget>("UpdateTbt_DebtTarget", xmlTbt_DebtTargetParameter);
        }
        public ObjectResult<doGetDebtTarget> GetDebtTarget()
        {
            return base.ExecuteFunction<doGetDebtTarget>("GetDebtTarget");
        }
        public ObjectResult<tbt_PaymentImportFile> InsertTbt_PaymentImportFile(string xmlTbt_tmpImportContent)
        {
    
            ObjectParameter xmlTbt_tmpImportContentParameter;
    
            if (xmlTbt_tmpImportContent != null)
            {
                xmlTbt_tmpImportContentParameter = new ObjectParameter("xmlTbt_tmpImportContent", xmlTbt_tmpImportContent);
            }
            else
            {
                xmlTbt_tmpImportContentParameter = new ObjectParameter("xmlTbt_tmpImportContent", typeof(string));
            }
            return base.ExecuteFunction<tbt_PaymentImportFile>("InsertTbt_PaymentImportFile", xmlTbt_tmpImportContentParameter);
        }
        public ObjectResult<doGetDebtTracingMemo> GetDebtTracingMemo(string strBillingTargetCode, string strInvoiceNo, Nullable<int> strInvoiceOCC)
        {
    
            ObjectParameter strBillingTargetCodeParameter;
    
            if (strBillingTargetCode != null)
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", strBillingTargetCode);
            }
            else
            {
                strBillingTargetCodeParameter = new ObjectParameter("strBillingTargetCode", typeof(string));
            }
    
            ObjectParameter strInvoiceNoParameter;
    
            if (strInvoiceNo != null)
            {
                strInvoiceNoParameter = new ObjectParameter("strInvoiceNo", strInvoiceNo);
            }
            else
            {
                strInvoiceNoParameter = new ObjectParameter("strInvoiceNo", typeof(string));
            }
    
            ObjectParameter strInvoiceOCCParameter;
    
            if (strInvoiceOCC.HasValue)
            {
                strInvoiceOCCParameter = new ObjectParameter("strInvoiceOCC", strInvoiceOCC);
            }
            else
            {
                strInvoiceOCCParameter = new ObjectParameter("strInvoiceOCC", typeof(int));
            }
            return base.ExecuteFunction<doGetDebtTracingMemo>("GetDebtTracingMemo", strBillingTargetCodeParameter, strInvoiceNoParameter, strInvoiceOCCParameter);
        }
        public ObjectResult<tbt_CreditNote> UpdateTbt_CreditNote(string xmlTbt_CreditNote)
        {
    
            ObjectParameter xmlTbt_CreditNoteParameter;
    
            if (xmlTbt_CreditNote != null)
            {
                xmlTbt_CreditNoteParameter = new ObjectParameter("xmlTbt_CreditNote", xmlTbt_CreditNote);
            }
            else
            {
                xmlTbt_CreditNoteParameter = new ObjectParameter("xmlTbt_CreditNote", typeof(string));
            }
            return base.ExecuteFunction<tbt_CreditNote>("UpdateTbt_CreditNote", xmlTbt_CreditNoteParameter);
        }
        public ObjectResult<tbt_CreditNote> InsertTbt_CreditNote(string xmlTbt_CreditNote)
        {
    
            ObjectParameter xmlTbt_CreditNoteParameter;
    
            if (xmlTbt_CreditNote != null)
            {
                xmlTbt_CreditNoteParameter = new ObjectParameter("xmlTbt_CreditNote", xmlTbt_CreditNote);
            }
            else
            {
                xmlTbt_CreditNoteParameter = new ObjectParameter("xmlTbt_CreditNote", typeof(string));
            }
            return base.ExecuteFunction<tbt_CreditNote>("InsertTbt_CreditNote", xmlTbt_CreditNoteParameter);
        }
        public ObjectResult<tbt_Revenue> InsertTbt_Revenue(string xmlTbt_Revenue)
        {
    
            ObjectParameter xmlTbt_RevenueParameter;
    
            if (xmlTbt_Revenue != null)
            {
                xmlTbt_RevenueParameter = new ObjectParameter("xmlTbt_Revenue", xmlTbt_Revenue);
            }
            else
            {
                xmlTbt_RevenueParameter = new ObjectParameter("xmlTbt_Revenue", typeof(string));
            }
            return base.ExecuteFunction<tbt_Revenue>("InsertTbt_Revenue", xmlTbt_RevenueParameter);
        }
        public ObjectResult<string> CheckCreditNoteCanCancel(string strCreditNoteNo)
        {
    
            ObjectParameter strCreditNoteNoParameter;
    
            if (strCreditNoteNo != null)
            {
                strCreditNoteNoParameter = new ObjectParameter("strCreditNoteNo", strCreditNoteNo);
            }
            else
            {
                strCreditNoteNoParameter = new ObjectParameter("strCreditNoteNo", typeof(string));
            }
            return base.ExecuteFunction<string>("CheckCreditNoteCanCancel", strCreditNoteNoParameter);
        }
        public ObjectResult<doGetRegContent> GetRegContent(string c_REG_CONTENT, string strRegContentCode)
        {
    
            ObjectParameter c_REG_CONTENTParameter;
    
            if (c_REG_CONTENT != null)
            {
                c_REG_CONTENTParameter = new ObjectParameter("C_REG_CONTENT", c_REG_CONTENT);
            }
            else
            {
                c_REG_CONTENTParameter = new ObjectParameter("C_REG_CONTENT", typeof(string));
            }
    
            ObjectParameter strRegContentCodeParameter;
    
            if (strRegContentCode != null)
            {
                strRegContentCodeParameter = new ObjectParameter("strRegContentCode", strRegContentCode);
            }
            else
            {
                strRegContentCodeParameter = new ObjectParameter("strRegContentCode", typeof(string));
            }
            return base.ExecuteFunction<doGetRegContent>("GetRegContent", c_REG_CONTENTParameter, strRegContentCodeParameter);
        }
        public ObjectResult<tbt_tmpImportContent> GetTbt_tmpImportContent(Nullable<System.Guid> importID)
        {
    
            ObjectParameter importIDParameter;
    
            if (importID.HasValue)
            {
                importIDParameter = new ObjectParameter("importID", importID);
            }
            else
            {
                importIDParameter = new ObjectParameter("importID", typeof(System.Guid));
            }
            return base.ExecuteFunction<tbt_tmpImportContent>("GetTbt_tmpImportContent", importIDParameter);
        }
        public ObjectResult<tbt_tmpImportContent> InsertTbt_tmpImportContent(string xmlTbt_tmpImportContent)
        {
    
            ObjectParameter xmlTbt_tmpImportContentParameter;
    
            if (xmlTbt_tmpImportContent != null)
            {
                xmlTbt_tmpImportContentParameter = new ObjectParameter("xmlTbt_tmpImportContent", xmlTbt_tmpImportContent);
            }
            else
            {
                xmlTbt_tmpImportContentParameter = new ObjectParameter("xmlTbt_tmpImportContent", typeof(string));
            }
            return base.ExecuteFunction<tbt_tmpImportContent>("InsertTbt_tmpImportContent", xmlTbt_tmpImportContentParameter);
        }
        public ObjectResult<doGetCreditNote> GetCreditNote(string creditNoteNo)
        {
    
            ObjectParameter creditNoteNoParameter;
    
            if (creditNoteNo != null)
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", creditNoteNo);
            }
            else
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", typeof(string));
            }
            return base.ExecuteFunction<doGetCreditNote>("GetCreditNote", creditNoteNoParameter);
        }
        public int CheckAllMatchingToRefund(string invoiceNo, Nullable<int> invoiceOCC, string c_PAYMENT_TYPE_CN_REFUND, ObjectParameter oUT_ALL_REFUND)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("invoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("invoiceOCC", typeof(int));
            }
    
            ObjectParameter c_PAYMENT_TYPE_CN_REFUNDParameter;
    
            if (c_PAYMENT_TYPE_CN_REFUND != null)
            {
                c_PAYMENT_TYPE_CN_REFUNDParameter = new ObjectParameter("C_PAYMENT_TYPE_CN_REFUND", c_PAYMENT_TYPE_CN_REFUND);
            }
            else
            {
                c_PAYMENT_TYPE_CN_REFUNDParameter = new ObjectParameter("C_PAYMENT_TYPE_CN_REFUND", typeof(string));
            }
            return base.ExecuteFunction("CheckAllMatchingToRefund", invoiceNoParameter, invoiceOCCParameter, c_PAYMENT_TYPE_CN_REFUNDParameter, oUT_ALL_REFUND);
        }
        public ObjectResult<doPaidInvoiceNoReceipt> GetPaidInvoiceNoReceipt(string c_PAYMENT_STATUS_BANK_PAID, string c_PAYMENT_STATUS_AUTO_PAID, string c_PAYMENT_STATUS_CASH_PAID, string c_PAYMENT_STATUS_CHEQUE_PAID, string c_PAYMENT_STATUS_CASHIER_PAID, string c_PAYMENT_STATUS_NOTE_MATCHED, string c_PAYMENT_STATUS_NOTE_ENCASHED, string c_PAYMENT_STATUS_POST_MATCHED, string c_PAYMENT_STATUS_POST_ENCASHED, string c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN, string c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND, string c_PAYMENT_STATUS_REFUND_PAID, string c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID, string c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID, string c_PAYMENT_STATUS_POST_FAIL_BANK_PAID)
        {
    
            ObjectParameter c_PAYMENT_STATUS_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_BANK_PAID", c_PAYMENT_STATUS_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_BANK_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_AUTO_PAIDParameter;
    
            if (c_PAYMENT_STATUS_AUTO_PAID != null)
            {
                c_PAYMENT_STATUS_AUTO_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_PAID", c_PAYMENT_STATUS_AUTO_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_AUTO_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CASH_PAIDParameter;
    
            if (c_PAYMENT_STATUS_CASH_PAID != null)
            {
                c_PAYMENT_STATUS_CASH_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASH_PAID", c_PAYMENT_STATUS_CASH_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_CASH_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASH_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CHEQUE_PAIDParameter;
    
            if (c_PAYMENT_STATUS_CHEQUE_PAID != null)
            {
                c_PAYMENT_STATUS_CHEQUE_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CHEQUE_PAID", c_PAYMENT_STATUS_CHEQUE_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_CHEQUE_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CHEQUE_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CASHIER_PAIDParameter;
    
            if (c_PAYMENT_STATUS_CASHIER_PAID != null)
            {
                c_PAYMENT_STATUS_CASHIER_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASHIER_PAID", c_PAYMENT_STATUS_CASHIER_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_CASHIER_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASHIER_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_MATCHEDParameter;
    
            if (c_PAYMENT_STATUS_NOTE_MATCHED != null)
            {
                c_PAYMENT_STATUS_NOTE_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_MATCHED", c_PAYMENT_STATUS_NOTE_MATCHED);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_MATCHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_ENCASHEDParameter;
    
            if (c_PAYMENT_STATUS_NOTE_ENCASHED != null)
            {
                c_PAYMENT_STATUS_NOTE_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_ENCASHED", c_PAYMENT_STATUS_NOTE_ENCASHED);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_ENCASHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_MATCHEDParameter;
    
            if (c_PAYMENT_STATUS_POST_MATCHED != null)
            {
                c_PAYMENT_STATUS_POST_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_MATCHED", c_PAYMENT_STATUS_POST_MATCHED);
            }
            else
            {
                c_PAYMENT_STATUS_POST_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_MATCHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_ENCASHEDParameter;
    
            if (c_PAYMENT_STATUS_POST_ENCASHED != null)
            {
                c_PAYMENT_STATUS_POST_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_ENCASHED", c_PAYMENT_STATUS_POST_ENCASHED);
            }
            else
            {
                c_PAYMENT_STATUS_POST_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_ENCASHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter;
    
            if (c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN != null)
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN", c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter;
    
            if (c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND != null)
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND", c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND);
            }
            else
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_REFUND_PAIDParameter;
    
            if (c_PAYMENT_STATUS_REFUND_PAID != null)
            {
                c_PAYMENT_STATUS_REFUND_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_REFUND_PAID", c_PAYMENT_STATUS_REFUND_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_REFUND_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_REFUND_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID", c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID", c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_POST_FAIL_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL_BANK_PAID", c_PAYMENT_STATUS_POST_FAIL_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL_BANK_PAID", typeof(string));
            }
            return base.ExecuteFunction<doPaidInvoiceNoReceipt>("GetPaidInvoiceNoReceipt", c_PAYMENT_STATUS_BANK_PAIDParameter, c_PAYMENT_STATUS_AUTO_PAIDParameter, c_PAYMENT_STATUS_CASH_PAIDParameter, c_PAYMENT_STATUS_CHEQUE_PAIDParameter, c_PAYMENT_STATUS_CASHIER_PAIDParameter, c_PAYMENT_STATUS_NOTE_MATCHEDParameter, c_PAYMENT_STATUS_NOTE_ENCASHEDParameter, c_PAYMENT_STATUS_POST_MATCHEDParameter, c_PAYMENT_STATUS_POST_ENCASHEDParameter, c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter, c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter, c_PAYMENT_STATUS_REFUND_PAIDParameter, c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter, c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter, c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter);
        }
        public ObjectResult<tbt_Receipt> InsertTbt_Receipt(string xmlTbt_Receipt)
        {
    
            ObjectParameter xmlTbt_ReceiptParameter;
    
            if (xmlTbt_Receipt != null)
            {
                xmlTbt_ReceiptParameter = new ObjectParameter("xmlTbt_Receipt", xmlTbt_Receipt);
            }
            else
            {
                xmlTbt_ReceiptParameter = new ObjectParameter("xmlTbt_Receipt", typeof(string));
            }
            return base.ExecuteFunction<tbt_Receipt>("InsertTbt_Receipt", xmlTbt_ReceiptParameter);
        }
        public ObjectResult<doRptReceipt> GetRptReceipt(string receiptNo)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
            return base.ExecuteFunction<doRptReceipt>("GetRptReceipt", receiptNoParameter);
        }
        public ObjectResult<doInvoiceAdvanceReceipt> GetInvoiceAdvanceReceipt(string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_BILLING_TYPE_GROUP_SALE, string c_ISSUE_REC_TIME_SAME_INV, string c_PAYMENT_METHOD_MESSENGER)
        {
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_BILLING_TYPE_GROUP_SALEParameter;
    
            if (c_BILLING_TYPE_GROUP_SALE != null)
            {
                c_BILLING_TYPE_GROUP_SALEParameter = new ObjectParameter("C_BILLING_TYPE_GROUP_SALE", c_BILLING_TYPE_GROUP_SALE);
            }
            else
            {
                c_BILLING_TYPE_GROUP_SALEParameter = new ObjectParameter("C_BILLING_TYPE_GROUP_SALE", typeof(string));
            }
    
            ObjectParameter c_ISSUE_REC_TIME_SAME_INVParameter;
    
            if (c_ISSUE_REC_TIME_SAME_INV != null)
            {
                c_ISSUE_REC_TIME_SAME_INVParameter = new ObjectParameter("C_ISSUE_REC_TIME_SAME_INV", c_ISSUE_REC_TIME_SAME_INV);
            }
            else
            {
                c_ISSUE_REC_TIME_SAME_INVParameter = new ObjectParameter("C_ISSUE_REC_TIME_SAME_INV", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_METHOD_MESSENGERParameter;
    
            if (c_PAYMENT_METHOD_MESSENGER != null)
            {
                c_PAYMENT_METHOD_MESSENGERParameter = new ObjectParameter("C_PAYMENT_METHOD_MESSENGER", c_PAYMENT_METHOD_MESSENGER);
            }
            else
            {
                c_PAYMENT_METHOD_MESSENGERParameter = new ObjectParameter("C_PAYMENT_METHOD_MESSENGER", typeof(string));
            }
            return base.ExecuteFunction<doInvoiceAdvanceReceipt>("GetInvoiceAdvanceReceipt", c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_BILLING_TYPE_GROUP_SALEParameter, c_ISSUE_REC_TIME_SAME_INVParameter, c_PAYMENT_METHOD_MESSENGERParameter);
        }
        public int BatchGenDebtSummary(string batchId, Nullable<System.DateTime> batchDate, string c_BILLING_TYPE_GROUP_CONTINUES, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, ObjectParameter totalEffectRow)
        {
    
            ObjectParameter batchIdParameter;
    
            if (batchId != null)
            {
                batchIdParameter = new ObjectParameter("BatchId", batchId);
            }
            else
            {
                batchIdParameter = new ObjectParameter("BatchId", typeof(string));
            }
    
            ObjectParameter batchDateParameter;
    
            if (batchDate.HasValue)
            {
                batchDateParameter = new ObjectParameter("BatchDate", batchDate);
            }
            else
            {
                batchDateParameter = new ObjectParameter("BatchDate", typeof(System.DateTime));
            }
    
            ObjectParameter c_BILLING_TYPE_GROUP_CONTINUESParameter;
    
            if (c_BILLING_TYPE_GROUP_CONTINUES != null)
            {
                c_BILLING_TYPE_GROUP_CONTINUESParameter = new ObjectParameter("C_BILLING_TYPE_GROUP_CONTINUES", c_BILLING_TYPE_GROUP_CONTINUES);
            }
            else
            {
                c_BILLING_TYPE_GROUP_CONTINUESParameter = new ObjectParameter("C_BILLING_TYPE_GROUP_CONTINUES", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction("BatchGenDebtSummary", batchIdParameter, batchDateParameter, c_BILLING_TYPE_GROUP_CONTINUESParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, totalEffectRow);
        }
        public int BatchDeleteDebtTracing(string c_PAYMENT_STATUS_BANK_PAID, string c_PAYMENT_STATUS_AUTO_PAID, string c_PAYMENT_STATUS_CANCEL, string c_PAYMENT_STATUS_CASH_PAID, string c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED, string c_PAYMENT_STATUS_BILLING_EXEMPTION, string c_PAYMENT_STATUS_CHEQUE_PAID, string c_PAYMENT_STATUS_NOTE_MATCHED, string c_PAYMENT_STATUS_NOTE_ENCASHED, string c_PAYMENT_STATUS_NOTE_FAIL, string c_PAYMENT_STATUS_CASHIER_PAID, string c_PAYMENT_STATUS_POST_MATCHED, string c_PAYMENT_STATUS_POST_ENCASHED, string c_PAYMENT_STATUS_POST_FAIL, string c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID, string c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID, string c_PAYMENT_STATUS_POST_FAIL_BANK_PAID, string c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN, string c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND, string c_PAYMENT_STATUS_REFUND_PAID, ObjectParameter totalRow, ObjectParameter completedRow)
        {
    
            ObjectParameter c_PAYMENT_STATUS_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_BANK_PAID", c_PAYMENT_STATUS_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_BANK_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_AUTO_PAIDParameter;
    
            if (c_PAYMENT_STATUS_AUTO_PAID != null)
            {
                c_PAYMENT_STATUS_AUTO_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_PAID", c_PAYMENT_STATUS_AUTO_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_AUTO_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CANCELParameter;
    
            if (c_PAYMENT_STATUS_CANCEL != null)
            {
                c_PAYMENT_STATUS_CANCELParameter = new ObjectParameter("C_PAYMENT_STATUS_CANCEL", c_PAYMENT_STATUS_CANCEL);
            }
            else
            {
                c_PAYMENT_STATUS_CANCELParameter = new ObjectParameter("C_PAYMENT_STATUS_CANCEL", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CASH_PAIDParameter;
    
            if (c_PAYMENT_STATUS_CASH_PAID != null)
            {
                c_PAYMENT_STATUS_CASH_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASH_PAID", c_PAYMENT_STATUS_CASH_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_CASH_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASH_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter;
    
            if (c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED != null)
            {
                c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED", c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED);
            }
            else
            {
                c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_BILLING_EXEMPTIONParameter;
    
            if (c_PAYMENT_STATUS_BILLING_EXEMPTION != null)
            {
                c_PAYMENT_STATUS_BILLING_EXEMPTIONParameter = new ObjectParameter("C_PAYMENT_STATUS_BILLING_EXEMPTION", c_PAYMENT_STATUS_BILLING_EXEMPTION);
            }
            else
            {
                c_PAYMENT_STATUS_BILLING_EXEMPTIONParameter = new ObjectParameter("C_PAYMENT_STATUS_BILLING_EXEMPTION", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CHEQUE_PAIDParameter;
    
            if (c_PAYMENT_STATUS_CHEQUE_PAID != null)
            {
                c_PAYMENT_STATUS_CHEQUE_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CHEQUE_PAID", c_PAYMENT_STATUS_CHEQUE_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_CHEQUE_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CHEQUE_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_MATCHEDParameter;
    
            if (c_PAYMENT_STATUS_NOTE_MATCHED != null)
            {
                c_PAYMENT_STATUS_NOTE_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_MATCHED", c_PAYMENT_STATUS_NOTE_MATCHED);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_MATCHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_ENCASHEDParameter;
    
            if (c_PAYMENT_STATUS_NOTE_ENCASHED != null)
            {
                c_PAYMENT_STATUS_NOTE_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_ENCASHED", c_PAYMENT_STATUS_NOTE_ENCASHED);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_ENCASHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_FAILParameter;
    
            if (c_PAYMENT_STATUS_NOTE_FAIL != null)
            {
                c_PAYMENT_STATUS_NOTE_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL", c_PAYMENT_STATUS_NOTE_FAIL);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_CASHIER_PAIDParameter;
    
            if (c_PAYMENT_STATUS_CASHIER_PAID != null)
            {
                c_PAYMENT_STATUS_CASHIER_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASHIER_PAID", c_PAYMENT_STATUS_CASHIER_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_CASHIER_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_CASHIER_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_MATCHEDParameter;
    
            if (c_PAYMENT_STATUS_POST_MATCHED != null)
            {
                c_PAYMENT_STATUS_POST_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_MATCHED", c_PAYMENT_STATUS_POST_MATCHED);
            }
            else
            {
                c_PAYMENT_STATUS_POST_MATCHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_MATCHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_ENCASHEDParameter;
    
            if (c_PAYMENT_STATUS_POST_ENCASHED != null)
            {
                c_PAYMENT_STATUS_POST_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_ENCASHED", c_PAYMENT_STATUS_POST_ENCASHED);
            }
            else
            {
                c_PAYMENT_STATUS_POST_ENCASHEDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_ENCASHED", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_FAILParameter;
    
            if (c_PAYMENT_STATUS_POST_FAIL != null)
            {
                c_PAYMENT_STATUS_POST_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL", c_PAYMENT_STATUS_POST_FAIL);
            }
            else
            {
                c_PAYMENT_STATUS_POST_FAILParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID", c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_AUTO_FAIL_BANK_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID", c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_FAIL_BANK_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter;
    
            if (c_PAYMENT_STATUS_POST_FAIL_BANK_PAID != null)
            {
                c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL_BANK_PAID", c_PAYMENT_STATUS_POST_FAIL_BANK_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_FAIL_BANK_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter;
    
            if (c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN != null)
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN", c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_CN", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter;
    
            if (c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND != null)
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND", c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND);
            }
            else
            {
                c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter = new ObjectParameter("C_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUND", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_REFUND_PAIDParameter;
    
            if (c_PAYMENT_STATUS_REFUND_PAID != null)
            {
                c_PAYMENT_STATUS_REFUND_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_REFUND_PAID", c_PAYMENT_STATUS_REFUND_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_REFUND_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_REFUND_PAID", typeof(string));
            }
            return base.ExecuteFunction("BatchDeleteDebtTracing", c_PAYMENT_STATUS_BANK_PAIDParameter, c_PAYMENT_STATUS_AUTO_PAIDParameter, c_PAYMENT_STATUS_CANCELParameter, c_PAYMENT_STATUS_CASH_PAIDParameter, c_PAYMENT_STATUS_PAYMENT_MATCH_CANCELLEDParameter, c_PAYMENT_STATUS_BILLING_EXEMPTIONParameter, c_PAYMENT_STATUS_CHEQUE_PAIDParameter, c_PAYMENT_STATUS_NOTE_MATCHEDParameter, c_PAYMENT_STATUS_NOTE_ENCASHEDParameter, c_PAYMENT_STATUS_NOTE_FAILParameter, c_PAYMENT_STATUS_CASHIER_PAIDParameter, c_PAYMENT_STATUS_POST_MATCHEDParameter, c_PAYMENT_STATUS_POST_ENCASHEDParameter, c_PAYMENT_STATUS_POST_FAILParameter, c_PAYMENT_STATUS_AUTO_FAIL_BANK_PAIDParameter, c_PAYMENT_STATUS_NOTE_FAIL_BANK_PAIDParameter, c_PAYMENT_STATUS_POST_FAIL_BANK_PAIDParameter, c_PAYMENT_STATUS_PAID_WITH_PARTIAL_CNParameter, c_PAYMENT_STATUS_PAID_WITH_PARTIAL_REFUNDParameter, c_PAYMENT_STATUS_REFUND_PAIDParameter, totalRow, completedRow);
        }
        public ObjectResult<tbt_MoneyCollectionInfo> GetTbt_MoneyCollectionInfo(string receiptNo)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
            return base.ExecuteFunction<tbt_MoneyCollectionInfo>("GetTbt_MoneyCollectionInfo", receiptNoParameter);
        }
        public int CheckInvoiceIssuedReceipt(string invoiceNo, Nullable<int> invoiceOCC, ObjectParameter isIssued)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
            return base.ExecuteFunction("CheckInvoiceIssuedReceipt", invoiceNoParameter, invoiceOCCParameter, isIssued);
        }
        public ObjectResult<tbt_Receipt> CancelReceipt(string receiptNo, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Receipt>("CancelReceipt", receiptNoParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<doReceipt> GetReceiptIncludeCancel(string receiptNo)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
            return base.ExecuteFunction<doReceipt>("GetReceiptIncludeCancel", receiptNoParameter);
        }
        public ObjectResult<doMatchPaymentHeader> GetMatchPaymentHeaderByInvoice(string invoiceNo, Nullable<int> invoiceOCC)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
            return base.ExecuteFunction<doMatchPaymentHeader>("GetMatchPaymentHeaderByInvoice", invoiceNoParameter, invoiceOCCParameter);
        }
        public ObjectResult<doMatchPaymentDetail> GetMatchPaymentHeaderByInvoiceDetail(string matchId)
        {
    
            ObjectParameter matchIdParameter;
    
            if (matchId != null)
            {
                matchIdParameter = new ObjectParameter("MatchId", matchId);
            }
            else
            {
                matchIdParameter = new ObjectParameter("MatchId", typeof(string));
            }
            return base.ExecuteFunction<doMatchPaymentDetail>("GetMatchPaymentHeaderByInvoiceDetail", matchIdParameter);
        }
        public ObjectResult<tbt_MatchPaymentHeader> UpdateTbt_MatchPaymentHeader(string xmlTbt_MatchPaymentHeader)
        {
    
            ObjectParameter xmlTbt_MatchPaymentHeaderParameter;
    
            if (xmlTbt_MatchPaymentHeader != null)
            {
                xmlTbt_MatchPaymentHeaderParameter = new ObjectParameter("xmlTbt_MatchPaymentHeader", xmlTbt_MatchPaymentHeader);
            }
            else
            {
                xmlTbt_MatchPaymentHeaderParameter = new ObjectParameter("xmlTbt_MatchPaymentHeader", typeof(string));
            }
            return base.ExecuteFunction<tbt_MatchPaymentHeader>("UpdateTbt_MatchPaymentHeader", xmlTbt_MatchPaymentHeaderParameter);
        }
        public ObjectResult<tbt_MatchPaymentDetail> UpdateTbt_MatchPaymentDetail(string xmlTbt_MatchPaymentDetail)
        {
    
            ObjectParameter xmlTbt_MatchPaymentDetailParameter;
    
            if (xmlTbt_MatchPaymentDetail != null)
            {
                xmlTbt_MatchPaymentDetailParameter = new ObjectParameter("xmlTbt_MatchPaymentDetail", xmlTbt_MatchPaymentDetail);
            }
            else
            {
                xmlTbt_MatchPaymentDetailParameter = new ObjectParameter("xmlTbt_MatchPaymentDetail", typeof(string));
            }
            return base.ExecuteFunction<tbt_MatchPaymentDetail>("UpdateTbt_MatchPaymentDetail", xmlTbt_MatchPaymentDetailParameter);
        }
        public ObjectResult<doGetUnpaidInvoiceDebtSummaryByBillingTarget> GetUnpaidInvoiceDebtSummaryByInvoiceNo(string strInvoiceNo, string c_PAYMENT_STATUS, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter strInvoiceNoParameter;
    
            if (strInvoiceNo != null)
            {
                strInvoiceNoParameter = new ObjectParameter("strInvoiceNo", strInvoiceNo);
            }
            else
            {
                strInvoiceNoParameter = new ObjectParameter("strInvoiceNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUSParameter;
    
            if (c_PAYMENT_STATUS != null)
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", c_PAYMENT_STATUS);
            }
            else
            {
                c_PAYMENT_STATUSParameter = new ObjectParameter("C_PAYMENT_STATUS", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidInvoiceDebtSummaryByBillingTarget>("GetUnpaidInvoiceDebtSummaryByInvoiceNo", strInvoiceNoParameter, c_PAYMENT_STATUSParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<doRptCreditNote> GetRptCreditNote(string creditNoteNo)
        {
    
            ObjectParameter creditNoteNoParameter;
    
            if (creditNoteNo != null)
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", creditNoteNo);
            }
            else
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", typeof(string));
            }
            return base.ExecuteFunction<doRptCreditNote>("GetRptCreditNote", creditNoteNoParameter);
        }
        public ObjectResult<Nullable<int>> GetWorkingDayNoOfMonth(Nullable<System.DateTime> getNextWorkingDay)
        {
    
            ObjectParameter getNextWorkingDayParameter;
    
            if (getNextWorkingDay.HasValue)
            {
                getNextWorkingDayParameter = new ObjectParameter("getNextWorkingDay", getNextWorkingDay);
            }
            else
            {
                getNextWorkingDayParameter = new ObjectParameter("getNextWorkingDay", typeof(System.DateTime));
            }
            return base.ExecuteFunction<Nullable<int>>("GetWorkingDayNoOfMonth", getNextWorkingDayParameter);
        }
        public ObjectResult<doValidateWholeFile> ValidateWholeFile(Nullable<System.Guid> importID)
        {
    
            ObjectParameter importIDParameter;
    
            if (importID.HasValue)
            {
                importIDParameter = new ObjectParameter("importID", importID);
            }
            else
            {
                importIDParameter = new ObjectParameter("importID", typeof(System.Guid));
            }
            return base.ExecuteFunction<doValidateWholeFile>("ValidateWholeFile", importIDParameter);
        }
        public ObjectResult<doInvoicePaymentMatchingList> GetInvoicePaymentMatchingList(string paymentTransNo)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
            return base.ExecuteFunction<doInvoicePaymentMatchingList>("GetInvoicePaymentMatchingList", paymentTransNoParameter);
        }
        public ObjectResult<doUnpaidBillingTarget> GetUnpaidBillingTargetByCustomerCode(string custCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN)
        {
    
            ObjectParameter custCodeParameter;
    
            if (custCode != null)
            {
                custCodeParameter = new ObjectParameter("CustCode", custCode);
            }
            else
            {
                custCodeParameter = new ObjectParameter("CustCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
            return base.ExecuteFunction<doUnpaidBillingTarget>("GetUnpaidBillingTargetByCustomerCode", custCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter);
        }
        public ObjectResult<tbt_Receipt> UpdateTbt_Receipt(string xml_doTbtReceipt)
        {
    
            ObjectParameter xml_doTbtReceiptParameter;
    
            if (xml_doTbtReceipt != null)
            {
                xml_doTbtReceiptParameter = new ObjectParameter("xml_doTbtReceipt", xml_doTbtReceipt);
            }
            else
            {
                xml_doTbtReceiptParameter = new ObjectParameter("xml_doTbtReceipt", typeof(string));
            }
            return base.ExecuteFunction<tbt_Receipt>("UpdateTbt_Receipt", xml_doTbtReceiptParameter);
        }
        public ObjectResult<tbt_Payment> UpdatePaymentEncashFlag(string paymentTransNo, Nullable<byte> encahsedFlag, Nullable<System.DateTime> chequeReturnDate, string chequeReturnReason, string chequeReturnRemark, string chequeEncashRemark, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter encahsedFlagParameter;
    
            if (encahsedFlag.HasValue)
            {
                encahsedFlagParameter = new ObjectParameter("EncahsedFlag", encahsedFlag);
            }
            else
            {
                encahsedFlagParameter = new ObjectParameter("EncahsedFlag", typeof(byte));
            }
    
            ObjectParameter chequeReturnDateParameter;
    
            if (chequeReturnDate.HasValue)
            {
                chequeReturnDateParameter = new ObjectParameter("ChequeReturnDate", chequeReturnDate);
            }
            else
            {
                chequeReturnDateParameter = new ObjectParameter("ChequeReturnDate", typeof(System.DateTime));
            }
    
            ObjectParameter chequeReturnReasonParameter;
    
            if (chequeReturnReason != null)
            {
                chequeReturnReasonParameter = new ObjectParameter("ChequeReturnReason", chequeReturnReason);
            }
            else
            {
                chequeReturnReasonParameter = new ObjectParameter("ChequeReturnReason", typeof(string));
            }
    
            ObjectParameter chequeReturnRemarkParameter;
    
            if (chequeReturnRemark != null)
            {
                chequeReturnRemarkParameter = new ObjectParameter("ChequeReturnRemark", chequeReturnRemark);
            }
            else
            {
                chequeReturnRemarkParameter = new ObjectParameter("ChequeReturnRemark", typeof(string));
            }
    
            ObjectParameter chequeEncashRemarkParameter;
    
            if (chequeEncashRemark != null)
            {
                chequeEncashRemarkParameter = new ObjectParameter("ChequeEncashRemark", chequeEncashRemark);
            }
            else
            {
                chequeEncashRemarkParameter = new ObjectParameter("ChequeEncashRemark", typeof(string));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Payment>("UpdatePaymentEncashFlag", paymentTransNoParameter, encahsedFlagParameter, chequeReturnDateParameter, chequeReturnReasonParameter, chequeReturnRemarkParameter, chequeEncashRemarkParameter, updateByParameter, updateDateParameter);
        }
        public int CheckCancelTaxInvoiceOption(string invoiceNo, Nullable<int> invoiceOCC, ObjectParameter isCancelTaxInvoiceOption)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
            return base.ExecuteFunction("CheckCancelTaxInvoiceOption", invoiceNoParameter, invoiceOCCParameter, isCancelTaxInvoiceOption);
        }
        public int CheckCanRegisterCreditNote(string taxInvoiceNo, ObjectParameter isCanRegisterCN)
        {
    
            ObjectParameter taxInvoiceNoParameter;
    
            if (taxInvoiceNo != null)
            {
                taxInvoiceNoParameter = new ObjectParameter("TaxInvoiceNo", taxInvoiceNo);
            }
            else
            {
                taxInvoiceNoParameter = new ObjectParameter("TaxInvoiceNo", typeof(string));
            }
            return base.ExecuteFunction("CheckCanRegisterCreditNote", taxInvoiceNoParameter, isCanRegisterCN);
        }
        public ObjectResult<Nullable<decimal>> GetTotalCreditAmtIncVAT(string taxInvoiceNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter taxInvoiceNoParameter;
    
            if (taxInvoiceNo != null)
            {
                taxInvoiceNoParameter = new ObjectParameter("TaxInvoiceNo", taxInvoiceNo);
            }
            else
            {
                taxInvoiceNoParameter = new ObjectParameter("TaxInvoiceNo", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<Nullable<decimal>>("GetTotalCreditAmtIncVAT", taxInvoiceNoParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public int CheckDepositStatusReturn(string creditNoteNo, ObjectParameter isStatusReturn)
        {
    
            ObjectParameter creditNoteNoParameter;
    
            if (creditNoteNo != null)
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", creditNoteNo);
            }
            else
            {
                creditNoteNoParameter = new ObjectParameter("CreditNoteNo", typeof(string));
            }
            return base.ExecuteFunction("CheckDepositStatusReturn", creditNoteNoParameter, isStatusReturn);
        }
        public ObjectResult<doPaymentForWHT> SearchPaymentForWHT(Nullable<System.DateTime> paymentDateFrom, Nullable<System.DateTime> paymentDateTo, string paymentTransNo, string payerName, string vATRegistantName, string invoiceNo, string contractCode, string wHTNo, string iDNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter paymentDateFromParameter;
    
            if (paymentDateFrom.HasValue)
            {
                paymentDateFromParameter = new ObjectParameter("PaymentDateFrom", paymentDateFrom);
            }
            else
            {
                paymentDateFromParameter = new ObjectParameter("PaymentDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter paymentDateToParameter;
    
            if (paymentDateTo.HasValue)
            {
                paymentDateToParameter = new ObjectParameter("PaymentDateTo", paymentDateTo);
            }
            else
            {
                paymentDateToParameter = new ObjectParameter("PaymentDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter payerNameParameter;
    
            if (payerName != null)
            {
                payerNameParameter = new ObjectParameter("PayerName", payerName);
            }
            else
            {
                payerNameParameter = new ObjectParameter("PayerName", typeof(string));
            }
    
            ObjectParameter vATRegistantNameParameter;
    
            if (vATRegistantName != null)
            {
                vATRegistantNameParameter = new ObjectParameter("VATRegistantName", vATRegistantName);
            }
            else
            {
                vATRegistantNameParameter = new ObjectParameter("VATRegistantName", typeof(string));
            }
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter contractCodeParameter;
    
            if (contractCode != null)
            {
                contractCodeParameter = new ObjectParameter("ContractCode", contractCode);
            }
            else
            {
                contractCodeParameter = new ObjectParameter("ContractCode", typeof(string));
            }
    
            ObjectParameter wHTNoParameter;
    
            if (wHTNo != null)
            {
                wHTNoParameter = new ObjectParameter("WHTNo", wHTNo);
            }
            else
            {
                wHTNoParameter = new ObjectParameter("WHTNo", typeof(string));
            }
    
            ObjectParameter iDNoParameter;
    
            if (iDNo != null)
            {
                iDNoParameter = new ObjectParameter("IDNo", iDNo);
            }
            else
            {
                iDNoParameter = new ObjectParameter("IDNo", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doPaymentForWHT>("SearchPaymentForWHT", paymentDateFromParameter, paymentDateToParameter, paymentTransNoParameter, payerNameParameter, vATRegistantNameParameter, invoiceNoParameter, contractCodeParameter, wHTNoParameter, iDNoParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<tbt_IncomeWHT> GetTbt_IncomeWHT(string wHTNo)
        {
    
            ObjectParameter wHTNoParameter;
    
            if (wHTNo != null)
            {
                wHTNoParameter = new ObjectParameter("WHTNo", wHTNo);
            }
            else
            {
                wHTNoParameter = new ObjectParameter("WHTNo", typeof(string));
            }
            return base.ExecuteFunction<tbt_IncomeWHT>("GetTbt_IncomeWHT", wHTNoParameter);
        }
        public ObjectResult<doMatchWHTDetail> GetMatchWHTDetail(string wHTNo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter wHTNoParameter;
    
            if (wHTNo != null)
            {
                wHTNoParameter = new ObjectParameter("WHTNo", wHTNo);
            }
            else
            {
                wHTNoParameter = new ObjectParameter("WHTNo", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doMatchWHTDetail>("GetMatchWHTDetail", wHTNoParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<tbt_IncomeWHT> InsertTbt_IncomeWHT(string xml_table)
        {
    
            ObjectParameter xml_tableParameter;
    
            if (xml_table != null)
            {
                xml_tableParameter = new ObjectParameter("xml_table", xml_table);
            }
            else
            {
                xml_tableParameter = new ObjectParameter("xml_table", typeof(string));
            }
            return base.ExecuteFunction<tbt_IncomeWHT>("InsertTbt_IncomeWHT", xml_tableParameter);
        }
        public ObjectResult<tbt_IncomeWHT> UpdateTbt_IncomeWHT(string xml_table)
        {
    
            ObjectParameter xml_tableParameter;
    
            if (xml_table != null)
            {
                xml_tableParameter = new ObjectParameter("xml_table", xml_table);
            }
            else
            {
                xml_tableParameter = new ObjectParameter("xml_table", typeof(string));
            }
            return base.ExecuteFunction<tbt_IncomeWHT>("UpdateTbt_IncomeWHT", xml_tableParameter);
        }
        public ObjectResult<string> GenerateWHTNo(Nullable<System.DateTime> matchingDate)
        {
    
            ObjectParameter matchingDateParameter;
    
            if (matchingDate.HasValue)
            {
                matchingDateParameter = new ObjectParameter("MatchingDate", matchingDate);
            }
            else
            {
                matchingDateParameter = new ObjectParameter("MatchingDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<string>("GenerateWHTNo", matchingDateParameter);
        }
        public ObjectResult<tbt_Payment> UpdateWHTNoToPayment(string wHTNo, string paymentTransNo, string updateBy, Nullable<System.DateTime> updateDate)
        {
    
            ObjectParameter wHTNoParameter;
    
            if (wHTNo != null)
            {
                wHTNoParameter = new ObjectParameter("WHTNo", wHTNo);
            }
            else
            {
                wHTNoParameter = new ObjectParameter("WHTNo", typeof(string));
            }
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<tbt_Payment>("UpdateWHTNoToPayment", wHTNoParameter, paymentTransNoParameter, updateByParameter, updateDateParameter);
        }
        public ObjectResult<doIncomeWHT> SearchIncomeWHT(string wHTNo, string paymentTransNo, string payerName, string vATRegistantName, Nullable<System.DateTime> documentDateFrom, Nullable<System.DateTime> documentDateTo, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter wHTNoParameter;
    
            if (wHTNo != null)
            {
                wHTNoParameter = new ObjectParameter("WHTNo", wHTNo);
            }
            else
            {
                wHTNoParameter = new ObjectParameter("WHTNo", typeof(string));
            }
    
            ObjectParameter paymentTransNoParameter;
    
            if (paymentTransNo != null)
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", paymentTransNo);
            }
            else
            {
                paymentTransNoParameter = new ObjectParameter("PaymentTransNo", typeof(string));
            }
    
            ObjectParameter payerNameParameter;
    
            if (payerName != null)
            {
                payerNameParameter = new ObjectParameter("PayerName", payerName);
            }
            else
            {
                payerNameParameter = new ObjectParameter("PayerName", typeof(string));
            }
    
            ObjectParameter vATRegistantNameParameter;
    
            if (vATRegistantName != null)
            {
                vATRegistantNameParameter = new ObjectParameter("VATRegistantName", vATRegistantName);
            }
            else
            {
                vATRegistantNameParameter = new ObjectParameter("VATRegistantName", typeof(string));
            }
    
            ObjectParameter documentDateFromParameter;
    
            if (documentDateFrom.HasValue)
            {
                documentDateFromParameter = new ObjectParameter("DocumentDateFrom", documentDateFrom);
            }
            else
            {
                documentDateFromParameter = new ObjectParameter("DocumentDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter documentDateToParameter;
    
            if (documentDateTo.HasValue)
            {
                documentDateToParameter = new ObjectParameter("DocumentDateTo", documentDateTo);
            }
            else
            {
                documentDateToParameter = new ObjectParameter("DocumentDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doIncomeWHT>("SearchIncomeWHT", wHTNoParameter, paymentTransNoParameter, payerNameParameter, vATRegistantNameParameter, documentDateFromParameter, documentDateToParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doWHTReportForAccount> GetWHTReportForAccount(Nullable<System.DateTime> yearMonthFrom, Nullable<System.DateTime> yearMonthTo, string c_CURRENCY_LOCAL, string c_CURRECY_US)
        {
    
            ObjectParameter yearMonthFromParameter;
    
            if (yearMonthFrom.HasValue)
            {
                yearMonthFromParameter = new ObjectParameter("YearMonthFrom", yearMonthFrom);
            }
            else
            {
                yearMonthFromParameter = new ObjectParameter("YearMonthFrom", typeof(System.DateTime));
            }
    
            ObjectParameter yearMonthToParameter;
    
            if (yearMonthTo.HasValue)
            {
                yearMonthToParameter = new ObjectParameter("YearMonthTo", yearMonthTo);
            }
            else
            {
                yearMonthToParameter = new ObjectParameter("YearMonthTo", typeof(System.DateTime));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRECY_USParameter;
    
            if (c_CURRECY_US != null)
            {
                c_CURRECY_USParameter = new ObjectParameter("C_CURRECY_US", c_CURRECY_US);
            }
            else
            {
                c_CURRECY_USParameter = new ObjectParameter("C_CURRECY_US", typeof(string));
            }
            return base.ExecuteFunction<doWHTReportForAccount>("GetWHTReportForAccount", yearMonthFromParameter, yearMonthToParameter, c_CURRENCY_LOCALParameter, c_CURRECY_USParameter);
        }
        public ObjectResult<doWHTYearMonth> GetWHTYearMonth()
        {
            return base.ExecuteFunction<doWHTYearMonth>("GetWHTYearMonth");
        }
        public ObjectResult<doWHTReportForIMS> GetWHTReportForIMS(Nullable<System.DateTime> yearMonthFrom, Nullable<System.DateTime> yearMonthTo)
        {
    
            ObjectParameter yearMonthFromParameter;
    
            if (yearMonthFrom.HasValue)
            {
                yearMonthFromParameter = new ObjectParameter("YearMonthFrom", yearMonthFrom);
            }
            else
            {
                yearMonthFromParameter = new ObjectParameter("YearMonthFrom", typeof(System.DateTime));
            }
    
            ObjectParameter yearMonthToParameter;
    
            if (yearMonthTo.HasValue)
            {
                yearMonthToParameter = new ObjectParameter("YearMonthTo", yearMonthTo);
            }
            else
            {
                yearMonthToParameter = new ObjectParameter("YearMonthTo", typeof(System.DateTime));
            }
            return base.ExecuteFunction<doWHTReportForIMS>("GetWHTReportForIMS", yearMonthFromParameter, yearMonthToParameter);
        }
        public ObjectResult<doDebtTracingPermission> GetDebtTracingPermission(string empNo)
        {
    
            ObjectParameter empNoParameter;
    
            if (empNo != null)
            {
                empNoParameter = new ObjectParameter("EmpNo", empNo);
            }
            else
            {
                empNoParameter = new ObjectParameter("EmpNo", typeof(string));
            }
            return base.ExecuteFunction<doDebtTracingPermission>("GetDebtTracingPermission", empNoParameter);
        }
        public ObjectResult<doDebtTracingCustList> GetDebtTracingCustList(string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_PAYMENT_STATUS_NOTE_MATCHED_RETURN, string c_PAYMENT_STATUS_POST_MATCHED_RETURN, string empNo, string billingOfficeCode, string debtTracingSubStatusList, string contractCode, string billingClientName, string invoiceNo, Nullable<bool> firstFeeFlag)
        {
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_NOTE_MATCHED_RETURNParameter;
    
            if (c_PAYMENT_STATUS_NOTE_MATCHED_RETURN != null)
            {
                c_PAYMENT_STATUS_NOTE_MATCHED_RETURNParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_MATCHED_RETURN", c_PAYMENT_STATUS_NOTE_MATCHED_RETURN);
            }
            else
            {
                c_PAYMENT_STATUS_NOTE_MATCHED_RETURNParameter = new ObjectParameter("C_PAYMENT_STATUS_NOTE_MATCHED_RETURN", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_POST_MATCHED_RETURNParameter;
    
            if (c_PAYMENT_STATUS_POST_MATCHED_RETURN != null)
            {
                c_PAYMENT_STATUS_POST_MATCHED_RETURNParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_MATCHED_RETURN", c_PAYMENT_STATUS_POST_MATCHED_RETURN);
            }
            else
            {
                c_PAYMENT_STATUS_POST_MATCHED_RETURNParameter = new ObjectParameter("C_PAYMENT_STATUS_POST_MATCHED_RETURN", typeof(string));
            }
    
            ObjectParameter empNoParameter;
    
            if (empNo != null)
            {
                empNoParameter = new ObjectParameter("EmpNo", empNo);
            }
            else
            {
                empNoParameter = new ObjectParameter("EmpNo", typeof(string));
            }
    
            ObjectParameter billingOfficeCodeParameter;
    
            if (billingOfficeCode != null)
            {
                billingOfficeCodeParameter = new ObjectParameter("BillingOfficeCode", billingOfficeCode);
            }
            else
            {
                billingOfficeCodeParameter = new ObjectParameter("BillingOfficeCode", typeof(string));
            }
    
            ObjectParameter debtTracingSubStatusListParameter;
    
            if (debtTracingSubStatusList != null)
            {
                debtTracingSubStatusListParameter = new ObjectParameter("DebtTracingSubStatusList", debtTracingSubStatusList);
            }
            else
            {
                debtTracingSubStatusListParameter = new ObjectParameter("DebtTracingSubStatusList", typeof(string));
            }
    
            ObjectParameter contractCodeParameter;
    
            if (contractCode != null)
            {
                contractCodeParameter = new ObjectParameter("ContractCode", contractCode);
            }
            else
            {
                contractCodeParameter = new ObjectParameter("ContractCode", typeof(string));
            }
    
            ObjectParameter billingClientNameParameter;
    
            if (billingClientName != null)
            {
                billingClientNameParameter = new ObjectParameter("BillingClientName", billingClientName);
            }
            else
            {
                billingClientNameParameter = new ObjectParameter("BillingClientName", typeof(string));
            }
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter firstFeeFlagParameter;
    
            if (firstFeeFlag.HasValue)
            {
                firstFeeFlagParameter = new ObjectParameter("FirstFeeFlag", firstFeeFlag);
            }
            else
            {
                firstFeeFlagParameter = new ObjectParameter("FirstFeeFlag", typeof(bool));
            }
            return base.ExecuteFunction<doDebtTracingCustList>("GetDebtTracingCustList", c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_PAYMENT_STATUS_NOTE_MATCHED_RETURNParameter, c_PAYMENT_STATUS_POST_MATCHED_RETURNParameter, empNoParameter, billingOfficeCodeParameter, debtTracingSubStatusListParameter, contractCodeParameter, billingClientNameParameter, invoiceNoParameter, firstFeeFlagParameter);
        }
        public ObjectResult<doTbm_DebtTracingPermission> GetTbm_DebtTracingPermission(string empNo)
        {
    
            ObjectParameter empNoParameter;
    
            if (empNo != null)
            {
                empNoParameter = new ObjectParameter("EmpNo", empNo);
            }
            else
            {
                empNoParameter = new ObjectParameter("EmpNo", typeof(string));
            }
            return base.ExecuteFunction<doTbm_DebtTracingPermission>("GetTbm_DebtTracingPermission", empNoParameter);
        }
        public ObjectResult<doReturnedCheque> GetReturnedCheque(string billingTargetCode)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
            return base.ExecuteFunction<doReturnedCheque>("GetReturnedCheque", billingTargetCodeParameter);
        }
        public ObjectResult<doDebtTracingInvoiceList> GetDebtTracingInvoiceList(string billingTargetCode, string serviceTypeCode, string debtTracingSubStatus, string empNo)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
    
            ObjectParameter serviceTypeCodeParameter;
    
            if (serviceTypeCode != null)
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", serviceTypeCode);
            }
            else
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", typeof(string));
            }
    
            ObjectParameter debtTracingSubStatusParameter;
    
            if (debtTracingSubStatus != null)
            {
                debtTracingSubStatusParameter = new ObjectParameter("DebtTracingSubStatus", debtTracingSubStatus);
            }
            else
            {
                debtTracingSubStatusParameter = new ObjectParameter("DebtTracingSubStatus", typeof(string));
            }
    
            ObjectParameter empNoParameter;
    
            if (empNo != null)
            {
                empNoParameter = new ObjectParameter("EmpNo", empNo);
            }
            else
            {
                empNoParameter = new ObjectParameter("EmpNo", typeof(string));
            }
            return base.ExecuteFunction<doDebtTracingInvoiceList>("GetDebtTracingInvoiceList", billingTargetCodeParameter, serviceTypeCodeParameter, debtTracingSubStatusParameter, empNoParameter);
        }
        public ObjectResult<doDebtTracingInvoiceDetail> GetDebtTracingInvoiceDetail(string billingTargetCode, string invoiceNo, Nullable<int> invoiceOCC)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
            return base.ExecuteFunction<doDebtTracingInvoiceDetail>("GetDebtTracingInvoiceDetail", billingTargetCodeParameter, invoiceNoParameter, invoiceOCCParameter);
        }
        public ObjectResult<tbt_DebtTracingHistory> GetTbt_DebtTracingHistory(string billingTargetCode)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
            return base.ExecuteFunction<tbt_DebtTracingHistory>("GetTbt_DebtTracingHistory", billingTargetCodeParameter);
        }
        public ObjectResult<tbt_DebtTracingHistoryDetail> GetTbt_DebtTracingHistoryDetail(Nullable<int> historyID)
        {
    
            ObjectParameter historyIDParameter;
    
            if (historyID.HasValue)
            {
                historyIDParameter = new ObjectParameter("HistoryID", historyID);
            }
            else
            {
                historyIDParameter = new ObjectParameter("HistoryID", typeof(int));
            }
            return base.ExecuteFunction<tbt_DebtTracingHistoryDetail>("GetTbt_DebtTracingHistoryDetail", historyIDParameter);
        }
        public ObjectResult<tbt_DebtTracingHistory> InsertTbt_DebtTracingHistory(string xml)
        {
    
            ObjectParameter xmlParameter;
    
            if (xml != null)
            {
                xmlParameter = new ObjectParameter("xml", xml);
            }
            else
            {
                xmlParameter = new ObjectParameter("xml", typeof(string));
            }
            return base.ExecuteFunction<tbt_DebtTracingHistory>("InsertTbt_DebtTracingHistory", xmlParameter);
        }
        public ObjectResult<tbt_DebtTracingHistoryDetail> InsertTbt_DebtTracingHistoryDetail(string xml)
        {
    
            ObjectParameter xmlParameter;
    
            if (xml != null)
            {
                xmlParameter = new ObjectParameter("xml", xml);
            }
            else
            {
                xmlParameter = new ObjectParameter("xml", typeof(string));
            }
            return base.ExecuteFunction<tbt_DebtTracingHistoryDetail>("InsertTbt_DebtTracingHistoryDetail", xmlParameter);
        }
        public ObjectResult<tbt_DebtTracingCustCondition> GetTbt_DebtTracingCustCondition(string billingTargetCode)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
            return base.ExecuteFunction<tbt_DebtTracingCustCondition>("GetTbt_DebtTracingCustCondition", billingTargetCodeParameter);
        }
        public ObjectResult<tbt_DebtTracingCustCondition> UpdateTbt_DebtTracingCustCondition(string xml)
        {
    
            ObjectParameter xmlParameter;
    
            if (xml != null)
            {
                xmlParameter = new ObjectParameter("xml", xml);
            }
            else
            {
                xmlParameter = new ObjectParameter("xml", typeof(string));
            }
            return base.ExecuteFunction<tbt_DebtTracingCustCondition>("UpdateTbt_DebtTracingCustCondition", xmlParameter);
        }
        public ObjectResult<tbt_DebtTracingCustCondition> InsertTbt_DebtTracingCustCondition(string xml)
        {
    
            ObjectParameter xmlParameter;
    
            if (xml != null)
            {
                xmlParameter = new ObjectParameter("xml", xml);
            }
            else
            {
                xmlParameter = new ObjectParameter("xml", typeof(string));
            }
            return base.ExecuteFunction<tbt_DebtTracingCustCondition>("InsertTbt_DebtTracingCustCondition", xmlParameter);
        }
        public ObjectResult<doDebtTracingHistory> GetDebtTracingHistory(string billingTargetCode)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
            return base.ExecuteFunction<doDebtTracingHistory>("GetDebtTracingHistory", billingTargetCodeParameter);
        }
        public int CheckAllPaymentEncashed(string invoiceNo, Nullable<int> invoiceOCC, string c_PAYMENT_TYPE_PROMISSORY_NOTE, string c_PAYMENT_TYPE_CHEQUE_POST_DATED, ObjectParameter encashedFlag)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter invoiceOCCParameter;
    
            if (invoiceOCC.HasValue)
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", invoiceOCC);
            }
            else
            {
                invoiceOCCParameter = new ObjectParameter("InvoiceOCC", typeof(int));
            }
    
            ObjectParameter c_PAYMENT_TYPE_PROMISSORY_NOTEParameter;
    
            if (c_PAYMENT_TYPE_PROMISSORY_NOTE != null)
            {
                c_PAYMENT_TYPE_PROMISSORY_NOTEParameter = new ObjectParameter("C_PAYMENT_TYPE_PROMISSORY_NOTE", c_PAYMENT_TYPE_PROMISSORY_NOTE);
            }
            else
            {
                c_PAYMENT_TYPE_PROMISSORY_NOTEParameter = new ObjectParameter("C_PAYMENT_TYPE_PROMISSORY_NOTE", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_TYPE_CHEQUE_POST_DATEDParameter;
    
            if (c_PAYMENT_TYPE_CHEQUE_POST_DATED != null)
            {
                c_PAYMENT_TYPE_CHEQUE_POST_DATEDParameter = new ObjectParameter("C_PAYMENT_TYPE_CHEQUE_POST_DATED", c_PAYMENT_TYPE_CHEQUE_POST_DATED);
            }
            else
            {
                c_PAYMENT_TYPE_CHEQUE_POST_DATEDParameter = new ObjectParameter("C_PAYMENT_TYPE_CHEQUE_POST_DATED", typeof(string));
            }
            return base.ExecuteFunction("CheckAllPaymentEncashed", invoiceNoParameter, invoiceOCCParameter, c_PAYMENT_TYPE_PROMISSORY_NOTEParameter, c_PAYMENT_TYPE_CHEQUE_POST_DATEDParameter, encashedFlag);
        }
        public ObjectResult<doGenerateDebtTracingNotice> GenerateDebtTracingNotice(Nullable<System.DateTime> batchDate, string documentType, string serviceTypeCode, Nullable<System.DateTime> updateDate, string updateBy)
        {
    
            ObjectParameter batchDateParameter;
    
            if (batchDate.HasValue)
            {
                batchDateParameter = new ObjectParameter("BatchDate", batchDate);
            }
            else
            {
                batchDateParameter = new ObjectParameter("BatchDate", typeof(System.DateTime));
            }
    
            ObjectParameter documentTypeParameter;
    
            if (documentType != null)
            {
                documentTypeParameter = new ObjectParameter("DocumentType", documentType);
            }
            else
            {
                documentTypeParameter = new ObjectParameter("DocumentType", typeof(string));
            }
    
            ObjectParameter serviceTypeCodeParameter;
    
            if (serviceTypeCode != null)
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", serviceTypeCode);
            }
            else
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", typeof(string));
            }
    
            ObjectParameter updateDateParameter;
    
            if (updateDate.HasValue)
            {
                updateDateParameter = new ObjectParameter("UpdateDate", updateDate);
            }
            else
            {
                updateDateParameter = new ObjectParameter("UpdateDate", typeof(System.DateTime));
            }
    
            ObjectParameter updateByParameter;
    
            if (updateBy != null)
            {
                updateByParameter = new ObjectParameter("UpdateBy", updateBy);
            }
            else
            {
                updateByParameter = new ObjectParameter("UpdateBy", typeof(string));
            }
            return base.ExecuteFunction<doGenerateDebtTracingNotice>("GenerateDebtTracingNotice", batchDateParameter, documentTypeParameter, serviceTypeCodeParameter, updateDateParameter, updateByParameter);
        }
        public ObjectResult<doICR030> GetICR030(string documentNo, string c_DOC_LANG_ENG, string c_DOC_LANG_LOCAL, string c_SHOW_ISSUE_DATE_CHRISTIAN, string c_SHOW_ISSUE_DATE_BUDDHIST)
        {
    
            ObjectParameter documentNoParameter;
    
            if (documentNo != null)
            {
                documentNoParameter = new ObjectParameter("DocumentNo", documentNo);
            }
            else
            {
                documentNoParameter = new ObjectParameter("DocumentNo", typeof(string));
            }
    
            ObjectParameter c_DOC_LANG_ENGParameter;
    
            if (c_DOC_LANG_ENG != null)
            {
                c_DOC_LANG_ENGParameter = new ObjectParameter("C_DOC_LANG_ENG", c_DOC_LANG_ENG);
            }
            else
            {
                c_DOC_LANG_ENGParameter = new ObjectParameter("C_DOC_LANG_ENG", typeof(string));
            }
    
            ObjectParameter c_DOC_LANG_LOCALParameter;
    
            if (c_DOC_LANG_LOCAL != null)
            {
                c_DOC_LANG_LOCALParameter = new ObjectParameter("C_DOC_LANG_LOCAL", c_DOC_LANG_LOCAL);
            }
            else
            {
                c_DOC_LANG_LOCALParameter = new ObjectParameter("C_DOC_LANG_LOCAL", typeof(string));
            }
    
            ObjectParameter c_SHOW_ISSUE_DATE_CHRISTIANParameter;
    
            if (c_SHOW_ISSUE_DATE_CHRISTIAN != null)
            {
                c_SHOW_ISSUE_DATE_CHRISTIANParameter = new ObjectParameter("C_SHOW_ISSUE_DATE_CHRISTIAN", c_SHOW_ISSUE_DATE_CHRISTIAN);
            }
            else
            {
                c_SHOW_ISSUE_DATE_CHRISTIANParameter = new ObjectParameter("C_SHOW_ISSUE_DATE_CHRISTIAN", typeof(string));
            }
    
            ObjectParameter c_SHOW_ISSUE_DATE_BUDDHISTParameter;
    
            if (c_SHOW_ISSUE_DATE_BUDDHIST != null)
            {
                c_SHOW_ISSUE_DATE_BUDDHISTParameter = new ObjectParameter("C_SHOW_ISSUE_DATE_BUDDHIST", c_SHOW_ISSUE_DATE_BUDDHIST);
            }
            else
            {
                c_SHOW_ISSUE_DATE_BUDDHISTParameter = new ObjectParameter("C_SHOW_ISSUE_DATE_BUDDHIST", typeof(string));
            }
            return base.ExecuteFunction<doICR030>("GetICR030", documentNoParameter, c_DOC_LANG_ENGParameter, c_DOC_LANG_LOCALParameter, c_SHOW_ISSUE_DATE_CHRISTIANParameter, c_SHOW_ISSUE_DATE_BUDDHISTParameter);
        }
        public ObjectResult<doDebtTracingDocNoForPrinting> GetDebtTracingDocNoForPrinting(Nullable<System.DateTime> noticeDate, string serviceTypeCode)
        {
    
            ObjectParameter noticeDateParameter;
    
            if (noticeDate.HasValue)
            {
                noticeDateParameter = new ObjectParameter("NoticeDate", noticeDate);
            }
            else
            {
                noticeDateParameter = new ObjectParameter("NoticeDate", typeof(System.DateTime));
            }
    
            ObjectParameter serviceTypeCodeParameter;
    
            if (serviceTypeCode != null)
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", serviceTypeCode);
            }
            else
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", typeof(string));
            }
            return base.ExecuteFunction<doDebtTracingDocNoForPrinting>("GetDebtTracingDocNoForPrinting", noticeDateParameter, serviceTypeCodeParameter);
        }
        public int UpdateDebtTracingNoticePrintFlag(string docNoList)
        {
    
            ObjectParameter docNoListParameter;
    
            if (docNoList != null)
            {
                docNoListParameter = new ObjectParameter("DocNoList", docNoList);
            }
            else
            {
                docNoListParameter = new ObjectParameter("DocNoList", typeof(string));
            }
            return base.ExecuteFunction("UpdateDebtTracingNoticePrintFlag", docNoListParameter);
        }
        public ObjectResult<doDebtTracingDocNoForGenerate> GetDebtTracingDocNoForGenerate(Nullable<System.DateTime> noticeDate, string serviceTypeCode)
        {
    
            ObjectParameter noticeDateParameter;
    
            if (noticeDate.HasValue)
            {
                noticeDateParameter = new ObjectParameter("NoticeDate", noticeDate);
            }
            else
            {
                noticeDateParameter = new ObjectParameter("NoticeDate", typeof(System.DateTime));
            }
    
            ObjectParameter serviceTypeCodeParameter;
    
            if (serviceTypeCode != null)
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", serviceTypeCode);
            }
            else
            {
                serviceTypeCodeParameter = new ObjectParameter("ServiceTypeCode", typeof(string));
            }
            return base.ExecuteFunction<doDebtTracingDocNoForGenerate>("GetDebtTracingDocNoForGenerate", noticeDateParameter, serviceTypeCodeParameter);
        }
        public int UpdateDebtTracingNoticeGenerateFlag(string docNoList)
        {
    
            ObjectParameter docNoListParameter;
    
            if (docNoList != null)
            {
                docNoListParameter = new ObjectParameter("DocNoList", docNoList);
            }
            else
            {
                docNoListParameter = new ObjectParameter("DocNoList", typeof(string));
            }
            return base.ExecuteFunction("UpdateDebtTracingNoticeGenerateFlag", docNoListParameter);
        }
        public ObjectResult<doGetMatchGroupNamePayment> GetMatchGroupNamePayment(string empNo, Nullable<System.DateTime> paymentDate)
        {
    
            ObjectParameter empNoParameter;
    
            if (empNo != null)
            {
                empNoParameter = new ObjectParameter("empNo", empNo);
            }
            else
            {
                empNoParameter = new ObjectParameter("empNo", typeof(string));
            }
    
            ObjectParameter paymentDateParameter;
    
            if (paymentDate.HasValue)
            {
                paymentDateParameter = new ObjectParameter("paymentDate", paymentDate);
            }
            else
            {
                paymentDateParameter = new ObjectParameter("paymentDate", typeof(System.DateTime));
            }
            return base.ExecuteFunction<doGetMatchGroupNamePayment>("GetMatchGroupNamePayment", empNoParameter, paymentDateParameter);
        }
        public ObjectResult<doGetICR050> GetICR050(Nullable<System.DateTime> paymentDate, string groupname, string createBy)
        {
    
            ObjectParameter paymentDateParameter;
    
            if (paymentDate.HasValue)
            {
                paymentDateParameter = new ObjectParameter("paymentDate", paymentDate);
            }
            else
            {
                paymentDateParameter = new ObjectParameter("paymentDate", typeof(System.DateTime));
            }
    
            ObjectParameter groupnameParameter;
    
            if (groupname != null)
            {
                groupnameParameter = new ObjectParameter("groupname", groupname);
            }
            else
            {
                groupnameParameter = new ObjectParameter("groupname", typeof(string));
            }
    
            ObjectParameter createByParameter;
    
            if (createBy != null)
            {
                createByParameter = new ObjectParameter("CreateBy", createBy);
            }
            else
            {
                createByParameter = new ObjectParameter("CreateBy", typeof(string));
            }
            return base.ExecuteFunction<doGetICR050>("GetICR050", paymentDateParameter, groupnameParameter, createByParameter);
        }
        public ObjectResult<doGetBillingDetail> GetBillingDetail(string invoiceNo)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("invoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("invoiceNo", typeof(string));
            }
            return base.ExecuteFunction<doGetBillingDetail>("GetBillingDetail", invoiceNoParameter);
        }
        public ObjectResult<doGetRentalContractBasic> GetRentalContractBasic(string contractCode)
        {
    
            ObjectParameter contractCodeParameter;
    
            if (contractCode != null)
            {
                contractCodeParameter = new ObjectParameter("ContractCode", contractCode);
            }
            else
            {
                contractCodeParameter = new ObjectParameter("ContractCode", typeof(string));
            }
            return base.ExecuteFunction<doGetRentalContractBasic>("GetRentalContractBasic", contractCodeParameter);
        }
        public ObjectResult<doGetSaleBasic> GetSaleBasic(string contractCode)
        {
    
            ObjectParameter contractCodeParameter;
    
            if (contractCode != null)
            {
                contractCodeParameter = new ObjectParameter("ContractCode", contractCode);
            }
            else
            {
                contractCodeParameter = new ObjectParameter("ContractCode", typeof(string));
            }
            return base.ExecuteFunction<doGetSaleBasic>("GetSaleBasic", contractCodeParameter);
        }
        public ObjectResult<doGetICR050_Detail> GetICR050_Detail(string paymentNo)
        {
    
            ObjectParameter paymentNoParameter;
    
            if (paymentNo != null)
            {
                paymentNoParameter = new ObjectParameter("paymentNo", paymentNo);
            }
            else
            {
                paymentNoParameter = new ObjectParameter("paymentNo", typeof(string));
            }
            return base.ExecuteFunction<doGetICR050_Detail>("GetICR050_Detail", paymentNoParameter);
        }
        public ObjectResult<doGetAccountCode> GetAccountCode()
        {
            return base.ExecuteFunction<doGetAccountCode>("GetAccountCode");
        }
        public ObjectResult<doGetUnpaidBillingTargetByCodeWithExchange> GetUnpaidBillingTargetByCodeWithExchange(string billingTargetCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter billingTargetCodeParameter;
    
            if (billingTargetCode != null)
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", billingTargetCode);
            }
            else
            {
                billingTargetCodeParameter = new ObjectParameter("BillingTargetCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidBillingTargetByCodeWithExchange>("GetUnpaidBillingTargetByCodeWithExchange", billingTargetCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doGetUnpaidBillingTargetByCodeWithExchange> GetUnpaidBillingTargetByBillingCodeWithExchange(string billingCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter billingCodeParameter;
    
            if (billingCode != null)
            {
                billingCodeParameter = new ObjectParameter("BillingCode", billingCode);
            }
            else
            {
                billingCodeParameter = new ObjectParameter("BillingCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidBillingTargetByCodeWithExchange>("GetUnpaidBillingTargetByBillingCodeWithExchange", billingCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doGetUnpaidBillingTargetByCodeWithExchange> GetUnpaidBillingTargetByCustomerCodeWithExchange(string custCode, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter custCodeParameter;
    
            if (custCode != null)
            {
                custCodeParameter = new ObjectParameter("CustCode", custCode);
            }
            else
            {
                custCodeParameter = new ObjectParameter("CustCode", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidBillingTargetByCodeWithExchange>("GetUnpaidBillingTargetByCustomerCodeWithExchange", custCodeParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doGetUnpaidBillingTargetByCodeWithExchange> GetUnpaidBillingTargetByInvoiceNoWithExchange(string invoiceNo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter invoiceNoParameter;
    
            if (invoiceNo != null)
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", invoiceNo);
            }
            else
            {
                invoiceNoParameter = new ObjectParameter("InvoiceNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidBillingTargetByCodeWithExchange>("GetUnpaidBillingTargetByInvoiceNoWithExchange", invoiceNoParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doGetUnpaidBillingTargetByCodeWithExchange> GetUnpaidBillingTargetByReceiptNoWithExchange(string receiptNo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter receiptNoParameter;
    
            if (receiptNo != null)
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", receiptNo);
            }
            else
            {
                receiptNoParameter = new ObjectParameter("ReceiptNo", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidBillingTargetByCodeWithExchange>("GetUnpaidBillingTargetByReceiptNoWithExchange", receiptNoParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }
        public ObjectResult<doGetUnpaidBillingTargetByCodeWithExchange> SearchUnpaidBillingTargetWithExchange(string billingClientName, string invoiceAmountCurrencyType, Nullable<decimal> invoiceAmountFrom, Nullable<decimal> invoiceAmountTo, Nullable<System.DateTime> issueInvoiceDateFrom, Nullable<System.DateTime> issueInvoiceDateTo, Nullable<bool> haveCreditNoteIssued, string billingDetailAmountCurrencyType, Nullable<decimal> billingDetailAmountFrom, Nullable<decimal> billingDetailAmountTo, string billingType_ContractFee, string billingType_InstallationFee, string billingType_DepositFee, string billingType_SalePrice, string billingType_OtherFee, string paymentMethod_BankTransfer, string paymentMethod_Messenger, string paymentMethod_AutoTransfer, string paymentMethod_CreditCard, Nullable<int> billingCycle, Nullable<int> lastPaymentDayFrom, Nullable<int> lastPaymentDayTo, Nullable<System.DateTime> expectedPaymentDateFrom, Nullable<System.DateTime> expectedPaymentDateTo, string c_PAYMENT_STATUS_INV_BANK_COLLECT, string c_PAYMENT_STATUS_GEN_AUTO_CREDIT, string c_PAYMENT_STATUS_INV_AUTO_CREDIT, string c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK, string c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK, string c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK, string c_PAYMENT_STATUS_PARTIALLY_PAID, string c_PAYMENT_STATUS_PARTIALLY_PAID_CN, string c_CURRENCY_LOCAL, string c_CURRENCY_US)
        {
    
            ObjectParameter billingClientNameParameter;
    
            if (billingClientName != null)
            {
                billingClientNameParameter = new ObjectParameter("BillingClientName", billingClientName);
            }
            else
            {
                billingClientNameParameter = new ObjectParameter("BillingClientName", typeof(string));
            }
    
            ObjectParameter invoiceAmountCurrencyTypeParameter;
    
            if (invoiceAmountCurrencyType != null)
            {
                invoiceAmountCurrencyTypeParameter = new ObjectParameter("InvoiceAmountCurrencyType", invoiceAmountCurrencyType);
            }
            else
            {
                invoiceAmountCurrencyTypeParameter = new ObjectParameter("InvoiceAmountCurrencyType", typeof(string));
            }
    
            ObjectParameter invoiceAmountFromParameter;
    
            if (invoiceAmountFrom.HasValue)
            {
                invoiceAmountFromParameter = new ObjectParameter("InvoiceAmountFrom", invoiceAmountFrom);
            }
            else
            {
                invoiceAmountFromParameter = new ObjectParameter("InvoiceAmountFrom", typeof(decimal));
            }
    
            ObjectParameter invoiceAmountToParameter;
    
            if (invoiceAmountTo.HasValue)
            {
                invoiceAmountToParameter = new ObjectParameter("InvoiceAmountTo", invoiceAmountTo);
            }
            else
            {
                invoiceAmountToParameter = new ObjectParameter("InvoiceAmountTo", typeof(decimal));
            }
    
            ObjectParameter issueInvoiceDateFromParameter;
    
            if (issueInvoiceDateFrom.HasValue)
            {
                issueInvoiceDateFromParameter = new ObjectParameter("IssueInvoiceDateFrom", issueInvoiceDateFrom);
            }
            else
            {
                issueInvoiceDateFromParameter = new ObjectParameter("IssueInvoiceDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter issueInvoiceDateToParameter;
    
            if (issueInvoiceDateTo.HasValue)
            {
                issueInvoiceDateToParameter = new ObjectParameter("IssueInvoiceDateTo", issueInvoiceDateTo);
            }
            else
            {
                issueInvoiceDateToParameter = new ObjectParameter("IssueInvoiceDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter haveCreditNoteIssuedParameter;
    
            if (haveCreditNoteIssued.HasValue)
            {
                haveCreditNoteIssuedParameter = new ObjectParameter("HaveCreditNoteIssued", haveCreditNoteIssued);
            }
            else
            {
                haveCreditNoteIssuedParameter = new ObjectParameter("HaveCreditNoteIssued", typeof(bool));
            }
    
            ObjectParameter billingDetailAmountCurrencyTypeParameter;
    
            if (billingDetailAmountCurrencyType != null)
            {
                billingDetailAmountCurrencyTypeParameter = new ObjectParameter("BillingDetailAmountCurrencyType", billingDetailAmountCurrencyType);
            }
            else
            {
                billingDetailAmountCurrencyTypeParameter = new ObjectParameter("BillingDetailAmountCurrencyType", typeof(string));
            }
    
            ObjectParameter billingDetailAmountFromParameter;
    
            if (billingDetailAmountFrom.HasValue)
            {
                billingDetailAmountFromParameter = new ObjectParameter("BillingDetailAmountFrom", billingDetailAmountFrom);
            }
            else
            {
                billingDetailAmountFromParameter = new ObjectParameter("BillingDetailAmountFrom", typeof(decimal));
            }
    
            ObjectParameter billingDetailAmountToParameter;
    
            if (billingDetailAmountTo.HasValue)
            {
                billingDetailAmountToParameter = new ObjectParameter("BillingDetailAmountTo", billingDetailAmountTo);
            }
            else
            {
                billingDetailAmountToParameter = new ObjectParameter("BillingDetailAmountTo", typeof(decimal));
            }
    
            ObjectParameter billingType_ContractFeeParameter;
    
            if (billingType_ContractFee != null)
            {
                billingType_ContractFeeParameter = new ObjectParameter("BillingType_ContractFee", billingType_ContractFee);
            }
            else
            {
                billingType_ContractFeeParameter = new ObjectParameter("BillingType_ContractFee", typeof(string));
            }
    
            ObjectParameter billingType_InstallationFeeParameter;
    
            if (billingType_InstallationFee != null)
            {
                billingType_InstallationFeeParameter = new ObjectParameter("BillingType_InstallationFee", billingType_InstallationFee);
            }
            else
            {
                billingType_InstallationFeeParameter = new ObjectParameter("BillingType_InstallationFee", typeof(string));
            }
    
            ObjectParameter billingType_DepositFeeParameter;
    
            if (billingType_DepositFee != null)
            {
                billingType_DepositFeeParameter = new ObjectParameter("BillingType_DepositFee", billingType_DepositFee);
            }
            else
            {
                billingType_DepositFeeParameter = new ObjectParameter("BillingType_DepositFee", typeof(string));
            }
    
            ObjectParameter billingType_SalePriceParameter;
    
            if (billingType_SalePrice != null)
            {
                billingType_SalePriceParameter = new ObjectParameter("BillingType_SalePrice", billingType_SalePrice);
            }
            else
            {
                billingType_SalePriceParameter = new ObjectParameter("BillingType_SalePrice", typeof(string));
            }
    
            ObjectParameter billingType_OtherFeeParameter;
    
            if (billingType_OtherFee != null)
            {
                billingType_OtherFeeParameter = new ObjectParameter("BillingType_OtherFee", billingType_OtherFee);
            }
            else
            {
                billingType_OtherFeeParameter = new ObjectParameter("BillingType_OtherFee", typeof(string));
            }
    
            ObjectParameter paymentMethod_BankTransferParameter;
    
            if (paymentMethod_BankTransfer != null)
            {
                paymentMethod_BankTransferParameter = new ObjectParameter("PaymentMethod_BankTransfer", paymentMethod_BankTransfer);
            }
            else
            {
                paymentMethod_BankTransferParameter = new ObjectParameter("PaymentMethod_BankTransfer", typeof(string));
            }
    
            ObjectParameter paymentMethod_MessengerParameter;
    
            if (paymentMethod_Messenger != null)
            {
                paymentMethod_MessengerParameter = new ObjectParameter("PaymentMethod_Messenger", paymentMethod_Messenger);
            }
            else
            {
                paymentMethod_MessengerParameter = new ObjectParameter("PaymentMethod_Messenger", typeof(string));
            }
    
            ObjectParameter paymentMethod_AutoTransferParameter;
    
            if (paymentMethod_AutoTransfer != null)
            {
                paymentMethod_AutoTransferParameter = new ObjectParameter("PaymentMethod_AutoTransfer", paymentMethod_AutoTransfer);
            }
            else
            {
                paymentMethod_AutoTransferParameter = new ObjectParameter("PaymentMethod_AutoTransfer", typeof(string));
            }
    
            ObjectParameter paymentMethod_CreditCardParameter;
    
            if (paymentMethod_CreditCard != null)
            {
                paymentMethod_CreditCardParameter = new ObjectParameter("PaymentMethod_CreditCard", paymentMethod_CreditCard);
            }
            else
            {
                paymentMethod_CreditCardParameter = new ObjectParameter("PaymentMethod_CreditCard", typeof(string));
            }
    
            ObjectParameter billingCycleParameter;
    
            if (billingCycle.HasValue)
            {
                billingCycleParameter = new ObjectParameter("BillingCycle", billingCycle);
            }
            else
            {
                billingCycleParameter = new ObjectParameter("BillingCycle", typeof(int));
            }
    
            ObjectParameter lastPaymentDayFromParameter;
    
            if (lastPaymentDayFrom.HasValue)
            {
                lastPaymentDayFromParameter = new ObjectParameter("LastPaymentDayFrom", lastPaymentDayFrom);
            }
            else
            {
                lastPaymentDayFromParameter = new ObjectParameter("LastPaymentDayFrom", typeof(int));
            }
    
            ObjectParameter lastPaymentDayToParameter;
    
            if (lastPaymentDayTo.HasValue)
            {
                lastPaymentDayToParameter = new ObjectParameter("LastPaymentDayTo", lastPaymentDayTo);
            }
            else
            {
                lastPaymentDayToParameter = new ObjectParameter("LastPaymentDayTo", typeof(int));
            }
    
            ObjectParameter expectedPaymentDateFromParameter;
    
            if (expectedPaymentDateFrom.HasValue)
            {
                expectedPaymentDateFromParameter = new ObjectParameter("ExpectedPaymentDateFrom", expectedPaymentDateFrom);
            }
            else
            {
                expectedPaymentDateFromParameter = new ObjectParameter("ExpectedPaymentDateFrom", typeof(System.DateTime));
            }
    
            ObjectParameter expectedPaymentDateToParameter;
    
            if (expectedPaymentDateTo.HasValue)
            {
                expectedPaymentDateToParameter = new ObjectParameter("ExpectedPaymentDateTo", expectedPaymentDateTo);
            }
            else
            {
                expectedPaymentDateToParameter = new ObjectParameter("ExpectedPaymentDateTo", typeof(System.DateTime));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_BANK_COLLECTParameter;
    
            if (c_PAYMENT_STATUS_INV_BANK_COLLECT != null)
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", c_PAYMENT_STATUS_INV_BANK_COLLECT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_BANK_COLLECTParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_BANK_COLLECT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_GEN_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", c_PAYMENT_STATUS_GEN_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_GEN_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_INV_AUTO_CREDITParameter;
    
            if (c_PAYMENT_STATUS_INV_AUTO_CREDIT != null)
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", c_PAYMENT_STATUS_INV_AUTO_CREDIT);
            }
            else
            {
                c_PAYMENT_STATUS_INV_AUTO_CREDITParameter = new ObjectParameter("C_PAYMENT_STATUS_INV_AUTO_CREDIT", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", c_PAYMENT_STATUS_FAIL_AUTO_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_AUTO_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", c_PAYMENT_STATUS_FAIL_NOTE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_NOTE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter;
    
            if (c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK != null)
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK);
            }
            else
            {
                c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter = new ObjectParameter("C_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANK", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAIDParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", c_PAYMENT_STATUS_PARTIALLY_PAID);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAIDParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID", typeof(string));
            }
    
            ObjectParameter c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter;
    
            if (c_PAYMENT_STATUS_PARTIALLY_PAID_CN != null)
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", c_PAYMENT_STATUS_PARTIALLY_PAID_CN);
            }
            else
            {
                c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter = new ObjectParameter("C_PAYMENT_STATUS_PARTIALLY_PAID_CN", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_LOCALParameter;
    
            if (c_CURRENCY_LOCAL != null)
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", c_CURRENCY_LOCAL);
            }
            else
            {
                c_CURRENCY_LOCALParameter = new ObjectParameter("C_CURRENCY_LOCAL", typeof(string));
            }
    
            ObjectParameter c_CURRENCY_USParameter;
    
            if (c_CURRENCY_US != null)
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", c_CURRENCY_US);
            }
            else
            {
                c_CURRENCY_USParameter = new ObjectParameter("C_CURRENCY_US", typeof(string));
            }
            return base.ExecuteFunction<doGetUnpaidBillingTargetByCodeWithExchange>("SearchUnpaidBillingTargetWithExchange", billingClientNameParameter, invoiceAmountCurrencyTypeParameter, invoiceAmountFromParameter, invoiceAmountToParameter, issueInvoiceDateFromParameter, issueInvoiceDateToParameter, haveCreditNoteIssuedParameter, billingDetailAmountCurrencyTypeParameter, billingDetailAmountFromParameter, billingDetailAmountToParameter, billingType_ContractFeeParameter, billingType_InstallationFeeParameter, billingType_DepositFeeParameter, billingType_SalePriceParameter, billingType_OtherFeeParameter, paymentMethod_BankTransferParameter, paymentMethod_MessengerParameter, paymentMethod_AutoTransferParameter, paymentMethod_CreditCardParameter, billingCycleParameter, lastPaymentDayFromParameter, lastPaymentDayToParameter, expectedPaymentDateFromParameter, expectedPaymentDateToParameter, c_PAYMENT_STATUS_INV_BANK_COLLECTParameter, c_PAYMENT_STATUS_GEN_AUTO_CREDITParameter, c_PAYMENT_STATUS_INV_AUTO_CREDITParameter, c_PAYMENT_STATUS_FAIL_AUTO_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_NOTE_INV_BANKParameter, c_PAYMENT_STATUS_FAIL_CHEQUE_INV_BANKParameter, c_PAYMENT_STATUS_PARTIALLY_PAIDParameter, c_PAYMENT_STATUS_PARTIALLY_PAID_CNParameter, c_CURRENCY_LOCALParameter, c_CURRENCY_USParameter);
        }

        #endregion

    }
}
