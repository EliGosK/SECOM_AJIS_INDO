<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblTitleSpecifyContractCode" xml:space="preserve">
    <value>Specify contract no. / Quotation code</value>
  </data>
  <data name="lblApproveNo1" xml:space="preserve">
    <value>Approve no.1</value>
  </data>
  <data name="lblApproveNo2" xml:space="preserve">
    <value>Approve no.2</value>
  </data>
  <data name="lblApproveNo3" xml:space="preserve">
    <value>Approve no.3</value>
  </data>
  <data name="lblAttachDocument1" xml:space="preserve">
    <value>Attached document 1</value>
  </data>
  <data name="lblAttachDocument2" xml:space="preserve">
    <value>Attached document 2</value>
  </data>
  <data name="lblAttachDocument3" xml:space="preserve">
    <value>Attached document 3</value>
  </data>
  <data name="lblAttachDocument4" xml:space="preserve">
    <value>Attached document 4</value>
  </data>
  <data name="lblAttachDocument5" xml:space="preserve">
    <value>Attached document 5</value>
  </data>
  <data name="lblBillingCycle" xml:space="preserve">
    <value>Payment term</value>
  </data>
  <data name="lblBusinessType" xml:space="preserve">
    <value>Business category</value>
  </data>
  <data name="lblChangeType" xml:space="preserve">
    <value>Change type</value>
  </data>
  <data name="lblClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="lblContractReport" xml:space="preserve">
    <value>Contract report</value>
  </data>
  <data name="lblContractCode" xml:space="preserve">
    <value>Contract no.</value>
  </data>
  <data name="lblContractDocumentLanguage" xml:space="preserve">
    <value>Contract document language</value>
  </data>
  <data name="lblContractDocumentNo" xml:space="preserve">
    <value>Contract document no.</value>
  </data>
  <data name="lblContractDuration" xml:space="preserve">
    <value>Contract period</value>
  </data>
  <data name="lblContractFee" xml:space="preserve">
    <value>Service fee</value>
  </data>
  <data name="lblContractMemo" xml:space="preserve">
    <value>Contact memo</value>
  </data>
  <data name="lblContractQuotationTargetCode" xml:space="preserve">
    <value>Contract no./Quotation target code</value>
  </data>
  <data name="lblContractTargetNameEN" xml:space="preserve">
    <value>Customer name (English)</value>
  </data>
  <data name="lblContractTargetNameLC" xml:space="preserve">
    <value>Customer name (Local)</value>
  </data>
  <data name="lblCoverLetter" xml:space="preserve">
    <value>Cover letter (only)</value>
  </data>
  <data name="lblCreditTerm" xml:space="preserve">
    <value>Credit term</value>
  </data>
  <data name="lblCrimePrevention" xml:space="preserve">
    <value>Crime prevention</value>
  </data>
  <data name="lblDocumentName" xml:space="preserve">
    <value>Document name</value>
  </data>
  <data name="lblEmergencyReport" xml:space="preserve">
    <value>Emergency report</value>
  </data>
  <data name="lblFacilityMonitoring" xml:space="preserve">
    <value>Facility monitoring</value>
  </data>
  <data name="lblFireMonitoring" xml:space="preserve">
    <value>Fire monitoring</value>
  </data>
  <data name="lblInstrumentCode" xml:space="preserve">
    <value>Equipment code</value>
  </data>
  <data name="lblIssueOffice" xml:space="preserve">
    <value>Issue office</value>
  </data>
  <data name="lblIssuePerson" xml:space="preserve">
    <value>Issue person</value>
  </data>
  <data name="lblLineType" xml:space="preserve">
    <value>Line type</value>
  </data>
  <data name="lblMemorandum" xml:space="preserve">
    <value>Memorandum</value>
  </data>
  <data name="lblNotice" xml:space="preserve">
    <value>Notice</value>
  </data>
  <data name="lblOCC" xml:space="preserve">
    <value>OCC</value>
  </data>
  <data name="lblOccurrenceAlphabet" xml:space="preserve">
    <value>Occurrence/Alphabet</value>
  </data>
  <data name="lblOldContract" xml:space="preserve">
    <value>Old contract</value>
  </data>
  <data name="lblOperationOffice" xml:space="preserve">
    <value>Operation office</value>
  </data>
  <data name="lblPaymentMethod" xml:space="preserve">
    <value>Payment method</value>
  </data>
  <data name="lblProduct" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="lblProvidedServiceType" xml:space="preserve">
    <value>Provided service type</value>
  </data>
  <data name="lblQuantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="lblQuotationFee" xml:space="preserve">
    <value>Quotation fee</value>
  </data>
  <data name="lblRealCustomerNameEN" xml:space="preserve">
    <value>Real customer (End user) name (English)</value>
  </data>
  <data name="lblRealCustomerNameLC" xml:space="preserve">
    <value>Real customer (End user) name (Local)</value>
  </data>
  <data name="lblReceivedDepositFee" xml:space="preserve">
    <value>Order deposit fee</value>
  </data>
  <data name="lblRegisterNextContractDocument" xml:space="preserve">
    <value>Register next contract document</value>
  </data>
  <data name="lblRelatedOCCIncidentNo1" xml:space="preserve">
    <value>Related OCC/Incident no. 1</value>
  </data>
  <data name="lblRelatedOCCIncidentNo2" xml:space="preserve">
    <value>Related OCC/Incident no. 2</value>
  </data>
  <data name="lblRetrieve" xml:space="preserve">
    <value>Retrieve</value>
  </data>
  <data name="lblSelect" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="lblShowSignature" xml:space="preserve">
    <value>Show signature</value>
  </data>
  <data name="lblSiteNameEN" xml:space="preserve">
    <value>Premise’s name (English)</value>
  </data>
  <data name="lblSiteNameLC" xml:space="preserve">
    <value>Premise’s name (Local)</value>
  </data>
  <data name="lblSubject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="lblTelephoneOwner" xml:space="preserve">
    <value>Telephone owner</value>
  </data>
  <data name="lblTitleCoverLetterInformation" xml:space="preserve">
    <value>Cover letter information</value>
  </data>
  <data name="lblTitleDocumentTemplate" xml:space="preserve">
    <value>Document template</value>
  </data>
  <data name="lblTitleResultOfRegister" xml:space="preserve">
    <value>Result of register generate contract document</value>
  </data>
  <data name="lblUsage" xml:space="preserve">
    <value>Premise’s type</value>
  </data>
  <data name="headerInstrumentCode" xml:space="preserve">
    <value>Equipment code</value>
  </data>
  <data name="headerQuantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
</root>