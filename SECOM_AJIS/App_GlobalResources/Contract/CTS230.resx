<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="headerAttachedDocumentList" xml:space="preserve">
    <value>Attached document list</value>
  </data>
  <data name="headerExpectedInstrumentDetail" xml:space="preserve">
    <value>Expected equipment detail</value>
  </data>
  <data name="headerOtherProjectRelatedCompanyPerson" xml:space="preserve">
    <value>Other project related company/person</value>
  </data>
  <data name="headerOtherProjectRelatedCompanyPersonInformation" xml:space="preserve">
    <value>Other project related company/person information</value>
  </data>
  <data name="headerProjectInformation" xml:space="preserve">
    <value>Project information</value>
  </data>
  <data name="headerProjectManagementCompany" xml:space="preserve">
    <value>Project management company</value>
  </data>
  <data name="headerProjectOwner" xml:space="preserve">
    <value>Project owner</value>
  </data>
  <data name="headerProjectPurchaser" xml:space="preserve">
    <value>Project customer</value>
  </data>
  <data name="headerResultOfRegisterNewProject" xml:space="preserve">
    <value>Result of register new project</value>
  </data>
  <data name="headerSecomInformation" xml:space="preserve">
    <value>SECOM information</value>
  </data>
  <data name="headerSpecifyCode" xml:space="preserve">
    <value>Specify code</value>
  </data>
  <data name="headerSupportStaff" xml:space="preserve">
    <value>Support staff</value>
  </data>
  <data name="headerSystemProduct" xml:space="preserve">
    <value>System (product)</value>
  </data>
  <data name="HgridBelonging" xml:space="preserve">
    <value>Belonging</value>
  </data>
  <data name="HgridCompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="HgridContactTelephoneNo" xml:space="preserve">
    <value>Contact telephone no.</value>
  </data>
  <data name="HgridDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="HgridDocumentName" xml:space="preserve">
    <value>Document name</value>
  </data>
  <data name="HgridEdit" xml:space="preserve">
    <value>&lt;div style="display:none"&gt;Edit&lt;/div&gt;</value>
  </data>
  <data name="HgridInstrumentCode" xml:space="preserve">
    <value>Equipment code</value>
  </data>
  <data name="HgridInstrumentName" xml:space="preserve">
    <value>Equipment name</value>
  </data>
  <data name="HgridName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="HgridQuantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="HgridRemark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="HgridRemove" xml:space="preserve">
    <value>&lt;div style="display:none"&gt;Remove&lt;/div&gt;</value>
  </data>
  <data name="HgridSupportStaffEmployeeNo" xml:space="preserve">
    <value>Employee no.</value>
  </data>
  <data name="HgridSupportStaffName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="HgridSystemProduct" xml:space="preserve">
    <value>System (product) name</value>
  </data>
  <data name="lblAddressEnglish" xml:space="preserve">
    <value>Address (English)</value>
  </data>
  <data name="lblAddressLocal" xml:space="preserve">
    <value>Address (Local)</value>
  </data>
  <data name="lblAttachedDocument" xml:space="preserve">
    <value>Attached document</value>
  </data>
  <data name="lblBtnAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="lblBtnAddUpdate" xml:space="preserve">
    <value>Add/Update</value>
  </data>
  <data name="lblBtnBrowse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="lblBtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lblBtnClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="lblBtnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="lblBtnNew" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="lblBtnRegisterNextProject" xml:space="preserve">
    <value>Register next project</value>
  </data>
  <data name="lblBtnRemove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="lblBtnRetrive" xml:space="preserve">
    <value>Retrieve</value>
  </data>
  <data name="lblBtnSearchCustomer" xml:space="preserve">
    <value>Search customer</value>
  </data>
  <data name="lblBtnSearchInstrument" xml:space="preserve">
    <value>Search equipment</value>
  </data>
  <data name="lblBusinessType" xml:space="preserve">
    <value>Business category</value>
  </data>
  <data name="lblCompanyName" xml:space="preserve">
    <value>Company name</value>
  </data>
  <data name="lblCompanyNameEnglish" xml:space="preserve">
    <value>Company name (English)</value>
  </data>
  <data name="lblCompanyNameLocal" xml:space="preserve">
    <value>Company name (Local)</value>
  </data>
  <data name="lblContactTelephoneNo" xml:space="preserve">
    <value>Contact telephone no.</value>
  </data>
  <data name="lblCustomerCode" xml:space="preserve">
    <value>Customer code</value>
  </data>
  <data name="lblCustomerStatus" xml:space="preserve">
    <value>Customer status</value>
  </data>
  <data name="lblCustomerType" xml:space="preserve">
    <value>Customer type</value>
  </data>
  <data name="lblDifferentFromProjectPurchaser" xml:space="preserve">
    <value>Different from project customer</value>
  </data>
  <data name="lblDocumentName" xml:space="preserve">
    <value>Document name</value>
  </data>
  <data name="lblHeadSalesman" xml:space="preserve">
    <value>Head salesman</value>
  </data>
  <data name="lblIdNoTaxIdNo" xml:space="preserve">
    <value>NPWP</value>
  </data>
  <data name="lblInstallationChief" xml:space="preserve">
    <value>Installation chief</value>
  </data>
  <data name="lblInstrumentCode" xml:space="preserve">
    <value>Equipment code</value>
  </data>
  <data name="lblMemo" xml:space="preserve">
    <value>Memo</value>
  </data>
  <data name="lblName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="lblNameEnglish" xml:space="preserve">
    <value>Name (English)</value>
  </data>
  <data name="lblNameLocal" xml:space="preserve">
    <value>Name (Local)</value>
  </data>
  <data name="lblNationality" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="lblOverallBudgetAmount" xml:space="preserve">
    <value>Overall budget amount</value>
  </data>
  <data name="lblOwner1NameEnglish" xml:space="preserve">
    <value>Owner 1 name (English)</value>
  </data>
  <data name="lblOwner1NameLocal" xml:space="preserve">
    <value>Owner 1 name (Local)</value>
  </data>
  <data name="lblOwner2NameEnglish" xml:space="preserve">
    <value>Owner 2 name (English)</value>
  </data>
  <data name="lblOwner2NameLocal" xml:space="preserve">
    <value>Owner 2 name (Local)</value>
  </data>
  <data name="lblProjectCode" xml:space="preserve">
    <value>Project code</value>
  </data>
  <data name="lblProjectManager" xml:space="preserve">
    <value>Project manager</value>
  </data>
  <data name="lblProjectName" xml:space="preserve">
    <value>Project name</value>
  </data>
  <data name="lblProjectRepresentativeAddress" xml:space="preserve">
    <value>Project representative address</value>
  </data>
  <data name="lblProjectSubManager" xml:space="preserve">
    <value>Project sub manager</value>
  </data>
  <data name="lblQuantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="lblReceivedBudgetAmount" xml:space="preserve">
    <value>Received budget amount</value>
  </data>
  <data name="lblRemark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="lblSameAsProjectPurchaser" xml:space="preserve">
    <value>Same as project customer</value>
  </data>
  <data name="lblSecurityPlanningChief" xml:space="preserve">
    <value>Security planning chief</value>
  </data>
  <data name="lblSelectOwner1" xml:space="preserve">
    <value>Select owner 1</value>
  </data>
  <data name="lblSelectOwner2" xml:space="preserve">
    <value>Select owner 2</value>
  </data>
  <data name="lblSupportStaff" xml:space="preserve">
    <value>Support staff</value>
  </data>
  <data name="lblSystemProductName" xml:space="preserve">
    <value>System (product) name</value>
  </data>
  <data name="lblTelephoneNo" xml:space="preserve">
    <value>Telephone no.</value>
  </data>
  <data name="lblThb" xml:space="preserve">
    <value>THB</value>
  </data>
  <data name="lblUrl" xml:space="preserve">
    <value>URL</value>
  </data>
</root>