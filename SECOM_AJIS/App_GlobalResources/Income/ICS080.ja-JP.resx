<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnClear" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="btnSearch" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="gridHeaderFirstPaymentAmount" xml:space="preserve">
    <value>当初入金金額</value>
  </data>
  <data name="gridHeaderInvoiceReceipt" xml:space="preserve">
    <value>&lt;div&gt;番号&lt;br /&gt;(1) 請求書&lt;br /&gt;(2) 領収書&lt;/div&gt;</value>
  </data>
  <data name="gridHeaderMatchableBalance" xml:space="preserve">
    <value>入金処理可能&lt;br&gt;残高</value>
  </data>
  <data name="gridHeaderMemo" xml:space="preserve">
    <value>メモ</value>
  </data>
  <data name="gridHeaderPayerName" xml:space="preserve">
    <value>&lt;div&gt;(1) 入金名称&lt;br/&gt;(2) Match-Rの名称&lt;/div&gt;</value>
  </data>
  <data name="gridHeaderPaymentDate" xml:space="preserve">
    <value>入金日</value>
  </data>
  <data name="gridHeaderPaymentTransNo" xml:space="preserve">
    <value>仮受番号</value>
  </data>
  <data name="gridHeaderPaymentType" xml:space="preserve">
    <value>入金タイプ</value>
  </data>
  <data name="gridHeaderSendingBank" xml:space="preserve">
    <value>仕向銀行</value>
  </data>
  <data name="lblDeleteMaintainName" xml:space="preserve">
    <value>仮受情報検索（仮受情報削除）</value>
  </data>
  <data name="lblInvoiceNo" xml:space="preserve">
    <value>請求書番号</value>
  </data>
  <data name="lblMatchableBalance" xml:space="preserve">
    <value>入金処理可能残高</value>
  </data>
  <data name="lblPayerName" xml:space="preserve">
    <value>入金名称</value>
  </data>
  <data name="lblPaymentDate" xml:space="preserve">
    <value>入金日</value>
  </data>
  <data name="lblPaymentTransactionNo" xml:space="preserve">
    <value>仮受番号</value>
  </data>
  <data name="lblPaymentType" xml:space="preserve">
    <value>入金タイプ</value>
  </data>
  <data name="lblReceiptNo" xml:space="preserve">
    <value>領収書番号</value>
  </data>
  <data name="lblMatchMaintainName" xml:space="preserve">
    <value>仮受情報検索（入金処理）</value>
  </data>
  <data name="lblSECOMBankBranch" xml:space="preserve">
    <value>入金銀行／支店</value>
  </data>
  <data name="lblSendingBank" xml:space="preserve">
    <value>仕向銀行</value>
  </data>
  <data name="lblStatus" xml:space="preserve">
    <value>状態</value>
  </data>
  <data name="lblViewMaintainName" xml:space="preserve">
    <value>仮受情報検索（入金処理実績照会）</value>
  </data>
  <data name="lblMatchableBalanceTo" xml:space="preserve">
    <value>~</value>
  </data>
  <data name="lblPaymentDateTo" xml:space="preserve">
    <value>~</value>
  </data>
  <data name="lblMaintainName" xml:space="preserve">
    <value>入金情報管理</value>
  </data>
  <data name="gridHeaderMatchingPaymentDate" xml:space="preserve">
    <value>入金処理日</value>
  </data>
  <data name="gridHeaderInvoice" xml:space="preserve">
    <value>請求書番号</value>
  </data>
  <data name="gridHeaderMaBillingClientName" xml:space="preserve">
    <value>VAT登録先名称または摘要</value>
  </data>
  <data name="gridHeaderMaBillingTargetCode" xml:space="preserve">
    <value>請求先コード</value>
  </data>
  <data name="gridHeaderMaInvoiceNo" xml:space="preserve">
    <value>請求書番号</value>
  </data>
  <data name="gridHeaderMaMatchedPaymentAmount" xml:space="preserve">
    <value>処理金額 </value>
  </data>
  <data name="gridHeaderMaMatchingPaymentDate" xml:space="preserve">
    <value>入金処理日</value>
  </data>
  <data name="gridHeaderMaPartialPayment" xml:space="preserve">
    <value>一部入金</value>
  </data>
  <data name="gridHeaderMaReceiptNo" xml:space="preserve">
    <value>領収書番号</value>
  </data>
  <data name="lblAccountNo" xml:space="preserve">
    <value>口座番号</value>
  </data>
  <data name="lblFirstPaymentAmount" xml:space="preserve">
    <value>当初入金金額</value>
  </data>
  <data name="lblMemo" xml:space="preserve">
    <value>メモ</value>
  </data>
  <data name="lblSectionViewResultMatching" xml:space="preserve">
    <value>入金処理実績照会</value>
  </data>
  <data name="lblTelephone" xml:space="preserve">
    <value>電話番号</value>
  </data>
  <data name="btnBack" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="gridHeaderSelect" xml:space="preserve">
    <value>&lt;div style="display:none;"&gt;選択&lt;/div&gt;</value>
  </data>
  <data name="gridHeaderPromissoryNoteGrid" xml:space="preserve">
    <value>&lt;div&gt;先日付小切手&lt;br /&gt;／手形&lt;br /&gt;(1) 番号&lt;br /&gt;(2) 日付&lt;/div&gt;</value>
  </data>
  <data name="lblPromissoryNoteDate" xml:space="preserve">
    <value>先日付小切手／&lt;br/&gt;手形日付</value>
  </data>
  <data name="lblPromissoryNoteNo" xml:space="preserve">
    <value>先日付小切手／&lt;br/&gt;手形番号</value>
  </data>
  <data name="btnEncash" xml:space="preserve">
    <value>セーブ</value>
  </data>
  <data name="lblEncashed" xml:space="preserve">
    <value>現金化済み</value>
  </data>
  <data name="lblSendingBankBranch" xml:space="preserve">
    <value>仕向銀行／支店</value>
  </data>
  <data name="lblChequeEncashRemark" xml:space="preserve">
    <value>Encash remark</value>
  </data>
  <data name="lblChequeReturnDate" xml:space="preserve">
    <value>Return date</value>
  </data>
  <data name="lblChequeReturnReason" xml:space="preserve">
    <value>Return reason</value>
  </data>
  <data name="lblChequeReturnRemark" xml:space="preserve">
    <value>Return remark</value>
  </data>
  <data name="lblEncash" xml:space="preserve">
    <value>Encash</value>
  </data>
  <data name="lblEncashInformation" xml:space="preserve">
    <value>Encash information</value>
  </data>
  <data name="lblEncashStatus" xml:space="preserve">
    <value>Encash status</value>
  </data>
  <data name="lblReturnCheque" xml:space="preserve">
    <value>Return cheque</value>
  </data>
  <data name="lblMatchRGroupName" xml:space="preserve">
    <value>Match-Rグループの名</value>
  </data>
  <data name="lblMyPayment" xml:space="preserve">
    <value>自分の入金</value>
  </data>
</root>